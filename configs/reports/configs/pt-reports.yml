---
ReportDefinitions:
- reportName: ReceiptRegister
  decryptionPathId: ReceiptRegister
  summary: Receipt Register
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "A1"
  sourceColumns:
  - name: receiptnumber
    label: reports.pt.receiptNo
    type: string
    source: pt
    total: false
  - name: receiptdate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: g8issuedate
    label: reports.pt.g8issuedate
    type: string
    source: pt
    total: false
  - name: g8receiptno
    label: reports.pt.g8receiptno
    type: string
    source: pt
    total: false
  - name: amount
    label: reports.pt.amount
    type: string
    source: pt
    total: true
  - name: propertytax
    label: reports.pt.propertyTax
    type: string
    source: pt
    total: true
  - name: firecess
    label: reports.pt.fireCess
    type: string
    source: pt
    total: true
  - name: cancercess
    label: reports.pt.cancerCess
    type: string
    source: pt
    total: true
  - name: rebate
    label: reports.pt.rebate
    type: string
    source: pt
    total: true
  - name: adhocrebate
    label: reports.pt.adhocrebate
    type: string
    source: pt
    total: true
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: true
  - name: adhocpenalty
    label: reports.pt.adhocpenalty
    type: string
    source: pt
    total: true
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true
  - name: exemption
    label: reports.pt.exemption
    type: string
    source: pt
    total: true
  - name: adjustment
    label: reports.pt.roundoff
    type: string
    source: pt
    total: true
  - name: pendingamount
    label: reports.pt.pendingamount
    type: string
    source: pt
    total: true
  - name: propertyid
    label: reports.pt.propertyId
    type: string
    source: pt
    total: false
  - name: usagetype
    label: reports.pt.usagetype
    type: string
    source: pt
    total: false
  - name: assessmentnumber
    label: reports.pt.assessmentNo
    type: string
    source: pt
    total: false
  - name: financialyear
    label: reports.pt.financialYear
    type: string
    source: pt
    total: false
  - name: instrumenttype
    label: reports.pt.paymentMode
    type: string
    source: pt
    total: false
  - name: transactionnumber
    label: reports.pt.ddChequeTransactionNo
    type: string
    source: pt
    total: false
  - name: transactiondate
    label: reports.pt.ddChequeTransactionDate
    type: string
    source: pt
    total: false
  - name: bankname
    label: reports.pt.bankName
    type: string
    source: pt
    total: false
  - name: collectorname
    label: reports.pt.collectorname
    type: string
    source: pt
    total: false
  - name: remarks
    label: reports.pt.remarks
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND rh.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND rh.receiptdate <= $toDate
  - name: paymentMode
    label: Payment Mode
    type: singlevaluelist
    pattern: 'list://Cash:Cash,Online:Online,Card:Card,DD:DD,Cheque:Cheque'
    source: pt
    isMandatory: false
    searchClause: AND instrumenttype = $paymentMo
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND financialyear = $financialyear
  - name: localityArray
    label: reports.pt.zoneList
    type: boundarylist
    source: pt
    isMandatory: false
    searchClause: AND pt_addr.locality IN ($localityArray)
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      WITH receipt_breakup AS (
                  SELECT 
                    receiptheader, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_PENALTY' THEN adjustedamount ELSE 0 END) as adhocpenalty, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_REBATE' THEN adjustedamount ELSE 0 END) as adhocrebate, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_FIRE_CESS' THEN adjustedamount ELSE 0 END) as firecess, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_CANCER_CESS' THEN adjustedamount ELSE 0 END) as cancercess, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST' THEN adjustedamount ELSE 0 END) as interest, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY' THEN adjustedamount ELSE 0 END) as penalty, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_REBATE' THEN adjustedamount ELSE 0 END) as rebate, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TAX' THEN adjustedamount ELSE 0 END) as propertytax, 
                    (SUM(CASE WHEN taxheadcode LIKE 'PT_UNIT_USAGE_EXEMPTION' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_OWNER_EXEMPTION' THEN adjustedamount ELSE 0 END) )as exemption,
                    ( SUM(CASE WHEN taxheadcode LIKE 'PT_ROUNDOFF' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_DEBIT' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_CREDIT' THEN adjustedamount ELSE 0 END)) as adjustment
                  FROM egcl_receiptdetails_v1 as rd
                  INNER JOIN egcl_receiptheader_v1 as rh on rh.id = rd.receiptheader
                  WHERE rd.tenantid = $tenantid and rh.status != 'Cancelled' and businessdetails='PT'
                  GROUP BY rd.receiptheader
      )
      SELECT 
        rh.tenantid AS tenantid, 
        rh.id, 
        Substring(rh.consumercode, '(.*):') AS propertyid, 
        Substring(rh.consumercode, ':(.*)') AS assessmentnumber, 
        rh.consumercode,
        to_char((To_timestamp(rh.receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS receiptdate,
        bankid AS bankname, 
        receiptnumber, 
        amount, 
        instrumenttype, 
        transactionnumber, 
        to_char((To_timestamp(transactiondate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') AS transactiondate, 
        receipt_breakup.*, 
        rh.totalamount - ih.amount AS pendingamount,
        pt_detail.financialyear,
        to_char((To_timestamp(rh.manualreceiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') AS g8issuedate,
        Initcap(COALESCE(pt_detail.usagecategoryminor, pt_detail.usagecategorymajor)) as usagetype,
        manualreceiptnumber as g8receiptno,
        (case when eg_user.name is null then '30048|23/xn3x2FAxn8vYAN0IdplsOxaE=' else eg_user.name end)  as collectorname,
        pt_detail.additionaldetails->>'remarks' as "remarks"
      FROM egcl_receiptheader_v1 AS rh
      JOIN egcl_receiptinstrument_v1 AS ri ON rh.id = ri.receiptheader
      JOIN egcl_instrumentheader_v1 AS ih ON ih.id = ri.instrumentheader
      JOIN receipt_breakup ON rh.id = receipt_breakup.receiptheader
      JOIN eg_pt_propertydetail_v2 pt_detail ON (pt_detail.property || ':' || pt_detail.assessmentnumber) = rh.consumercode
      JOIN eg_pt_address_v2 pt_addr ON pt_detail.property = pt_addr.property
      LEFT OUTER JOIN eg_user ON eg_user.id = rh.createdby::INTEGER
      WHERE rh.tenantid = $tenantid and rh.status != 'Cancelled'  and businessdetails='PT'
  orderby: ORDER BY rh.receiptdate DESC

- reportName: CancelledReceiptRegister
  summary: Receipt Register for cancelled Receipts
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "A1"
  sourceColumns:
  - name: receiptnumber
    label: reports.pt.receiptNo
    type: string
    source: pt
    total: false
  - name: status
    label: reports.pt.status
    type: string
    source: pt
    total: false
  - name: transactiondate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: g8issuedate
    label: reports.pt.g8issuedate
    type: string
    source: pt
    total: false
  - name: g8receiptno
    label: reports.pt.g8receiptno
    type: string
    source: pt
    total: false
  - name: amount
    label: reports.pt.amount
    type: string
    source: pt
    total: true
  - name: propertytax
    label: reports.pt.propertyTax
    type: string
    source: pt
    total: true
  - name: firecess
    label: reports.pt.fireCess
    type: string
    source: pt
    total: true
  - name: cancercess
    label: reports.pt.cancerCess
    type: string
    source: pt
    total: true
  - name: rebate
    label: reports.pt.rebate
    type: string
    source: pt
    total: true
  - name: adhocrebate
    label: reports.pt.adhocrebate
    type: string
    source: pt
    total: true
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: true
  - name: adhocpenalty
    label: reports.pt.adhocpenalty
    type: string
    source: pt
    total: true
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true
  - name: exemption
    label: reports.pt.exemption
    type: string
    source: pt
    total: true
  - name: adjustment
    label: reports.pt.roundoff
    type: string
    source: pt
    total: true
  - name: propertyid
    label: reports.pt.propertyId
    type: string
    source: pt
    total: false
  - name: usagetype
    label: reports.pt.usagetype
    type: string
    source: pt
    total: false
  - name: assessmentnumber
    label: reports.pt.assessmentNo
    type: string
    source: pt
    total: false
  - name: financialyear
    label: reports.pt.financialYear
    type: string
    source: pt
    total: false
  - name: instrumenttype
    label: reports.pt.paymentMode
    type: string
    source: pt
    total: false
  - name: transactionnumber
    label: reports.pt.ddChequeTransactionNo
    type: string
    source: pt
    total: false
  - name: bankname
    label: reports.pt.bankName
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND rh.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND rh.receiptdate <= $toDate
  - name: paymentMode
    label: Payment Mode
    type: singlevaluelist
    pattern: 'list://Cash:Cash,Online:Online,Card:Card,DD:DD,Cheque:Cheque'
    source: pt
    isMandatory: false
    searchClause: AND instrumenttype = $paymentMode
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND financialyear = $financialyear
  - name: localityArray
    label: reports.pt.zoneList
    type: boundarylist
    source: pt
    isMandatory: false
    searchClause: AND pt_addr.locality IN ($localityArray)
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      WITH receipt_breakup AS (
                  SELECT 
                    receiptheader, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_PENALTY' THEN adjustedamount ELSE 0 END) as adhocpenalty, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_REBATE' THEN adjustedamount ELSE 0 END) as adhocrebate, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_FIRE_CESS' THEN adjustedamount ELSE 0 END) as firecess, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_CANCER_CESS' THEN adjustedamount ELSE 0 END) as cancercess, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST' THEN adjustedamount ELSE 0 END) as interest, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY' THEN adjustedamount ELSE 0 END) as penalty, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_REBATE' THEN adjustedamount ELSE 0 END) as rebate, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TAX' THEN adjustedamount ELSE 0 END) as propertytax, 
                    (SUM(CASE WHEN taxheadcode LIKE 'PT_UNIT_USAGE_EXEMPTION' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_OWNER_EXEMPTION' THEN adjustedamount ELSE 0 END) )as exemption, 
                    ( SUM(CASE WHEN taxheadcode LIKE 'PT_ROUNDOFF' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_DEBIT' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_CREDIT' THEN adjustedamount ELSE 0 END)) as adjustment
                  FROM egcl_receiptdetails_v1 as rd
                  INNER JOIN egcl_receiptheader_v1 as rh on rh.id = rd.receiptheader
                  WHERE rd.tenantid = $tenantid and rh.status = 'Cancelled'   and businessdetails='PT'
                  GROUP BY rd.receiptheader
      )
      SELECT 
        rh.tenantid AS tenantid, 
        rh.id, 
        Substring(rh.consumercode, '(.*):') AS propertyid, 
        Substring(rh.consumercode, ':(.*)') AS assessmentnumber, 
        rh.status,
        rh.consumercode, 
        rh.receiptdate, 
        to_char((To_timestamp(rh.receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS transactiondate,
        bankid AS bankname, 
        receiptnumber, 
        amount, 
        instrumenttype, 
        transactionnumber, 
        receipt_breakup.*, 
        rh.totalamount - ih.amount AS pendingamount,
        pt_detail.financialyear,
        to_char((To_timestamp(rh.manualreceiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') AS g8issuedate,
        Initcap(COALESCE(pt_detail.usagecategoryminor, pt_detail.usagecategorymajor)) as usagetype,
        manualreceiptnumber as g8receiptno
      FROM egcl_receiptheader_v1 AS rh
      JOIN egcl_receiptinstrument_v1 AS ri ON rh.id = ri.receiptheader
      JOIN egcl_instrumentheader_v1 AS ih ON ih.id = ri.instrumentheader
      JOIN receipt_breakup ON rh.id = receipt_breakup.receiptheader
      JOIN eg_pt_propertydetail_v2 pt_detail ON (pt_detail.property || ':' || pt_detail.assessmentnumber) = rh.consumercode
      JOIN eg_pt_address_v2 pt_addr ON pt_detail.property = pt_addr.property
      WHERE rh.tenantid = $tenantid and rh.status = 'Cancelled'   and businessdetails='PT'
  orderby: ORDER BY rh.receiptdate DESC

- reportName: OldUlbWisePtCollection
  summary: ULB-wise PT Collection
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: totalassessments
    label: reports.pt.totalassessments
    type: string
    source: pt
    total: true
  - name: totalamountpaid
    label: reports.pt.totalamountpaid
    type: string
    source: pt
    total: true
  - name: totalamountdue
    label: reports.pt.totalamountdue
    type: string
    source: pt
    total: true
  searchParams:
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND financialyear = $financialyear
  - name: usage
    label: Usage
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=PropertyTax&masterName=UsageCategoryMajor|$..code|$..name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND usagecategorymajor = $usage
  query: |
    SELECT 
      tenantid, 
      COUNT(*) AS totalassessments, 
      SUM(totalamount) AS totalamount, 
      SUM(amount) AS totalamountpaid, 
      (SUM(totalamount) - SUM(amount)) AS totalamountdue 
    FROM eg_pt_propertydetail_v2 AS pd 
    LEFT OUTER JOIN 
      (SELECT consumercode, totalamount, amount FROM egcl_receiptheader_v1 AS rh 
      LEFT OUTER JOIN egcl_receiptinstrument_v1 AS ri ON rh.id = ri.receiptheader 
      LEFT OUTER JOIN egcl_instrumentheader_v1 AS ih ON ri.instrumentheader = ih.id 
      and ih.instrumentstatus	 != 'CANCELLED' 
      where rh.status != 'Cancelled'
      ) AS instrument_data ON (pd.property || ':' || pd.assessmentnumber) = instrument_data.consumercode 
    WHERE tenantid = $tenantid
  groupby: GROUP BY tenantid
  orderby: ORDER BY tenantid, totalamountpaid DESC NULLS LAST

- reportName: StateCancelledReceiptRegister
  summary: Receipt Register for cancelled Receipts State
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "A1"
  sourceColumns:
  - name: tenantid
    label: reports.pt.ulbName
    type: string
    source: pt
    total: false
  - name: receiptnumber
    label: reports.pt.receiptNo
    type: string
    source: pt
    total: false
  - name: status
    label: reports.pt.status
    type: string
    source: pt
    total: false
  - name: transactiondate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: g8issuedate
    label: reports.pt.g8issuedate
    type: string
    source: pt
    total: false
  - name: g8receiptno
    label: reports.pt.g8receiptno
    type: string
    source: pt
    total: false
  - name: amount
    label: reports.pt.amount
    type: string
    source: pt
    total: true
  - name: propertytax
    label: reports.pt.propertyTax
    type: string
    source: pt
    total: true
  - name: firecess
    label: reports.pt.fireCess
    type: string
    source: pt
    total: true
  - name: cancercess
    label: reports.pt.cancerCess
    type: string
    source: pt
    total: true
  - name: rebate
    label: reports.pt.rebate
    type: string
    source: pt
    total: true
  - name: adhocrebate
    label: reports.pt.adhocrebate
    type: string
    source: pt
    total: true
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: true
  - name: adhocpenalty
    label: reports.pt.adhocpenalty
    type: string
    source: pt
    total: true
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true
  - name: exemption
    label: reports.pt.exemption
    type: string
    source: pt
    total: true
  - name: adjustment
    label: reports.pt.roundoff
    type: string
    source: pt
    total: true
  - name: propertyid
    label: reports.pt.propertyId
    type: string
    source: pt
    total: false
  - name: usagetype
    label: reports.pt.usagetype
    type: string
    source: pt
    total: false
  - name: assessmentnumber
    label: reports.pt.assessmentNo
    type: string
    source: pt
    total: false
  - name: financialyear
    label: reports.pt.financialYear
    type: string
    source: pt
    total: false
  - name: instrumenttype
    label: reports.pt.paymentMode
    type: string
    source: pt
    total: false
  - name: transactionnumber
    label: reports.pt.ddChequeTransactionNo
    type: string
    source: pt
    total: false
  - name: bankname
    label: reports.pt.bankName
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND rh.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND rh.receiptdate <= $toDate
  - name: paymentMode
    label: Payment Mode
    type: singlevaluelist
    pattern: 'list://Cash:Cash,Online:Online,Card:Card,DD:DD,Cheque:Cheque'
    source: pt
    isMandatory: false
    searchClause: AND instrumenttype = $paymentMode
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND financialyear = $financialyear
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      WITH receipt_breakup AS (
                  SELECT 
                    receiptheader, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_PENALTY' THEN adjustedamount ELSE 0 END) as adhocpenalty, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_REBATE' THEN adjustedamount ELSE 0 END) as adhocrebate, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_FIRE_CESS' THEN adjustedamount ELSE 0 END) as firecess, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_CANCER_CESS' THEN adjustedamount ELSE 0 END) as cancercess, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST' THEN adjustedamount ELSE 0 END) as interest, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY' THEN adjustedamount ELSE 0 END) as penalty, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_REBATE' THEN adjustedamount ELSE 0 END) as rebate, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TAX' THEN adjustedamount ELSE 0 END) as propertytax, 
                    (SUM(CASE WHEN taxheadcode LIKE 'PT_UNIT_USAGE_EXEMPTION' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_OWNER_EXEMPTION' THEN adjustedamount ELSE 0 END) )as exemption, 
                    ( SUM(CASE WHEN taxheadcode LIKE 'PT_ROUNDOFF' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_DEBIT' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_CREDIT' THEN adjustedamount ELSE 0 END)) as adjustment
                  FROM egcl_receiptdetails_v1 as rd
                  INNER JOIN egcl_receiptheader_v1 as rh on rh.id = rd.receiptheader
                  WHERE rd.tenantid !='pb.testing' and rh.status = 'Cancelled'  and businessdetails='PT'
                  GROUP BY rd.receiptheader
      )
      SELECT 
        rh.tenantid AS tenantid, 
        rh.id, 
        Substring(rh.consumercode, '(.*):') AS propertyid, 
        Substring(rh.consumercode, ':(.*)') AS assessmentnumber, 
        rh.status,
        rh.consumercode, 
        rh.receiptdate, 
        to_char((To_timestamp(rh.receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS transactiondate, 
        bankid AS bankname, 
        receiptnumber, 
        amount, 
        instrumenttype, 
        transactionnumber, 
        receipt_breakup.*, 
        rh.totalamount - ih.amount AS pendingamount,
        pt_detail.financialyear,
        to_char((To_timestamp(rh.manualreceiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS g8issuedate,
        Initcap(COALESCE(pt_detail.usagecategoryminor, pt_detail.usagecategorymajor)) as usagetype,
        manualreceiptnumber as g8receiptno
      FROM egcl_receiptheader_v1 AS rh
      JOIN egcl_receiptinstrument_v1 AS ri ON rh.id = ri.receiptheader
      JOIN egcl_instrumentheader_v1 AS ih ON ih.id = ri.instrumentheader
      JOIN receipt_breakup ON rh.id = receipt_breakup.receiptheader
      JOIN eg_pt_propertydetail_v2 pt_detail ON (pt_detail.property || ':' || pt_detail.assessmentnumber) = rh.consumercode
      JOIN eg_pt_address_v2 pt_addr ON pt_detail.property = pt_addr.property
      WHERE rh.tenantid != 'pb.testing' and rh.status = 'Cancelled'  and businessdetails='PT'
  orderby: ORDER BY rh.receiptdate DESC

- reportName: StateWidePtCollection
  summary: State Wide PT Collection
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: tenantid
    label: reports.pt.ulbName
    type: string
    source: pt
    total: false
  - name: totalassessments
    label: reports.pt.totalassessments
    type: string
    source: pt
    total: true
  - name: totalamountpaid
    label: reports.pt.totalamountpaid
    type: string
    source: pt
    total: true
  - name: totaloffline
    label: reports.pt.totaloffline
    type: string
    source: pt
    total: true
  - name: totalonline
    label: reports.pt.totalonline
    type: string
    source: pt
    total: true
  - name: totalamountdue
    label: reports.pt.totalamountdue
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND receiptdate <= $toDate
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND tenantid = $ulb
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND financialyear = $financialyear
  - name: usage
    label: Usage
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=PropertyTax&masterName=UsageCategoryMajor|$..code|$..name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND usagecategorymajor = $usage
  query: |
      SELECT 
      initcap(split_part(tenantid, '.', 2)) as tenantid, 
      COUNT(*) AS totalassessments, 
      SUM(totalamount) AS totalamount, 
      SUM(amount) AS totalamountpaid, 
      SUM(CASE WHEN collectiontype LIKE 'ONLINE' THEN amount ELSE 0 END) AS totalonline, 
      SUM(CASE WHEN collectiontype LIKE 'COUNTER' THEN amount ELSE 0 END) AS totaloffline, 
      (SUM(totalamount) - SUM(amount)) AS totalamountdue 
      FROM eg_pt_propertydetail_v2 AS pd 
      LEFT OUTER JOIN (SELECT consumercode, totalamount, amount, collectiontype, receiptdate FROM egcl_receiptheader_v1 AS rh 
      LEFT OUTER JOIN egcl_receiptinstrument_v1 AS ri ON rh.id = ri.receiptheader 
      LEFT OUTER JOIN egcl_instrumentheader_v1 AS ih ON ri.instrumentheader = ih.id and ih.instrumentstatus	 != 'CANCELLED' 
      where rh.status != 'Cancelled' and rh.tenantid != 'pb.testing'  and businessdetails='PT'
      ) AS tbl_amounts ON (pd.property || ':' || pd.assessmentnumber) = tbl_amounts.consumercode 
      WHERE tenantid not in ('pb.testing','pb.ludhiana_legacy')
  groupby: GROUP BY tenantid
  orderby: ORDER BY tenantid, totalamountpaid DESC NULLS LAST

- reportName: UlbWisePtCollection
  summary: State Wide PT Collection
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: totalassessments
    label: reports.pt.totalassessments
    type: string
    source: pt
    total: true
  - name: totalamountpaid
    label: reports.pt.totalamountpaid
    type: string
    source: pt
    total: true
  - name: totaloffline
    label: reports.pt.totaloffline
    type: string
    source: pt
    total: true
  - name: countoffline
    label: reports.pt.countoffline
    type: string
    source: pt
    total: true
  - name: totalonline
    label: reports.pt.totalonline
    type: string
    source: pt
    total: true
  - name: countonline
    label: reports.pt.countonline
    type: string
    source: pt
    total: true  
  - name: totalamountdue
    label: reports.pt.totalamountdue
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND receiptdate <= $toDate
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND financialyear = $financialyear
  - name: usage
    label: Usage
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=PropertyTax&masterName=UsageCategoryMajor|$..code|$..name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND usagecategorymajor = $usage
  query: |
      SELECT 
      initcap(split_part(tenantid, '.', 2)) as tenantid, 
      COUNT(collectiontype) AS totalassessments, 
      SUM(totalamount) AS totalamount, 
      SUM(amount) AS totalamountpaid, 
      SUM(CASE WHEN collectiontype LIKE 'ONLINE' THEN amount ELSE 0 END) AS totalonline, 
      SUM(CASE WHEN collectiontype LIKE 'ONLINE' THEN 1 ELSE 0 END) AS countonline,
      SUM(CASE WHEN collectiontype LIKE 'COUNTER' THEN amount ELSE 0 END) AS totaloffline,
      SUM(CASE WHEN collectiontype LIKE 'COUNTER' THEN 1 ELSE 0 END) AS countoffline, 
      (SUM(totalamount) - SUM(amount)) AS totalamountdue 
      FROM eg_pt_propertydetail_v2 AS pd 
      LEFT OUTER JOIN (SELECT consumercode, totalamount, amount, collectiontype, receiptdate FROM egcl_receiptheader_v1 AS rh 
      LEFT OUTER JOIN egcl_receiptinstrument_v1 AS ri ON rh.id = ri.receiptheader 
      LEFT OUTER JOIN egcl_instrumentheader_v1 AS ih ON ri.instrumentheader = ih.id and ih.instrumentstatus	 != 'CANCELLED' 
      where rh.status != 'Cancelled'
      ) AS tbl_amounts ON (pd.property || ':' || pd.assessmentnumber) = tbl_amounts.consumercode 
      WHERE tenantid LIKE CONCAT(SPLIT_PART($tenantid, '.', 1), '%') and tenantid = $tenantid
  groupby: GROUP BY tenantid
  orderby: ORDER BY tenantid, totalamountpaid DESC NULLS LAST


- reportName: ULBPTDataDumpReportOld
  summary: ULB level report
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: ulb
    label: reports.pt.ulb
    type: string
    source: pt
    total: false
  - name: propertytaxuniqueid
    label: reports.pt.propertytaxuniqueid
    type: string
    source: pt
    total: false  
  - name: transcationdate
    label: reports.pt.transcationdate
    type: string
    source: pt
    total: false  
  - name: receiptnumber
    label: reports.pt.receiptnumber
    type: string
    source: pt
    total: false  
  - name: existingpropertyid
    label: reports.pt.existingpropertyid
    type: string
    source: pt
    total: false
  - name: financialyear
    label: reports.pt.financialYear
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false  
  - name: guardianname
    label: reports.pt.guardianname
    type: string
    source: pt
    total: false
  - name: totalarea
    label: reports.pt.totalarea
    type: string
    source: pt
    total: false  
  - name: builtarea
    label: reports.pt.builtarea
    type: string
    source: pt
    total: false
  - name: floors
    label: reports.pt.floors
    type: string
    source: pt
    total: false  
  - name: occupancy
    label: reports.pt.occupancy
    type: string
    source: pt
    total: false
  - name: propertytype
    label: reports.pt.propertytype
    type: string
    source: pt
    total: false  
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false  
  - name: transcationmode
    label: reports.pt.transcationmode
    type: string
    source: pt
    total: false 
  - name: paymentamount
    label: reports.pt.paymentamount
    type: string
    source: pt
    total: true 
  - name: paymentdate
    label: reports.pt.paymentdate
    type: string
    source: pt
    total: false 
  - name: emailid
    label: reports.pt.emailid
    type: string
    source: pt
    total: false 
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false
  - name: remarks
    label: reports.pt.remarks
    type: string
    source: pt
    total: false
  - name: businessname
    label: reports.pt.businessname
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND rh.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND rh.receiptdate <= $toDate
  query: |
    --S.no    Service Name	ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number	Existing Property ID    Owner Name    Guardian Name    Total Area (SQ.YARD)    Covered  Area/Built Area (SQ.FEET)    Floors    Occupancy (Rented,Self /Unoccupied)    Type Of Property	Mobile Number    Transcation Mode of Payment    Payment Amount    Payment Date    Email Id	Address
    with eg_pt_unit_v2_ot as (
      select 
        propertydetail, 
        string_agg(distinct pu.occupancytype, ',') as occupancytype, 
        string_agg(distinct coalesce(usagecategoryminor, usagecategorymajor), ',') as propertytype 
      from eg_pt_unit_v2 as pu
      where  pu.tenantid = $tenantid
      group by propertydetail
    )
    select 
      distinct on (rh.receiptnumber)
      initcap(split_part(rh.tenantid, '.', 2)) as "ulb",
      split_part(consumercode, ':', 1) as "propertytaxuniqueid",
      to_char((To_timestamp(receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS  "transcationdate",
      receiptnumber    as "receiptnumber",
      pt.oldpropertyid as "existingpropertyid",
      pd.financialyear as "financialyear",
      eu."name" as "ownername", 
      eu.guardian     as "guardianname",
      pd.landarea     as "totalarea",
      pd.builduparea     * 9 as "builtarea",    
      pd.nooffloors     as "floors",
      pot.occupancytype as "occupancy",
      pot.propertytype     as "propertytype",
      eu.mobilenumber as "mobileno",
      instrumenttype as "transcationmode",
      ih.amount as "paymentamount",
      to_char((To_timestamp(ih.transactiondate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS "paymentdate",
      eu.emailid     as "emailid"    ,
      REGEXP_REPLACE(REGEXP_REPLACE(CONCAT(pta.doorno, ',', pta.addressline1, ',', pta.addressline2, ',', pta.buildingname, ',', pta.pincode), ',+', ','), '^,|,$', '') as "address",
      pd.additionaldetails->>'remarks' as "remarks",
      pt.additionaldetails->>'FirmBusinessName' as "businessname"
    from egcl_receiptheader_v1 as rh
    inner join egcl_receiptinstrument_v1 as ri on ri.receiptheader = rh.id    
    inner join egcl_instrumentheader_v1     as ih on ih.id = ri.instrumentheader
    inner join eg_pt_property_v2    as pt on pt.propertyid = split_part(consumercode, ':', 1)
    inner join eg_pt_propertydetail_v2    as pd on pd.assessmentnumber = split_part(consumercode, ':', 2)
    inner join eg_pt_owner_v2     as po on po.propertydetail = pd.assessmentnumber
    inner join eg_user as eu on eu.uuid     = po.userid
    inner join eg_pt_address_v2    as pta on pta.property = pt.propertyid
    left outer join eg_pt_unit_v2_ot as pot on pot.propertydetail = pd.assessmentnumber
    where rh.tenantid = $tenantid and rh.status != 'Cancelled'

- reportName: ReceiptRegisterShort
  summary: Receipt Register
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "Legal"
  sourceColumns:
  - name: receiptnumber
    label: reports.pt.receiptNo
    type: string
    source: pt
    total: false
  - name: transactiondate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: g8receiptno
    label: reports.pt.g8book
    type: string
    source: pt
    total: false
  - name: g8issuedate
    label: reports.pt.g8dated
    type: string
    source: pt
    total: false
  - name: propertyid
    label: reports.pt.ptrId
    type: string
    source: pt
    total: false
  - name: financialyear
    label: reports.pt.financialYear
    type: string
    source: pt
    total: false
  - name: instrumenttype
    label: reports.pt.paymentMode
    type: string
    source: pt
    total: false
  - name: amount
    label: reports.pt.taxamount
    type: string
    source: pt
    total: true
  - name: transactionnumber
    label: reports.pt.ddChequeNo
    type: string
    source: pt
    total: false
  - name: bankname
    label: reports.pt.bankName
    type: string
    source: pt
    total: false
  - name: collectorname
    label: reports.pt.collectorname
    type: string
    source: pt
    total: false
  - name: remarks
    label: reports.pt.remarks
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND rh.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND rh.receiptdate <= $toDate
  - name: paymentMode
    label: Payment Mode
    type: singlevaluelist
    pattern: 'list://Cash:Cash,Online:Online,Card:Card,DD:DD,Cheque:Cheque'
    source: pt
    isMandatory: false
    searchClause: AND instrumenttype = $paymentMode
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND financialyear = $financialyear
  - name: localityArray
    label: reports.pt.zoneList
    type: boundarylist
    source: pt
    isMandatory: false
    searchClause: AND pt_addr.locality IN ($localityArray)
  - name: collectorname
    label: reports.pt.collectorname
    type: singlevaluelist
    pattern: http://egov-hrms:8080/egov-hrms/employees/_search?tenantId=$tenantid&roles=PTCEMP|$.Employees[*].user.id|$.Employees[*].user.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND eg_user.id = $collectorname::INTEGER
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      WITH receipt_breakup AS (
                  SELECT 
                    receiptheader, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_PENALTY' THEN adjustedamount ELSE 0 END) as adhocpenalty, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_REBATE' THEN adjustedamount ELSE 0 END) as adhocrebate, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_FIRE_CESS' THEN adjustedamount ELSE 0 END) as firecess, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_CANCER_CESS' THEN adjustedamount ELSE 0 END) as cancercess, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST' THEN adjustedamount ELSE 0 END) as interest, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY' THEN adjustedamount ELSE 0 END) as penalty, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_REBATE' THEN adjustedamount ELSE 0 END) as rebate, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TAX' THEN adjustedamount ELSE 0 END) as propertytax, 
                    (SUM(CASE WHEN taxheadcode LIKE 'PT_UNIT_USAGE_EXEMPTION' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_OWNER_EXEMPTION' THEN adjustedamount ELSE 0 END) )as exemption,
                    ( SUM(CASE WHEN taxheadcode LIKE 'PT_ROUNDOFF' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_DEBIT' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_CREDIT' THEN adjustedamount ELSE 0 END)) as adjustment
                  FROM egcl_receiptdetails_v1 as rd
                  INNER JOIN egcl_receiptheader_v1 as rh on rh.id = rd.receiptheader
                  WHERE rd.tenantid = $tenantid and rh.status != 'Cancelled'  and businessdetails ='PT'
                  GROUP BY rd.receiptheader
      )
      SELECT 
        rh.tenantid AS tenantid, 
        rh.id, 
        Substring(rh.consumercode, '(.*):') AS propertyid, 
        Substring(rh.consumercode, ':(.*)') AS assessmentnumber, 
        rh.consumercode, 
        rh.receiptdate, 
        to_char((To_timestamp(rh.receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS transactiondate,
        bankid AS bankname, 
        receiptnumber, 
        amount, 
        instrumenttype, 
        transactionnumber, 
        receipt_breakup.*, 
        rh.totalamount - ih.amount AS pendingamount,
        pt_detail.financialyear,
        to_char((To_timestamp(rh.manualreceiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS g8issuedate,
        Initcap(COALESCE(pt_detail.usagecategoryminor, pt_detail.usagecategorymajor)) as usagetype,
        manualreceiptnumber as g8receiptno,
        (CASE WHEN collectiontype='COUNTER' THEN eg_user.name ELSE '' END) as collectorname,
        pt_detail.additionaldetails->>'remarks' as "remarks"
      FROM egcl_receiptheader_v1 AS rh
      JOIN egcl_receiptinstrument_v1 AS ri ON rh.id = ri.receiptheader
      JOIN egcl_instrumentheader_v1 AS ih ON ih.id = ri.instrumentheader
      JOIN receipt_breakup ON rh.id = receipt_breakup.receiptheader
      JOIN eg_pt_propertydetail_v2 pt_detail ON (pt_detail.property || ':' || pt_detail.assessmentnumber) = rh.consumercode
      JOIN eg_pt_address_v2 pt_addr ON pt_detail.property = pt_addr.property
      LEFT OUTER JOIN eg_user ON eg_user.id = rh.createdby::INTEGER
      WHERE rh.tenantid = $tenantid and rh.status != 'Cancelled'  and businessdetails ='PT'
  orderby: ORDER BY rh.receiptdate DESC


- reportName: ULBPTDataDumpReport
  summary: ULB level report
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: ulb
    label: reports.pt.ulb
    type: string
    source: pt
    total: false
  - name: propertytaxuniqueid
    label: reports.pt.propertytaxuniqueid
    type: string
    source: pt
    total: false  
  - name: transcationdate
    label: reports.pt.transcationdate
    type: string
    source: pt
    total: false  
  - name: receiptnumber
    label: reports.pt.receiptnumber
    type: string
    source: pt
    total: false  
  - name: existingpropertyid
    label: reports.pt.existingpropertyid
    type: string
    source: pt
    total: false
  - name: financialyear
    label: reports.pt.financialYear
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false  
  - name: guardianname
    label: reports.pt.guardianname
    type: string
    source: pt
    total: false
  - name: totalarea
    label: reports.pt.totalarea
    type: string
    source: pt
    total: false  
  - name: builtarea
    label: reports.pt.builtarea
    type: string
    source: pt
    total: false
  - name: floors
    label: reports.pt.floors
    type: string
    source: pt
    total: false  
  - name: occupancy
    label: reports.pt.occupancy
    type: string
    source: pt
    total: false
  - name: propertytype
    label: reports.pt.propertytype
    type: string
    source: pt
    total: false  
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false  
  - name: transcationmode
    label: reports.pt.transcationmode
    type: string
    source: pt
    total: false 
  - name: paymentamount
    label: reports.pt.paymentamount
    type: string
    source: pt
    total: true 
  - name: paymentdate
    label: reports.pt.paymentdate
    type: string
    source: pt
    total: false 
  - name: emailid
    label: reports.pt.emailid
    type: string
    source: pt
    total: false 
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false
  - name: payeraddress
    label: reports.pt.payeraddress
    type: string
    source: pt
    total: false
  - name: remarks
    label: reports.pt.remarks
    type: string
    source: pt
    total: false
  - name: businessname
    label: reports.pt.businessname
    type: string
    source: pt
    total: false
  - name: localitycode
    label: reports.pt.localitycode
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND rh.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND rh.receiptdate <= $toDate
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND pd.financialyear = $financialyear
  - name: localityArray
    label: reports.pt.zoneList
    type: boundarylist
    source: pt
    isMandatory: false
    searchClause: AND pta.locality IN ($localityArray)
  query: |
    --S.no    Service Name	ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number	Existing Property ID    Owner Name    Guardian Name    Total Area (SQ.YARD)    Covered  Area/Built Area (SQ.FEET)    Floors    Occupancy (Rented,Self /Unoccupied)    Type Of Property	Mobile Number    Transcation Mode of Payment    Payment Amount    Payment Date    Email Id	Address
    with eg_pt_unit_v2_ot as (
      select 
        propertydetail, 
        string_agg(distinct pu.occupancytype, ',') as occupancytype, 
        string_agg(distinct coalesce(usagecategoryminor, usagecategorymajor), ',') as propertytype 
      from eg_pt_unit_v2 as pu
      where  pu.tenantid = $tenantid
      group by propertydetail
    )
    select 
      distinct on (rh.receiptnumber)
      initcap(split_part(rh.tenantid, '.', 2)) as "ulb",
      split_part(consumercode, ':', 1) as "propertytaxuniqueid",
      to_char((To_timestamp(receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS  "transcationdate",
      receiptnumber    as "receiptnumber",
      pt.oldpropertyid as "existingpropertyid",
      pd.financialyear as "financialyear",
      eu."name" as "ownername", 
      eu.guardian     as "guardianname",
      pd.landarea     as "totalarea",
      pd.builduparea     * 9 as "builtarea",    
      pd.nooffloors     as "floors",
      pot.occupancytype as "occupancy",
      pot.propertytype     as "propertytype",
      eu.mobilenumber as "mobileno",
      instrumenttype as "transcationmode",
      ih.amount as "paymentamount",
      to_char((To_timestamp(ih.transactiondate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS "paymentdate",
      eu.emailid     as "emailid",
      REGEXP_REPLACE(REGEXP_REPLACE(CONCAT(pta.doorno, ',', pta.addressline1, ',', pta.addressline2, ',', pta.buildingname, ',', pta.pincode), ',+', ','), '^,|,$', '') as "address",
      rh.payeraddress as "payeraddress",
      pd.additionaldetails->>'remarks' as "remarks",
      pt.additionaldetails->>'FirmBusinessName' as "businessname",
      pta.locality as "localitycode"
    from egcl_receiptheader_v1 as rh
    inner join egcl_receiptinstrument_v1 as ri on ri.receiptheader = rh.id    
    inner join egcl_instrumentheader_v1     as ih on ih.id = ri.instrumentheader
    inner join eg_pt_property_v2    as pt on pt.propertyid = split_part(consumercode, ':', 1)
    inner join eg_pt_propertydetail_v2    as pd on pd.assessmentnumber = split_part(consumercode, ':', 2)
    inner join eg_pt_owner_v2     as po on po.propertydetail = pd.assessmentnumber
    inner join eg_user as eu on eu.uuid     = po.userid
    inner join eg_pt_address_v2    as pta on pta.property = pt.propertyid
    left outer join eg_pt_unit_v2_ot as pot on pot.propertydetail = pd.assessmentnumber
    where rh.tenantid = $tenantid and rh.status != 'Cancelled' and businessdetails ='PT'

- reportName: Sewa_Kendra_ReceiptRegister
  summary: Sewa Kendra Receipt Register
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "A1"
  sourceColumns:
  - name: receiptnumber
    label: reports.pt.receiptNo
    type: string
    source: pt
    total: false
  - name: receiptdate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: g8issuedate
    label: reports.pt.g8issuedate
    type: string
    source: pt
    total: false
  - name: g8receiptno
    label: reports.pt.g8receiptno
    type: string
    source: pt
    total: false
  - name: amount
    label: reports.pt.amount
    type: string
    source: pt
    total: true
  - name: propertytax
    label: reports.pt.propertyTax
    type: string
    source: pt
    total: true
  - name: firecess
    label: reports.pt.fireCess
    type: string
    source: pt
    total: true
  - name: cancercess
    label: reports.pt.cancerCess
    type: string
    source: pt
    total: true
  - name: rebate
    label: reports.pt.rebate
    type: string
    source: pt
    total: true
  - name: adhocrebate
    label: reports.pt.adhocrebate
    type: string
    source: pt
    total: true
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: true
  - name: adhocpenalty
    label: reports.pt.adhocpenalty
    type: string
    source: pt
    total: true
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true
  - name: exemption
    label: reports.pt.exemption
    type: string
    source: pt
    total: true
  - name: adjustment
    label: reports.pt.roundoff
    type: string
    source: pt
    total: true
  - name: pendingamount
    label: reports.pt.pendingamount
    type: string
    source: pt
    total: true
  - name: propertyid
    label: reports.pt.propertyId
    type: string
    source: pt
    total: false
  - name: usagetype
    label: reports.pt.usagetype
    type: string
    source: pt
    total: false
  - name: assessmentnumber
    label: reports.pt.assessmentNo
    type: string
    source: pt
    total: false
  - name: financialyear
    label: reports.pt.financialYear
    type: string
    source: pt
    total: false
  - name: instrumenttype
    label: reports.pt.paymentMode
    type: string
    source: pt
    total: false
  - name: transactionnumber
    label: reports.pt.ddChequeTransactionNo
    type: string
    source: pt
    total: false
  - name: transactiondate
    label: reports.pt.ddChequeTransactionDate
    type: string
    source: pt
    total: false
  - name: bankname
    label: reports.pt.bankName
    type: string
    source: pt
    total: false
  - name: collectorname
    label: reports.pt.collectorname
    type: string
    source: pt
    total: false
  - name: remarks
    label: reports.pt.remarks
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND rh.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND rh.receiptdate <= $toDate
  - name: paymentMode
    label: Payment Mode
    type: singlevaluelist
    pattern: 'list://Cash:Cash,Online:Online,Card:Card,DD:DD,Cheque:Cheque'
    source: pt
    isMandatory: false
    searchClause: AND instrumenttype = $paymentMode
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND financialyear = $financialyear
  - name: localityArray
    label: reports.pt.zoneList
    type: boundarylist
    source: pt
    isMandatory: false
    searchClause: AND pt_addr.locality IN ($localityArray)
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      WITH receipt_breakup AS (
                  SELECT 
                    receiptheader, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_PENALTY' THEN adjustedamount ELSE 0 END) as adhocpenalty, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_REBATE' THEN adjustedamount ELSE 0 END) as adhocrebate, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_FIRE_CESS' THEN adjustedamount ELSE 0 END) as firecess, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_CANCER_CESS' THEN adjustedamount ELSE 0 END) as cancercess, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST' THEN adjustedamount ELSE 0 END) as interest, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY' THEN adjustedamount ELSE 0 END) as penalty, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_REBATE' THEN adjustedamount ELSE 0 END) as rebate, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TAX' THEN adjustedamount ELSE 0 END) as propertytax, 
                    (SUM(CASE WHEN taxheadcode LIKE 'PT_UNIT_USAGE_EXEMPTION' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_OWNER_EXEMPTION' THEN adjustedamount ELSE 0 END) )as exemption,
                    ( SUM(CASE WHEN taxheadcode LIKE 'PT_ROUNDOFF' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_DEBIT' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_CREDIT' THEN adjustedamount ELSE 0 END)) as adjustment
                  FROM egcl_receiptdetails_v1 as rd
                  INNER JOIN egcl_receiptheader_v1 as rh on rh.id = rd.receiptheader
                  WHERE rd.tenantid = $tenantid and rh.status != 'Cancelled' and businessdetails='PT' and rh.createdby::INTEGER in (select user_id from eg_userrole_v1 where role_code ='SEVA_KENDRA_EMP')
                  GROUP BY rd.receiptheader
      )
      SELECT 
        rh.tenantid AS tenantid, 
        rh.id, 
        Substring(rh.consumercode, '(.*):') AS propertyid, 
        Substring(rh.consumercode, ':(.*)') AS assessmentnumber, 
        rh.consumercode,
        to_char((To_timestamp(rh.receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS receiptdate,
        bankid AS bankname, 
        receiptnumber, 
        amount, 
        instrumenttype, 
        transactionnumber, 
        to_char((To_timestamp(transactiondate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') AS transactiondate, 
        receipt_breakup.*, 
        rh.totalamount - ih.amount AS pendingamount,
        pt_detail.financialyear,
        to_char((To_timestamp(rh.manualreceiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') AS g8issuedate,
        Initcap(COALESCE(pt_detail.usagecategoryminor, pt_detail.usagecategorymajor)) as usagetype,
        manualreceiptnumber as g8receiptno,
        (case when eg_user.name is null then '30048|23/xn3x2FAxn8vYAN0IdplsOxaE=' else eg_user.name end)  as collectorname,
        pt_detail.additionaldetails->>'remarks' as "remarks"
      FROM egcl_receiptheader_v1 AS rh
      JOIN egcl_receiptinstrument_v1 AS ri ON rh.id = ri.receiptheader
      JOIN egcl_instrumentheader_v1 AS ih ON ih.id = ri.instrumentheader
      JOIN receipt_breakup ON rh.id = receipt_breakup.receiptheader
      JOIN eg_pt_propertydetail_v2 pt_detail ON (pt_detail.property || ':' || pt_detail.assessmentnumber) = rh.consumercode
      JOIN eg_pt_address_v2 pt_addr ON pt_detail.property = pt_addr.property
      LEFT OUTER JOIN eg_user ON eg_user.id = rh.createdby::INTEGER
      WHERE rh.tenantid = $tenantid and rh.status != 'Cancelled'  and businessdetails='PT' and rh.createdby::INTEGER in 
      (select user_id from eg_userrole_v1 where role_code ='SEVA_KENDRA_EMP')
  orderby: ORDER BY rh.receiptdate DESC

- reportName: ReceiptRegisterSummary
  summary: Receipt Register Summary
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "A1"
  sourceColumns:
  - name: ulb
    label: reports.pt.ulb
    type: string
    source: pt
    total: false
  - name: adhocpenalty
    label: reports.pt.adhocpenalty
    type: string
    source: pt
    total: true
  - name: adhocrebate
    label: reports.pt.adhocrebate
    type: string
    source: pt
    total: true
  - name: firecess
    label: reports.pt.firecess
    type: string
    source: pt
    total: true
  - name: cancercess
    label: reports.pt.cancercess
    type: string
    source: pt
    total: true
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: true
  - name: rebate
    label: reports.pt.rebate
    type: string
    source: pt
    total: true
  - name: propertytax
    label: reports.pt.propertytax
    type: string
    source: pt
    total: true
  - name: exemption
    label: reports.pt.exemption
    type: string
    source: pt
    total: true
  - name: adjustment
    label: reports.pt.adjustment
    type: string
    source: pt
    total: true
  - name: adhocrebate
    label: reports.pt.adhocrebate
    type: string
    source: pt
    total: true 
  - name: noofassessments
    label: reports.pt.noofassessments
    type: string
    source: pt
    total: true 
  - name: collectorname
    label: reports.pt.collectorname
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND rh.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND rh.receiptdate <= $toDate
  - name: collectorname
    label: reports.pt.collectorname
    type: singlevaluelist
    pattern: http://egov-hrms:8080/egov-hrms/employees/_search?tenantId=$tenantid&roles=PTCEMP|$.Employees[*].user.id|$.Employees[*].user.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND eg_user.id = $collectorname::INTEGER
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      SELECT
        split_part(rd.tenantid,'.',2) as ulb,
        Count (*)/8 noofassessments,
        SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_PENALTY' THEN adjustedamount ELSE 0 END) as adhocpenalty,
        SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_REBATE' THEN adjustedamount ELSE 0 END) as adhocrebate, 
        SUM(CASE WHEN taxheadcode LIKE 'PT_FIRE_CESS' THEN adjustedamount ELSE 0 END) as firecess, 
        SUM(CASE WHEN taxheadcode LIKE 'PT_CANCER_CESS' THEN adjustedamount ELSE 0 END) as cancercess, 
        SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST' THEN adjustedamount ELSE 0 END) as interest, 
        SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY' THEN adjustedamount ELSE 0 END) as penalty, 
        SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_REBATE' THEN adjustedamount ELSE 0 END) as rebate, 
        SUM(CASE WHEN taxheadcode LIKE 'PT_TAX' THEN adjustedamount ELSE 0 END) as propertytax, 
        (SUM(CASE WHEN taxheadcode LIKE 'PT_UNIT_USAGE_EXEMPTION' THEN adjustedamount ELSE 0 END)
        + SUM(CASE WHEN taxheadcode LIKE 'PT_OWNER_EXEMPTION' THEN adjustedamount ELSE 0 END) )as exemption,
        ( SUM(CASE WHEN taxheadcode LIKE 'PT_ROUNDOFF' THEN adjustedamount ELSE 0 END)
        + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_DEBIT' THEN adjustedamount ELSE 0 END)
        + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_CREDIT' THEN adjustedamount ELSE 0 END)) as adjustment,
        (CASE WHEN collectiontype='COUNTER' THEN eg_user.name ELSE 'Online' END) as collectorname
      FROM egcl_receiptdetails_v1 as rd
      INNER JOIN egcl_receiptheader_v1 as rh on rh.id = rd.receiptheader
      LEFT OUTER JOIN eg_user ON eg_user.id = rh.createdby::INTEGER 
      WHERE rd.tenantid = $tenantid and rh.status != 'Cancelled' and businessdetails='PT'
  groupby: group by rd.tenantid,collectorname
  
- reportName: StateReceiptRegisterSummary
  summary: Receipt Register Summary
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "A1"
  sourceColumns:
  - name: ulb
    label: reports.pt.ulb
    type: string
    source: pt
    total: false
  - name: adhocpenalty
    label: reports.pt.adhocpenalty
    type: string
    source: pt
    total: true
  - name: adhocrebate
    label: reports.pt.adhocrebate
    type: string
    source: pt
    total: true
  - name: firecess
    label: reports.pt.firecess
    type: string
    source: pt
    total: true
  - name: cancercess
    label: reports.pt.cancercess
    type: string
    source: pt
    total: true
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: true
  - name: rebate
    label: reports.pt.rebate
    type: string
    source: pt
    total: true
  - name: propertytax
    label: reports.pt.propertytax
    type: string
    source: pt
    total: true
  - name: exemption
    label: reports.pt.exemption
    type: string
    source: pt
    total: true
  - name: adjustment
    label: reports.pt.adjustment
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND rh.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND rh.receiptdate <= $toDate
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND rd.tenantid = $ulb
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      SELECT
        split_part(rd.tenantid,'.',2) as ulb,
        SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_PENALTY' THEN adjustedamount ELSE 0 END) as adhocpenalty,
        SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_REBATE' THEN adjustedamount ELSE 0 END) as adhocrebate, 
        SUM(CASE WHEN taxheadcode LIKE 'PT_FIRE_CESS' THEN adjustedamount ELSE 0 END) as firecess, 
        SUM(CASE WHEN taxheadcode LIKE 'PT_CANCER_CESS' THEN adjustedamount ELSE 0 END) as cancercess, 
        SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST' THEN adjustedamount ELSE 0 END) as interest, 
        SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY' THEN adjustedamount ELSE 0 END) as penalty, 
        SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_REBATE' THEN adjustedamount ELSE 0 END) as rebate, 
        SUM(CASE WHEN taxheadcode LIKE 'PT_TAX' THEN adjustedamount ELSE 0 END) as propertytax, 
        (SUM(CASE WHEN taxheadcode LIKE 'PT_UNIT_USAGE_EXEMPTION' THEN adjustedamount ELSE 0 END)
        + SUM(CASE WHEN taxheadcode LIKE 'PT_OWNER_EXEMPTION' THEN adjustedamount ELSE 0 END) )as exemption,
        ( SUM(CASE WHEN taxheadcode LIKE 'PT_ROUNDOFF' THEN adjustedamount ELSE 0 END)
        + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_DEBIT' THEN adjustedamount ELSE 0 END)
        + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_CREDIT' THEN adjustedamount ELSE 0 END)) as adjustment
      FROM egcl_receiptdetails_v1 as rd
      INNER JOIN egcl_receiptheader_v1 as rh on rh.id = rd.receiptheader
      WHERE rd.tenantid != 'pb.testing' and rh.status != 'Cancelled' and businessdetails='PT'
  groupby: group by rd.tenantid
  orderby: order by rd.tenantid

- reportName: FYCollectionsReport
  summary: FY Collections
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "Legal"
  sourceColumns:
  - name: financialyear
    label: reports.pt.financialyear
    type: string
    source: pt
    total: false
  - name: residential
    label: reports.pt.residential
    type: string
    source: pt
    total: true
  - name: nonresidential
    label: reports.pt.nonresidential
    type: string
    source: pt
    total: true
  - name: mixed
    label: reports.pt.mixed
    type: string
    source: pt
    total: true
  - name: totalamount
    label: reports.pt.totalamount
    type: string
    source: pt
    total: true
  - name: online
    label: reports.pt.online
    type: string
    source: pt
    total: true
  - name: cash
    label: reports.pt.cash
    type: string
    source: pt
    total: true
  - name: cheque
    label: reports.pt.cheque
    type: string
    source: pt
    total: true
  - name: dd
    label: reports.pt.dd
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND rh.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND rh.receiptdate <= $toDate
  - name: localityArray
    label: reports.pt.zoneList
    type: boundarylist
    source: pt
    isMandatory: false
    searchClause: AND pt_addr.locality IN ($localityArray)
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      SELECT
        financialyear,
        sum(case when usagecategorymajor='RESIDENTIAL' then amount else 0 end) as "residential",
        sum(case when usagecategorymajor='RESIDENTIAL' then 1 else 0 end) as "countresidential",
        sum(case when usagecategorymajor='NONRESIDENTIAL' then amount else 0 end) as "nonresidential",
        sum(case when usagecategorymajor='NONRESIDENTIAL' then 1 else 0 end) as "countnonresidential",
        sum(case when usagecategorymajor='MIXED' then amount else 0 end) as "mixed",
        sum(case when usagecategorymajor='MIXED' then 1 else 0 end) as "countmixed",
        sum(amount) as totalamount,
        count(amount) as totalcount,
        sum(case when instrumenttype='Online' then amount else 0 end) as "online",
        sum(case when instrumenttype='Cash' then amount else 0 end) as "cash",
        sum(case when instrumenttype='Cheque' then amount else 0 end) as "cheque",
        sum(case when instrumenttype='DD' then amount else 0 end) as "dd"
      FROM egcl_receiptheader_v1 AS rh
      JOIN egcl_receiptinstrument_v1 AS ri ON rh.id = ri.receiptheader
      JOIN egcl_instrumentheader_v1 AS ih ON ih.id = ri.instrumentheader
      JOIN eg_pt_propertydetail_v2 pt_detail ON (pt_detail.property || ':' || pt_detail.assessmentnumber) = rh.consumercode
      JOIN eg_pt_address_v2 pt_addr ON pt_detail.property = pt_addr.property
      LEFT OUTER JOIN eg_user ON eg_user.id = rh.createdby::INTEGER
      WHERE rh.tenantid = $tenantid and rh.status != 'Cancelled'
  groupby: GROUP BY financialyear
  orderby: ORDER BY financialyear  

- reportName: ULBDEFAULTERPTREPORT
  summary: ULB Defaulter Pt report
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: ulb
    label: reports.pt.ulb
    type: string
    source: pt
    total: false
  - name: propertytaxuniqueid
    label: reports.pt.propertytaxuniqueid
    type: string
    source: pt
    total: false  
  - name: transcationdate
    label: reports.pt.transcationdate
    type: string
    source: pt
    total: false  
  - name: receiptnumber
    label: reports.pt.receiptnumber
    type: string
    source: pt
    total: false  
  - name: existingpropertyid
    label: reports.pt.existingpropertyid
    type: string
    source: pt
    total: false
  - name: financialyear
    label: reports.pt.financialYear
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false  
  - name: guardianname
    label: reports.pt.guardianname
    type: string
    source: pt
    total: false  
  - name: propertytype
    label: reports.pt.propertytype
    type: string
    source: pt
    total: false  
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false   
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false
  - name: payeraddress
    label: reports.pt.payeraddress
    type: string
    source: pt
    total: false 
  searchParams:
  - name: localityArray
    label: reports.pt.zoneList
    type: boundarylist
    source: pt
    isMandatory: true
    searchClause: AND pta.locality IN ($localityArray)
  query: |
   --S.no    Service Name	ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number	Existing Property ID    Type Of Property	Mobile Number   	Address
    with eg_pt_unit_v2_ot as (
     select
       propertydetail,
       string_agg(distinct pu.occupancytype, ',') as occupancytype,
       string_agg(distinct coalesce(usagecategoryminor, usagecategorymajor), ',') as propertytype
     from eg_pt_unit_v2 as pu
     where  pu.tenantid =$tenantid
     group by propertydetail
   )
   select
     distinct on (rh.receiptnumber)
     initcap(split_part(rh.tenantid, '.', 2)) as "ulb",
     split_part(consumercode, ':', 1) as "propertytaxuniqueid",
     to_char((To_timestamp(receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS  "transcationdate",
     receiptnumber    as "receiptnumber",
     pt.oldpropertyid as "existingpropertyid",
     pd.financialyear as "financialyear",
     eu."name" as "ownername",
     eu.guardian     as "guardianname",    
     pot.propertytype     as "propertytype",
     eu.mobilenumber as "mobileno",          
    REGEXP_REPLACE(REGEXP_REPLACE(CONCAT(pta.doorno, ',', pta.addressline1, ',', pta.addressline2, ',', pta.buildingname, ',', pta.pincode), ',+', ','), '^,|,$', '') as "address"    
   from egcl_receiptheader_v1 as rh
   inner join egcl_receiptinstrument_v1 as ri on ri.receiptheader = rh.id    
   inner join egcl_instrumentheader_v1     as ih on ih.id = ri.instrumentheader
   inner join eg_pt_property_v2    as pt on pt.propertyid = split_part(consumercode, ':', 1)
   inner join eg_pt_propertydetail_v2    as pd on pd.assessmentnumber = split_part(consumercode, ':', 2)
   inner join eg_pt_owner_v2     as po on po.propertydetail = pd.assessmentnumber
   inner join eg_user as eu on eu.uuid     = po.userid
   inner join eg_pt_address_v2    as pta on pta.property = pt.propertyid
   left outer join eg_pt_unit_v2_ot as pot on pot.propertydetail = pd.assessmentnumber
   where rh.tenantid =$tenantid and pd.property not in (select property from eg_pt_propertydetail_v2 where financialyear  in ('2019-20'))

- reportName: ReceiptRegister_V2
  decryptionPathId: ReceiptRegister_V2
  summary: Receipt Register
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "A1"
  sourceColumns:
  - name: receiptnumber
    label: reports.pt.receiptNo
    type: string
    source: pt
    total: false
  - name: receiptdate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: g8issuedate
    label: reports.pt.g8issuedate
    type: string
    source: pt
    total: false
  - name: g8receiptno
    label: reports.pt.g8receiptno
    type: string
    source: pt
    total: false
  - name: amount
    label: reports.pt.amount
    type: string
    source: pt
    total: true
  - name: propertytax
    label: reports.pt.propertyTax
    type: string
    source: pt
    total: true
  - name: firecess
    label: reports.pt.fireCess
    type: string
    source: pt
    total: true
  - name: cancercess
    label: reports.pt.cancerCess
    type: string
    source: pt
    total: true
  - name: rebate
    label: reports.pt.rebate
    type: string
    source: pt
    total: true
  - name: adhocrebate
    label: reports.pt.adhocrebate
    type: string
    source: pt
    total: true
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: true
  - name: adhocpenalty
    label: reports.pt.adhocpenalty
    type: string
    source: pt
    total: true
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true
  - name: exemption
    label: reports.pt.exemption
    type: string
    source: pt
    total: true
  - name: adjustment
    label: reports.pt.roundoff
    type: string
    source: pt
    total: true
  - name: pendingamount
    label: reports.pt.pendingamount
    type: string
    source: pt
    total: true
  - name: consumercode
    label: reports.pt.propertyId
    type: string
    source: pt
    total: false
  - name: usagetype
    label: reports.pt.usagetype
    type: string
    source: pt
    total: false
  - name: instrumenttype
    label: reports.pt.paymentMode
    type: string
    source: pt
    total: false
  - name: transactionnumber
    label: reports.pt.ddChequeTransactionNo
    type: string
    source: pt
    total: false   
  - name: transactiondate
    label: reports.pt.ddChequeTransactionDate
    type: string
    source: pt
    total: false   
  - name: transactiondate
    label: reports.pt.ddChequeTransactionDate
    type: string
    source: pt
    total: false
  - name: bankname
    label: reports.pt.bankName
    type: string
    source: pt
    total: false
  - name: collectorname
    label: reports.pt.collectorname
    type: string
    source: pt
    total: false
  - name: financialyear
    label: reports.pt.financialyear
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pd.receiptdate <= $toDate
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) = $financialyear
  - name: paymentMode
    label: Payment Mode
    type: singlevaluelist
    pattern: 'list://CARD:Card,CASH:Cash,CHEQUE:Cheque,DD:DD,OFFLINE_NEFT:NEFT,OFFLINE_RTGS:RTGS,ONLINE:Online,POSTAL_ORDER:PostalOrder'
    source: pt
    isMandatory: false
    searchClause: AND payment.paymentmode = replace($paymentMode,',','_')
  - name: localityArray
    label: reports.pt.zoneList
    type: boundarylist
    source: pt
    isMandatory: false
    searchClause: AND pt_addr.locality IN ($localityArray)
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      WITH receipt_breakup AS (
                  SELECT
                    pd.id as pdid,                    
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_PENALTY' THEN adjustedamount ELSE 0 END) as adhocpenalty, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_REBATE' THEN adjustedamount ELSE 0 END) as adhocrebate, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_FIRE_CESS' THEN adjustedamount ELSE 0 END) as firecess, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_CANCER_CESS' THEN adjustedamount ELSE 0 END) as cancercess, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST' THEN adjustedamount ELSE 0 END) as interest, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY' THEN adjustedamount ELSE 0 END) as penalty, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_REBATE' THEN adjustedamount ELSE 0 END) as rebate,
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TAX' THEN bad.amount ELSE 0 END) as propertytax,
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TAX' THEN adjustedamount ELSE 0 END) as paidpropertytax, 
                    (SUM(CASE WHEN taxheadcode LIKE 'PT_UNIT_USAGE_EXEMPTION' THEN bad.amount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_OWNER_EXEMPTION' THEN bad.amount ELSE 0 END) ) as exemption,
                    (SUM(CASE WHEN taxheadcode LIKE 'PT_ROUNDOFF' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_DEBIT' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_CREDIT' THEN adjustedamount ELSE 0 END)) as adjustment
                  FROM egcl_billaccountdetail as bad
                  INNER JOIN egcl_billdetial as bd on bd.id = bad.billdetailid
                  INNER JOIN egcl_paymentdetail as pd on pd.billid = bd.billid
                  INNER JOIN egcl_payment as payment on pd.paymentid=payment.id                  
                  WHERE payment.tenantid = $tenantid and payment.paymentstatus != 'CANCELLED' and  pd.businessservice='PT'
                  GROUP BY pdid
      )
      SELECT 
        pd.tenantid AS tenantid,
        pd.id,
        pt.propertyid as consumercode,
        to_char((To_timestamp(pd.receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS receiptdate,
        payment.ifsccode AS bankname, 
        receiptnumber,
        payment.totalamountpaid as amount, 
        payment.paymentmode as instrumenttype,        
        payment.transactionnumber,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) as financialyear, 
        to_char((To_timestamp(payment.transactiondate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') AS transactiondate, 
        payment.totaldue - payment.totalamountpaid AS pendingamount,
        Initcap(case when pt.usagecategory like '%.%' then split_part(pt.usagecategory,'.',2) else pt.usagecategory end) as usagetype,
        (case when eg_user.name is null then '30048|21Fj+c3k2ldB0X3AzIh7atXB' else eg_user.name end)  as collectorname,
        receipt_breakup.*,
        to_char((To_timestamp(pd.manualreceiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') AS g8issuedate, 
        manualreceiptnumber as g8receiptno
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment,eg_pg_transactions as pg, eg_pt_property as pt, receipt_breakup, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid 
      and pt.propertyid = bill.consumercode and receipt_breakup.pdid=pd.id  and pt.status!='INACTIVE' 
      and pt_addr.propertyid=pt.id and payment.transactionnumber = pg.txn_id
      --and pt.propertyid='PT-1012-978737'
      --and receiptnumber='PT/1012/2020-21/001021'
  orderby: ORDER BY pd.receiptdate DESC;
  
  
- reportName: ReceiptRegister_without_locality_V2
  decryptionPathId: ReceiptRegister_V2
  summary: Receipt Register
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "A1"
  sourceColumns:
  - name: receiptnumber
    label: reports.pt.receiptNo
    type: string
    source: pt
    total: false
  - name: receiptdate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: g8issuedate
    label: reports.pt.g8issuedate
    type: string
    source: pt
    total: false
  - name: g8receiptno
    label: reports.pt.g8receiptno
    type: string
    source: pt
    total: false
  - name: amount
    label: reports.pt.amount
    type: string
    source: pt
    total: true
  - name: propertytax
    label: reports.pt.propertyTax
    type: string
    source: pt
    total: true
  - name: paidpropertytax
    label: reports.pt.paidpropertyTax
    type: string
    source: pt
    total: true
  - name: firecess
    label: reports.pt.fireCess
    type: string
    source: pt
    total: true
  - name: cancercess
    label: reports.pt.cancerCess
    type: string
    source: pt
    total: true
  - name: rebate
    label: reports.pt.rebate
    type: string
    source: pt
    total: true
  - name: adhocrebate
    label: reports.pt.adhocrebate
    type: string
    source: pt
    total: true
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: true
  - name: adhocpenalty
    label: reports.pt.adhocpenalty
    type: string
    source: pt
    total: true
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true
  - name: exemption
    label: reports.pt.exemption
    type: string
    source: pt
    total: true
  - name: adjustment
    label: reports.pt.roundoff
    type: string
    source: pt
    total: true
  - name: pendingamount
    label: reports.pt.pendingamount
    type: string
    source: pt
    total: true
  - name: consumercode
    label: reports.pt.propertyId
    type: string
    source: pt
    total: false
  - name: usagetype
    label: reports.pt.usagetype
    type: string
    source: pt
    total: false
  - name: surveyid
    label: reports.pt.surveyid
    type: string
    source: pt
    total: false
  - name: instrumenttype
    label: reports.pt.paymentMode
    type: string
    source: pt
    total: false
  - name: transactionnumber
    label: reports.pt.ddChequeTransactionNo
    type: string
    source: pt
    total: false      
  - name: transactiondate
    label: reports.pt.ddChequeTransactionDate
    type: string
    source: pt
    total: false
  - name: bankname
    label: reports.pt.bankName
    type: string
    source: pt
    total: false
  - name: collectorname
    label: reports.pt.collectorname
    type: string
    source: pt
    total: false
  - name: financialyear
    label: reports.pt.financialyear
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pd.receiptdate <= $toDate
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) = $financialyear
  - name: paymentMode
    label: Payment Mode
    type: singlevaluelist
    pattern: 'list://CARD:Card,CASH:Cash,CHEQUE:Cheque,DD:DD,OFFLINE_NEFT:NEFT,OFFLINE_RTGS:RTGS,ONLINE:Online,POSTAL_ORDER:PostalOrder'
    source: pt
    isMandatory: false
    searchClause: AND payment.paymentmode = replace($paymentMode,',','_')
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      WITH receipt_breakup AS (
                  SELECT
                    pd.id as pdid,                    
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_PENALTY' THEN adjustedamount ELSE 0 END) as adhocpenalty, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_REBATE' THEN adjustedamount ELSE 0 END) as adhocrebate, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_FIRE_CESS' THEN adjustedamount ELSE 0 END) as firecess, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_CANCER_CESS' THEN adjustedamount ELSE 0 END) as cancercess, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST' THEN adjustedamount ELSE 0 END) as interest, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY' THEN adjustedamount ELSE 0 END) as penalty, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_REBATE' THEN adjustedamount ELSE 0 END) as rebate,
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TAX' THEN bad.amount ELSE 0 END) as propertytax,
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TAX' THEN adjustedamount ELSE 0 END) as paidpropertytax, 
                    (SUM(CASE WHEN taxheadcode LIKE 'PT_UNIT_USAGE_EXEMPTION' THEN bad.amount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_OWNER_EXEMPTION' THEN bad.amount ELSE 0 END) ) as exemption,
                    (SUM(CASE WHEN taxheadcode LIKE 'PT_ROUNDOFF' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_DEBIT' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_CREDIT' THEN adjustedamount ELSE 0 END)) as adjustment
                  FROM egcl_billaccountdetail as bad
                  INNER JOIN egcl_billdetial as bd on bd.id = bad.billdetailid
                  INNER JOIN egcl_paymentdetail as pd on pd.billid = bd.billid
                  INNER JOIN egcl_payment as payment on pd.paymentid=payment.id                  
                  WHERE payment.tenantid = $tenantid and payment.paymentstatus != 'CANCELLED' and  pd.businessservice='PT'
                  AND pd.receiptdate >= $fromDate AND pd.receiptdate <= $toDate
                  GROUP BY pdid
      )
      SELECT 
        pd.tenantid AS tenantid,
        pd.id,
        pt.propertyid as consumercode,
        pt.surveyid as surveyid,
        to_char((To_timestamp(pd.receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS receiptdate,
        --payment.ifsccode AS bankname,
        concat(bank_branches.bank_name,' ',bank_branches.branch) as bankname, 
        receiptnumber,
        payment.totalamountpaid as amount, 
        payment.paymentmode as instrumenttype, 
        payment.transactionnumber,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) as financialyear, 
        to_char((To_timestamp(payment.instrumentdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') AS transactiondate, 
        payment.totaldue - payment.totalamountpaid AS pendingamount,
        Initcap(case when pt.usagecategory like '%.%' then split_part(pt.usagecategory,'.',2) else pt.usagecategory end) as usagetype,
        (case when eg_user.name is null then '30048|21Fj+c3k2ldB0X3AzIh7atXB' else eg_user.name end)  as collectorname,
        receipt_breakup.*,
        to_char((To_timestamp(pd.manualreceiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') AS g8issuedate, 
        manualreceiptnumber as g8receiptno
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment left outer join bank_branches on bank_branches.ifsc=payment.ifsccode, 
      (select * from (select *,(row_number() over(partition by propertyid order by lastmodifiedtime desc)) as rw from eg_pt_property  where tenantid=$tenantid) pts where rw=1) as pt, 
      receipt_breakup, egcl_bill bill
      --,(select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid 
      and pt.propertyid = bill.consumercode and receipt_breakup.pdid=pd.id  --and pt.status!='INACTIVE' 
      --and pt_addr.propertyid=pt.id 
  orderby: ORDER BY pd.receiptdate DESC;
  
  
- reportName: CancelledReceiptRegister_V2
  decryptionPathId: CancelledReceiptRegister_V2
  summary: Receipt Register for cancelled Receipts
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "A1"
  sourceColumns:
  - name: receiptnumber
    label: reports.pt.receiptNo
    type: string
    source: pt
    total: false
  - name: receiptdate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: g8issuedate
    label: reports.pt.g8issuedate
    type: string
    source: pt
    total: false
  - name: g8receiptno
    label: reports.pt.g8receiptno
    type: string
    source: pt
    total: false  
  - name: amount
    label: reports.pt.amount
    type: string
    source: pt
    total: true
  - name: propertytax
    label: reports.pt.propertyTax
    type: string
    source: pt
    total: true
  - name: firecess
    label: reports.pt.fireCess
    type: string
    source: pt
    total: true
  - name: cancercess
    label: reports.pt.cancerCess
    type: string
    source: pt
    total: true
  - name: rebate
    label: reports.pt.rebate
    type: string
    source: pt
    total: true
  - name: adhocrebate
    label: reports.pt.adhocrebate
    type: string
    source: pt
    total: true
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: true
  - name: adhocpenalty
    label: reports.pt.adhocpenalty
    type: string
    source: pt
    total: true
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true
  - name: exemption
    label: reports.pt.exemption
    type: string
    source: pt
    total: true
  - name: adjustment
    label: reports.pt.roundoff
    type: string
    source: pt
    total: true
  - name: pendingamount
    label: reports.pt.pendingamount
    type: string
    source: pt
    total: true
  - name: consumercode
    label: reports.pt.propertyId
    type: string
    source: pt
    total: false
  - name: instrumenttype
    label: reports.pt.paymentMode
    type: string
    source: pt
    total: false
  - name: transactionnumber
    label: reports.pt.ddChequeTransactionNo
    type: string
    source: pt
    total: false
  - name: transactiondate
    label: reports.pt.ddChequeTransactionDate
    type: string
    source: pt
    total: false
  - name: bankname
    label: reports.pt.bankName
    type: string
    source: pt
    total: false
  - name: collectorname
    label: reports.pt.collectorname
    type: string
    source: pt
    total: false
  - name: financialyear
    label: reports.pt.financialyear
    type: string
    source: pt
    total: false
  - name: paymentstatus
    label: reports.pt.paymentstatus
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pd.receiptdate <= $toDate
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) = $financialyear
  - name: paymentMode
    label: Payment Mode
    type: singlevaluelist
    pattern: 'list://CARD:Card,CASH:Cash,CHEQUE:Cheque,DD:DD,OFFLINE_NEFT:NEFT,OFFLINE_RTGS:RTGS,ONLINE:Online,POSTAL_ORDER:PostalOrder'
    source: pt
    isMandatory: false
    searchClause: AND payment.paymentmode = replace($paymentMode,',','_')
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      WITH receipt_breakup AS (
                  SELECT
                    pd.id as pdid,
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_PENALTY' THEN adjustedamount ELSE 0 END) as adhocpenalty, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_REBATE' THEN adjustedamount ELSE 0 END) as adhocrebate, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_FIRE_CESS' THEN adjustedamount ELSE 0 END) as firecess, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_CANCER_CESS' THEN adjustedamount ELSE 0 END) as cancercess, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST' THEN adjustedamount ELSE 0 END) as interest, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY' THEN adjustedamount ELSE 0 END) as penalty, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_REBATE' THEN adjustedamount ELSE 0 END) as rebate,
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TAX' THEN bad.amount ELSE 0 END) as propertytax,
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TAX' THEN adjustedamount ELSE 0 END) as paidpropertytax, 
                    (SUM(CASE WHEN taxheadcode LIKE 'PT_UNIT_USAGE_EXEMPTION' THEN bad.amount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_OWNER_EXEMPTION' THEN bad.amount ELSE 0 END) ) as exemption,
                    (SUM(CASE WHEN taxheadcode LIKE 'PT_ROUNDOFF' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_DEBIT' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_CREDIT' THEN adjustedamount ELSE 0 END)) as adjustment
                  FROM egcl_billaccountdetail as bad
                  INNER JOIN egcl_billdetial as bd on bd.id = bad.billdetailid
                  INNER JOIN egcl_paymentdetail as pd on pd.billid = bd.billid
                  INNER JOIN egcl_payment as payment on pd.paymentid=payment.id
                  WHERE payment.tenantid = $tenantid and payment.paymentstatus = 'CANCELLED' and  pd.businessservice='PT'
                  GROUP BY pdid
      )
      SELECT 
        pd.tenantid AS tenantid,
        pd.id,
        bill.consumercode as consumercode,
        to_char((To_timestamp(pd.receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS receiptdate,
        --payment.ifsccode AS bankname,
        concat(bank_branches.bank_name,' ',bank_branches.branch) as bankname,
        receiptnumber,
        payment.totalamountpaid as amount, 
        payment.paymentmode as instrumenttype, 
        payment.transactionnumber,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) as financialyear, 
        to_char((To_timestamp(payment.transactiondate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') AS transactiondate, 
        payment.totaldue - payment.totalamountpaid AS pendingamount,
        --Initcap(case when pt.usagecategory like '%.%' then split_part(pt.usagecategory,'.',2) else pt.usagecategory end) as usagetype,
        (case when eg_user.name is null then '30048|21Fj+c3k2ldB0X3AzIh7atXB' else eg_user.name end)  as collectorname,
        receipt_breakup.*,
        to_char((To_timestamp(pd.manualreceiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') AS g8issuedate, 
        manualreceiptnumber as g8receiptno,
        bill.additionaldetails
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment left outer join bank_branches on bank_branches.ifsc=payment.ifsccode, receipt_breakup, egcl_bill bill
      --,(select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus = 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid 
      --and pt.propertyid = bill.consumercode 
      and receipt_breakup.pdid=pd.id 
      --and pt_addr.propertyid=pt.id 
  orderby: ORDER BY pd.receiptdate DESC;

- reportName: OldUlbWisePtCollection_V2
  summary: ULB-wise PT Collection
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: totalassessments
    label: reports.pt.totalassessments
    type: string
    source: pt
    total: true
  - name: totalamountpaid
    label: reports.pt.totalamountpaid
    type: string
    source: pt
    total: true
  - name: totalamountdue
    label: reports.pt.totalamountdue
    type: string
    source: pt
    total: true
  searchParams:
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND financialyear = $financialyear
  - name: usage
    label: Usage
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=PropertyTax&masterName=UsageCategoryMajor|$..code|$..name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND usagecategorymajor = $usage
  query: |
    SELECT 
      tenantid, 
      COUNT(*) AS totalassessments, 
      SUM(totalamount) AS totalamount, 
      SUM(amount) AS totalamountpaid, 
      (SUM(totalamount) - SUM(amount)) AS totalamountdue 
    FROM eg_pt_propertydetail_v2 AS pd 
    LEFT OUTER JOIN 
      (SELECT consumercode, totalamount, amount FROM egcl_receiptheader_v1 AS rh 
      LEFT OUTER JOIN egcl_receiptinstrument_v1 AS ri ON rh.id = ri.receiptheader 
      LEFT OUTER JOIN egcl_instrumentheader_v1 AS ih ON ri.instrumentheader = ih.id 
      and ih.instrumentstatus	 != 'CANCELLED' 
      where rh.status != 'Cancelled'
      ) AS instrument_data ON (pd.property || ':' || pd.assessmentnumber) = instrument_data.consumercode 
    WHERE tenantid = $tenantid
  groupby: GROUP BY tenantid
  orderby: ORDER BY tenantid, totalamountpaid DESC NULLS LAST

- reportName: StateCancelledReceiptRegister_V2
  decryptionPathId: CancelledReceiptRegister_V2
  summary: Receipt Register for cancelled Receipts state
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "A1"
  sourceColumns:
  - name: tenantid
    label: reports.pt.ulb
    type: string
    source: pt
    total: false
  - name: receiptnumber
    label: reports.pt.receiptNo
    type: string
    source: pt
    total: false
  - name: receiptdate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: g8issuedate
    label: reports.pt.g8issuedate
    type: string
    source: pt
    total: false
  - name: g8receiptno
    label: reports.pt.g8receiptno
    type: string
    source: pt
    total: false
  - name: amount
    label: reports.pt.amount
    type: string
    source: pt
    total: true
  - name: paystatus
    label: reports.pt.paymentstatus
    type: string
    source: pt
    total: false
  - name: propertytax
    label: reports.pt.propertyTax
    type: string
    source: pt
    total: true
  - name: firecess
    label: reports.pt.fireCess
    type: string
    source: pt
    total: true
  - name: cancercess
    label: reports.pt.cancerCess
    type: string
    source: pt
    total: true
  - name: rebate
    label: reports.pt.rebate
    type: string
    source: pt
    total: true
  - name: adhocrebate
    label: reports.pt.adhocrebate
    type: string
    source: pt
    total: true
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: true
  - name: adhocpenalty
    label: reports.pt.adhocpenalty
    type: string
    source: pt
    total: true
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true
  - name: exemption
    label: reports.pt.exemption
    type: string
    source: pt
    total: true
  - name: adjustment
    label: reports.pt.roundoff
    type: string
    source: pt
    total: true
  - name: pendingamount
    label: reports.pt.pendingamount
    type: string
    source: pt
    total: true
  - name: consumercode
    label: reports.pt.propertyId
    type: string
    source: pt
    total: false
  - name: usagetype
    label: reports.pt.usagetype
    type: string
    source: pt
    total: false
  - name: instrumenttype
    label: reports.pt.paymentMode
    type: string
    source: pt
    total: false
  - name: transactionnumber
    label: reports.pt.ddChequeTransactionNo
    type: string
    source: pt
    total: false
  - name: transactiondate
    label: reports.pt.ddChequeTransactionDate
    type: string
    source: pt
    total: false
  - name: bankname
    label: reports.pt.bankName
    type: string
    source: pt
    total: false
  - name: collectorname
    label: reports.pt.collectorname
    type: string
    source: pt
    total: false
  - name: financialyear
    label: reports.pt.financialyear
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pd.receiptdate <= $toDate
  - name: paymentMode
    label: Payment Mode
    type: singlevaluelist
    pattern: 'list://CARD:Card,CASH:Cash,CHEQUE:Cheque,DD:DD,OFFLINE_NEFT:NEFT,OFFLINE_RTGS:RTGS,ONLINE:Online,POSTAL_ORDER:PostalOrder'
    source: pt
    isMandatory: false
    searchClause: AND payment.paymentmode = replace($paymentMode,',','_')
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      WITH receipt_breakup AS (
                  SELECT
                    pd.id as pdid,
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_PENALTY' THEN adjustedamount ELSE 0 END) as adhocpenalty, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_REBATE' THEN adjustedamount ELSE 0 END) as adhocrebate, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_FIRE_CESS' THEN adjustedamount ELSE 0 END) as firecess, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_CANCER_CESS' THEN adjustedamount ELSE 0 END) as cancercess, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST' THEN adjustedamount ELSE 0 END) as interest, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY' THEN adjustedamount ELSE 0 END) as penalty, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_REBATE' THEN adjustedamount ELSE 0 END) as rebate, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TAX' THEN adjustedamount ELSE 0 END) as propertytax, 
                    (SUM(CASE WHEN taxheadcode LIKE 'PT_UNIT_USAGE_EXEMPTION' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_OWNER_EXEMPTION' THEN adjustedamount ELSE 0 END) )as exemption,
                    ( SUM(CASE WHEN taxheadcode LIKE 'PT_ROUNDOFF' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_DEBIT' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_CREDIT' THEN adjustedamount ELSE 0 END)) as adjustment
                  FROM egcl_billaccountdetail as bad
                  INNER JOIN egcl_billdetial as bd on bd.id = bad.billdetailid
                  INNER JOIN egcl_paymentdetail as pd on pd.billid = bd.billid
                  INNER JOIN egcl_payment as payment on pd.paymentid=payment.id
                  WHERE bad.tenantid not in ('pb.testing','pb.ludhiana_legacy') and payment.paymentstatus = 'CANCELLED' and  pd.businessservice='PT'
                  GROUP BY pdid
      )
      SELECT 
        pd.tenantid AS tenantid,
        pd.id,
        bill.consumercode,
        to_char((To_timestamp(pd.receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS receiptdate,
        payment.ifsccode AS bankname, 
        receiptnumber, 
        payment.totalamountpaid as amount, 
        payment.paymentmode as instrumenttype, 
        payment.transactionnumber,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) as financialyear,
        to_char((To_timestamp(payment.transactiondate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') AS transactiondate, 
        pd.due AS pendingamount,
        Initcap(case when pt.usagecategory like '%.%' then split_part(pt.usagecategory,'.',2) else pt.usagecategory end) as usagetype,
        (CASE WHEN billd.collectiontype='COUNTER' THEN eg_user.name ELSE '30048|23/xn3x2FAxn8vYAN0IdplsOxaE=' END) as collectorname,
        receipt_breakup.*,
        to_char((To_timestamp(pd.manualreceiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') AS g8issuedate, 		manualreceiptnumber as g8receiptno,
        payment.paymentstatus as paystatus
      FROM egcl_paymentdetail pd, eg_user, eg_pt_property    as pt, egcl_billdetial as billd, egcl_payment payment,receipt_breakup, egcl_bill bill, (select bill.id as billid, min(bd.fromperiod) fromperiod, max(bd.toperiod) toperiod from egcl_billdetial bd, egcl_bill bill where bill.id=bd.billid group by bill.id) bd
      WHERE pd.paymentid=payment.id and  eg_user.id = pd.createdby::INTEGER and pt.propertyid = bill.consumercode and bill.id=pd.billid and bill.id=billd.billid and bd.billid=bill.id and payment.paymentstatus = 'CANCELLED' and pd.businessservice='PT' and payment.tenantid not in ('pb.testing','pb.ludhiana_legacy') and receipt_breakup.pdid=pd.id
  orderby: ORDER BY pd.receiptdate DESC;
  
- reportName: StateWidePtCollection_V2
  summary: State Wide PT Collection
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: tenantid
    label: reports.pt.tenantid
    type: string
    source: pt
    total: false
  - name: totalamountpaid
    label: reports.pt.totalamountpaid
    type: string
    source: pt
    total: true
  - name: totalassessments
    label: reports.pt.totalassessments
    type: string
    source: pt
    total: true  
  - name: totaloffline
    label: reports.pt.totaloffline
    type: string
    source: pt
    total: true
  - name: countoffline
    label: reports.pt.countoffline
    type: string
    source: pt
    total: true
  - name: totalonline
    label: reports.pt.totalonline
    type: string
    source: pt
    total: true
  - name: countonline
    label: reports.pt.countonline
    type: string
    source: pt
    total: true  
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate <= $toDate
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) = $financialyear
  - name: usage
    label: Usage
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=PropertyTax&masterName=UsageCategoryMajor|$..code|$..name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND pt.usagecategory = $usage
  query: |
    SELECT 
        initcap(split_part(payment.tenantid, '.', 2)) as tenantid, 
        sum(payment.totalamountpaid) as totalamountpaid,
        count(payment.totalamountpaid) as totalassessments,
        sum(case when payment.paymentmode='ONLINE' then payment.totalamountpaid else 0 end) as "totalonline",
        sum(case when payment.paymentmode='ONLINE' then 1 else 0 end) as "countonline",
        sum(case when payment.paymentmode='CASH' then payment.totalamountpaid else 0 end) +
        sum(case when payment.paymentmode='CHEQUE' then payment.totalamountpaid else 0 end) +
        sum(case when payment.paymentmode='DD' then payment.totalamountpaid else 0 end) +
        sum(case when payment.paymentmode='CARD' then payment.totalamountpaid else 0 end) + 
        sum(case when payment.paymentmode='OFFLINE_RTGS' then payment.totalamountpaid else 0 end) +
        sum(case when payment.paymentmode='OFFLINE_NEFT' then payment.totalamountpaid else 0 end) +
        sum(case when payment.paymentmode='POTAL_ORDER' then payment.totalamountpaid else 0 end) as "totaloffline",
        sum(case when payment.paymentmode!='ONLINE' then 1 else 0 end) as "countoffline"
        --concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid!='pb.testing' group by propertyid ) pt_addr
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid!='pb.testing'
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id
  groupby: GROUP BY payment.tenantid 
  orderby: ORDER BY payment.tenantid, totalamountpaid DESC NULLS LAST
  
  
- reportName: UlbWisePtCollection_V2
  summary: ULB Wide PT Collection
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: totalamountpaid
    label: reports.pt.totalamountpaid
    type: string
    source: pt
    total: true
  - name: totalassessments
    label: reports.pt.totalassessments
    type: string
    source: pt
    total: true  
  - name: totaloffline
    label: reports.pt.totaloffline
    type: string
    source: pt
    total: true
  - name: countoffline
    label: reports.pt.countoffline
    type: string
    source: pt
    total: true
  - name: totalonline
    label: reports.pt.totalonline
    type: string
    source: pt
    total: true
  - name: countonline
    label: reports.pt.countonline
    type: string
    source: pt
    total: true  
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate <= $toDate
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) = $financialyear
  - name: usage
    label: Usage
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=PropertyTax&masterName=UsageCategoryMajor|$..code|$..name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND upper(split_part(pt.usagecategory,'.',1)) = $usage
  query: |
    SELECT 
        --initcap(split_part(payment.tenantid, '.', 2)) as tenantid, 
        sum(payment.totalamountpaid) as totalamountpaid,
        count(payment.totalamountpaid) as totalassessments,
        sum(case when payment.paymentmode='ONLINE' then payment.totalamountpaid else 0 end) as "totalonline",
        sum(case when payment.paymentmode='ONLINE' then 1 else 0 end) as "countonline",
        sum(case when payment.paymentmode='CASH' then payment.totalamountpaid else 0 end) +
        sum(case when payment.paymentmode='CHEQUE' then payment.totalamountpaid else 0 end) +
        sum(case when payment.paymentmode='DD' then payment.totalamountpaid else 0 end) +
        sum(case when payment.paymentmode='CARD' then payment.totalamountpaid else 0 end) + 
        sum(case when payment.paymentmode='OFFLINE_RTGS' then payment.totalamountpaid else 0 end) +
        sum(case when payment.paymentmode='OFFLINE_NEFT' then payment.totalamountpaid else 0 end) +
        sum(case when payment.paymentmode='POTAL_ORDER' then payment.totalamountpaid else 0 end) as "totaloffline",
        sum(case when payment.paymentmode!='ONLINE' then 1 else 0 end) as "countoffline"
        --concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid  
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id


- reportName: ReceiptRegisterShort_V2
  decryptionPathId: ReceiptRegisterShort_V2
  summary: Receipt Register
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "Legal"
  sourceColumns:
  - name: receiptnumber
    label: reports.pt.receiptNo
    type: string
    source: pt
    total: false
  - name: transactiondate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: g8receiptno
    label: reports.pt.g8book
    type: string
    source: pt
    total: false
  - name: g8issuedate
    label: reports.pt.g8dated
    type: string
    source: pt
    total: false
  - name: propertyid
    label: reports.pt.ptrId
    type: string
    source: pt
    total: false
  - name: financialyear
    label: reports.pt.financialYear
    type: string
    source: pt
    total: false
  - name: instrumenttype
    label: reports.pt.paymentMode
    type: string
    source: pt
    total: false
  - name: amount
    label: reports.pt.taxamount
    type: string
    source: pt
    total: true
  - name: transactionnumber
    label: reports.pt.ddChequeNo
    type: string
    source: pt
    total: false
  - name: bankname
    label: reports.pt.bankName
    type: string
    source: pt
    total: false
  - name: collectorname
    label: reports.pt.collectorname
    type: string
    source: pt
    total: false
  - name: remarks
    label: reports.pt.remarks
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pd.receiptdate <= $toDate
  - name: paymentMode
    label: Payment Mode
    type: singlevaluelist
    pattern: 'list://CARD:Card,CASH:Cash,CHEQUE:Cheque,DD:DD,OFFLINE_NEFT:NEFT,OFFLINE_RTGS:RTGS,ONLINE:Online,POSTAL_ORDER:PostalOrder'
    source: pt
    isMandatory: false
    searchClause: AND payment.paymentmode = replace($paymentMode,',','_')
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND concat(to_char((To_timestamp(bd.fromperiod/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(bd.toperiod/1000) at time Zone 'Asia/Kolkata'),'YY')) = $financialyear
  - name: localityArray
    label: reports.pt.zoneList
    type: boundarylist
    source: pt
    isMandatory: false
    searchClause: AND pt_addr.locality IN ($localityArray)
  - name: collectorname
    label: reports.pt.collectorname
    type: singlevaluelist
    pattern: http://egov-hrms:8080/egov-hrms/employees/_search?tenantId=$tenantid&roles=PTCEMP|$.Employees[*].user.id|$.Employees[*].user.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND eg_user.id = $collectorname::INTEGER
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      SELECT 	
        pt.propertyid as propertyid,	
        to_char((To_timestamp(pd.receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') as transactiondate,	
        payment.ifsccode AS bankname, 	
        receiptnumber,	
        payment.totalamountpaid as amount, 	
        payment.paymentmode as instrumenttype, 	
        payment.transactionnumber as transactionnumber,	
        --concat(to_char((To_timestamp(bd.fromperiod/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(bd.toperiod/1000) at time Zone 'Asia/Kolkata'),'YYYY')) AS financialyear,
        --concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) as financialyear,
        getfinancialyear(pd.billid) as financialyear,
        (case when eg_user.name is null then '30048|23/xn3x2FAxn8vYAN0IdplsOxaE=' else eg_user.name end)  as collectorname,
        --receipt_breakup.*,	
        to_char((To_timestamp(pd.manualreceiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') AS g8issuedate, 	
        manualreceiptnumber as g8receiptno,
        'NA' as remarks
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, 
      (select bill.id as billid, bill.consumercode as consumercodei, min(bd.fromperiod) fromperiod, max(bd.toperiod) toperiod from egcl_billdetial bd, egcl_bill bill 
      where bill.id=bd.billid and bill.tenantid = $tenantid group by bill.id) bd,
      (select string_agg(distinct propertyid,',') as propertyid,string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      where pd.paymentid=payment.id and bd.billid=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid 
      and pt.propertyid = bd.consumercodei and pt.status!='INACTIVE' 
      and pt_addr.propertyid=pt.id 
  orderby: ORDER BY pd.receiptdate DESC;
  
  
- reportName: ReceiptRegisterShort_WithoutLocality_V2
  decryptionPathId: ReceiptRegisterShort_V2
  summary: Receipt Register
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "Legal"
  sourceColumns:
  - name: receiptnumber
    label: reports.pt.receiptNo
    type: string
    source: pt
    total: false
  - name: transactiondate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: g8receiptno
    label: reports.pt.g8book
    type: string
    source: pt
    total: false
  - name: g8issuedate
    label: reports.pt.g8dated
    type: string
    source: pt
    total: false
  - name: propertyid
    label: reports.pt.ptrId
    type: string
    source: pt
    total: false
  - name: oldpropertyid
    label: reports.pt.oldpropertyid
    type: string
    source: pt
    total: false    
  - name: financialyear
    label: reports.pt.financialYear
    type: string
    source: pt
    total: false
  - name: instrumenttype
    label: reports.pt.paymentMode
    type: string
    source: pt
    total: false
  - name: amount
    label: reports.pt.taxamount
    type: string
    source: pt
    total: true
  - name: transactionnumber
    label: reports.pt.ddChequeNo
    type: string
    source: pt
    total: false
  - name: bankname
    label: reports.pt.bankName
    type: string
    source: pt
    total: false
  - name: collectorname
    label: reports.pt.collectorname
    type: string
    source: pt
    total: false
  - name: remarks
    label: reports.pt.remarks
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pd.receiptdate <= $toDate
  - name: paymentMode
    label: Payment Mode
    type: singlevaluelist
    pattern: 'list://CARD:Card,CASH:Cash,CHEQUE:Cheque,DD:DD,OFFLINE_NEFT:NEFT,OFFLINE_RTGS:RTGS,ONLINE:Online,POSTAL_ORDER:PostalOrder'
    source: pt
    isMandatory: false
    searchClause: AND payment.paymentmode = replace($paymentMode,',','_')
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) = $financialyear
  - name: collectorname
    label: reports.pt.collectorname
    type: singlevaluelist
    pattern: http://egov-hrms:8080/egov-hrms/employees/_search?tenantId=$tenantid&roles=PTCEMP|$.Employees[*].user.id|$.Employees[*].user.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND eg_user.id = $collectorname::INTEGER
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      SELECT 	
        pt.propertyid as propertyid,
        oldpropertyid,
        to_char((To_timestamp(pd.receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') as transactiondate,
        payment.ifsccode AS bankname,
        receiptnumber,
        payment.totalamountpaid as amount,
        payment.paymentmode as instrumenttype,
        payment.transactionnumber as transactionnumber,
        --concat(to_char((To_timestamp(bd.fromperiod/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(bd.toperiod/1000) at time Zone 'Asia/Kolkata'),'YYYY')) AS financialyear,
        --concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) as financialyear,
        getfinancialyear(pd.billid) as financialyear,
        (case when eg_user.name is null then '30048|23/xn3x2FAxn8vYAN0IdplsOxaE=' else eg_user.name end)  as collectorname,
        --receipt_breakup.*,
        to_char((To_timestamp(pd.manualreceiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') AS g8issuedate, 
        manualreceiptnumber as g8receiptno,
        'NA' as remarks
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, 
      (select * from (select *,(row_number() over(partition by propertyid order by lastmodifiedtime desc)) as rw from eg_pt_property  where tenantid=$tenantid) pts where rw=1) as pt, 
      (select bill.id as billid, bill.consumercode as consumercodei, min(bd.fromperiod) fromperiod, max(bd.toperiod) toperiod from egcl_billdetial bd, egcl_bill bill 
      where bill.id=bd.billid and bill.tenantid = $tenantid group by bill.id) bd
      where pd.paymentid=payment.id and bd.billid=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid 
      and pt.propertyid = bd.consumercodei --and pt.status!='INACTIVE'
  orderby: ORDER BY pd.receiptdate DESC;


- reportName: ULBPTDataDumpReport_V2
  decryptionPathId: ULBPTDataDumpReport_V2
  summary: ULB level report
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: ulb
    label: reports.pt.ulb
    type: string
    source: pt
    total: false
  - name: propertytaxuniqueid
    label: reports.pt.propertytaxuniqueid
    type: string
    source: pt
    total: false   
  - name: existingpropertyid
    label: reports.pt.existingpropertyid
    type: string
    source: pt
    total: false
  - name: receiptnumber
    label: reports.pt.receiptnumber
    type: string
    source: pt
    total: false
  - name: paymentamount
    label: reports.pt.paymentamount
    type: string
    source: pt
    total: false       
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false  
  - name: guardianname
    label: reports.pt.guardianname
    type: string
    source: pt
    total: false   
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false  
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false 
  - name: businessname
    label: reports.pt.businessname
    type: string
    source: pt
    total: false 
  - name: localityname
    label: reports.pt.localityname
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND payd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND payd.receiptdate <= $toDate
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND concat(to_char((To_timestamp(billd.fromperiod/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(billd.toperiod/1000) at time Zone 'Asia/Kolkata'),'YY')) = $financialyear
  - name: paymentMode
    label: Payment Mode
    type: singlevaluelist
    pattern: 'list://CARD:Card,CASH:Cash,CHEQUE:Cheque,DD:DD,OFFLINE_NEFT:NEFT,OFFLINE_RTGS:RTGS,ONLINE:Online,POSTAL_ORDER:PostalOrder'
    source: pt
    isMandatory: false
    searchClause: AND payment.paymentmode = replace($paymentMode,',','_')
  - name: localityArray
    label: reports.pt.zoneList
    type: boundarylist
    source: pt
    isMandatory: false
    searchClause: AND pta.locality IN ($localityArray)
  query: |
    --S.no    Service Name	ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number	Existing Property ID    Owner Name    Guardian Name    Total Area (SQ.YARD)    Covered  Area/Built Area (SQ.FEET)    Floors    Occupancy (Rented,Self /Unoccupied)    Type Of Property	Mobile Number    Transcation Mode of Payment    Payment Amount    Payment Date    Email Id	Address
    with eg_pt_unit_v2_ot as (
      select 
        propertyid 
     -- string_agg(distinct pu.occupancytype, ',') as occupancytype, 
     -- string_agg(distinct Initcap(case when usagecategory like '%.%' then split_part(usagecategory,'.',2) else usagecategory end),',') as propertytype 
      from eg_pt_unit as pu
      where  pu.tenantid = $tenantid
      group by propertyid
      )
      select 
      distinct on (payd.receiptnumber)
      initcap(split_part(payd.tenantid, '.', 2)) as "ulb",
      split_part(consumercode, ':', 1) as "propertytaxuniqueid",
    --to_char((To_timestamp(receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS  "transcationdate",
      receiptnumber    as "receiptnumber",
      pt.oldpropertyid as "existingpropertyid",
      --concat(to_char((To_timestamp(billd.fromperiod/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-',to_char((To_timestamp(billd.toperiod/1000) at time Zone 'Asia/Kolkata'),'YY'))  AS "financialyear",
    --getfinancialyear(payd.billid) as financialyear,
      eu."name"  as "ownername", 
      eu.guardian as "guardianname",
    --pt.landarea     as "totalarea",
    --pt.superbuiltuparea * 9 as "builtarea",    
    --pt.nooffloors     as "floors",
      eu.mobilenumber as "mobileno",
    --paymentmode as "transcationmode",
      payment.totalamountpaid as "paymentamount",
    --to_char((To_timestamp(payment.transactiondate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS "paymentdate",
    --eu.emailid     as "emailid",
      REGEXP_REPLACE(REGEXP_REPLACE(CONCAT(pta.doorno, ',', pta.buildingname, ',',pta.street,',', pta.pincode), ',+', ','), '^,|,$', '') as "address",
    --payment.payeraddress as "payeraddress",
    --pt.additionaldetails->>'remarks' as "remarks",
      pt.additionaldetails->>'FirmBusinessName' as "businessname",
    --pot.occupancytype as occupancy,
    --pot.propertytype as propertytype,
    --pta.locality as "localitycode",
      localnames.localityname as localityname
    from egcl_paymentdetail as payd
    inner join egcl_payment as payment on payment.id = payd.paymentid        
    inner join egcl_bill as bill on bill.id = payd.billid 
    inner join egcl_billdetial as billd on billd.billid=bill.id		 
    inner join eg_pt_property    as pt on pt.propertyid = bill.consumercode
    inner join eg_pt_owner as po on po.propertyid = pt.id  and po.status='ACTIVE'
    inner join eg_user as eu on eu.uuid     = po.userid
    inner join eg_pt_address    as pta on pta.propertyid = pt.id
    left outer join eg_bndry_mohalla as localnames on pta.locality=localnames.localitycode
    left outer join eg_pt_unit_v2_ot as pot on pot.propertyid = pt.id
    where payd.tenantid = $tenantid and payment.paymentstatus != 'CANCELLED' and payd.businessservice='PT' and pt.status!='INACTIVE' 


- reportName: Sewa_Kendra_ReceiptRegister_V2
  summary: Sewa Kendra Receipt Register
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "A1"
  sourceColumns:
  - name: receiptnumber
    label: reports.pt.receiptNo
    type: string
    source: pt
    total: false
  - name: receiptdate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: g8issuedate
    label: reports.pt.g8issuedate
    type: string
    source: pt
    total: false
  - name: g8receiptno
    label: reports.pt.g8receiptno
    type: string
    source: pt
    total: false
  - name: amount
    label: reports.pt.amount
    type: string
    source: pt
    total: true
  - name: propertytax
    label: reports.pt.propertyTax
    type: string
    source: pt
    total: true
  - name: firecess
    label: reports.pt.fireCess
    type: string
    source: pt
    total: true
  - name: cancercess
    label: reports.pt.cancerCess
    type: string
    source: pt
    total: true
  - name: rebate
    label: reports.pt.rebate
    type: string
    source: pt
    total: true
  - name: adhocrebate
    label: reports.pt.adhocrebate
    type: string
    source: pt
    total: true
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: true
  - name: adhocpenalty
    label: reports.pt.adhocpenalty
    type: string
    source: pt
    total: true
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true
  - name: exemption
    label: reports.pt.exemption
    type: string
    source: pt
    total: true
  - name: adjustment
    label: reports.pt.roundoff
    type: string
    source: pt
    total: true
  - name: pendingamount
    label: reports.pt.pendingamount
    type: string
    source: pt
    total: true
  - name: propertyid
    label: reports.pt.propertyId
    type: string
    source: pt
    total: false
  - name: usagetype
    label: reports.pt.usagetype
    type: string
    source: pt
    total: false
  - name: assessmentnumber
    label: reports.pt.assessmentNo
    type: string
    source: pt
    total: false
  - name: financialyear
    label: reports.pt.financialYear
    type: string
    source: pt
    total: false
  - name: instrumenttype
    label: reports.pt.paymentMode
    type: string
    source: pt
    total: false
  - name: transactionnumber
    label: reports.pt.ddChequeTransactionNo
    type: string
    source: pt
    total: false
  - name: transactiondate
    label: reports.pt.ddChequeTransactionDate
    type: string
    source: pt
    total: false
  - name: bankname
    label: reports.pt.bankName
    type: string
    source: pt
    total: false
  - name: collectorname
    label: reports.pt.collectorname
    type: string
    source: pt
    total: false
  - name: remarks
    label: reports.pt.remarks
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND rh.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND rh.receiptdate <= $toDate
  - name: paymentMode
    label: Payment Mode
    type: singlevaluelist
    pattern: 'list://CARD:Card,CASH:Cash,CHEQUE:Cheque,DD:DD,OFFLINE_NEFT:NEFT,OFFLINE_RTGS:RTGS,ONLINE:Online,POSTAL_ORDER:PostalOrder'
    source: pt
    isMandatory: false
    searchClause: AND instrumenttype = replace($paymentMode,',','_')
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND financialyear = $financialyear
  - name: localityArray
    label: reports.pt.zoneList
    type: boundarylist
    source: pt
    isMandatory: false
    searchClause: AND pt_addr.locality IN ($localityArray)
  query: |
      -- Use CTE to force query plan, compute & use CTE later
        WITH receipt_breakup AS (
                   SELECT 
                    receiptnumber, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_PENALTY' THEN adjustedamount ELSE 0 END) as adhocpenalty,
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_REBATE' THEN adjustedamount ELSE 0 END) as adhocrebate,
                    SUM(CASE WHEN taxheadcode LIKE 'PT_FIRE_CESS' THEN adjustedamount ELSE 0 END) as firecess,
                    SUM(CASE WHEN taxheadcode LIKE 'PT_CANCER_CESS' THEN adjustedamount ELSE 0 END) as cancercess,
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST' THEN adjustedamount ELSE 0 END) as interest,
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY' THEN adjustedamount ELSE 0 END) as penalty,
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_REBATE' THEN adjustedamount ELSE 0 END) as rebate,
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TAX' THEN adjustedamount ELSE 0 END) as propertytax,
                     (SUM(CASE WHEN taxheadcode LIKE 'PT_UNIT_USAGE_EXEMPTION' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_OWNER_EXEMPTION' THEN adjustedamount ELSE 0 END) )as exemption,
                    ( SUM(CASE WHEN taxheadcode LIKE 'PT_ROUNDOFF' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_DEBIT' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_CREDIT' THEN adjustedamount ELSE 0 END)) as adjustment
              FROM egcl_billaccountdetail as bad
              INNER JOIN egcl_billdetial as bd on bd.id = bad.billdetailid
              INNER JOIN egcl_paymentdetail as pd on pd.billid = bd.billid
              INNER JOIN egcl_payment as payment on pd.paymentid=payment.id
              WHERE bd.tenantid = $tenantid  and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT'
              and pd.createdby::INTEGER in (select user_id from eg_userrole_v1 where role_code ='SEVA_KENDRA_EMP')
              GROUP BY pd.receiptnumber
      )
      SELECT 
       bill.tenantid AS tenantid, 
        bill.id, 
        pt_detail.property AS propertyid, 
        pt_detail.assessmentnumber AS assessmentnumber,  
        bill.consumercode, 
        pd.receiptdate, 
        to_char((To_timestamp(pd.receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS transactiondate,
        payment.ifsccode AS bankname, 
        pd.receiptnumber, 
        payment.totalamountpaid as amount, 
        payment.paymentmode as instrumenttype, 
        payment.transactionnumber, 
        receipt_breakup.*, 
        pd.due AS pendingamount,
        pt_detail.financialyear,
        to_char((To_timestamp(pd.manualreceiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS g8issuedate,
        Initcap(COALESCE(pt_detail.usagecategoryminor, pt_detail.usagecategorymajor)) as usagetype,
        manualreceiptnumber as g8receiptno,
        (CASE WHEN collectiontype='COUNTER' THEN eg_user.name ELSE '30048|23/xn3x2FAxn8vYAN0IdplsOxaE=' END) as collectorname,
        pt_detail.additionaldetails->>'remarks' as "remarks"
      FROM egcl_bill AS bill
      INNER JOIN egcl_billdetial as bd on bd.billid = bill.id
      LEFT OUTER JOIN egcl_paymentdetail as pd on pd.billid = bd.billid
      LEFT OUTER JOIN egcl_payment as payment on pd.paymentid=payment.id
      JOIN eg_pt_propertydetail_v2 pt_detail ON pt_detail.property  = bill.consumercode
      JOIN eg_pt_address_v2 pt_addr ON pt_detail.property = pt_addr.property
      JOIN receipt_breakup  ON receipt_breakup.receiptnumber =  pd.receiptnumber
      LEFT OUTER JOIN eg_user ON eg_user.id = pd.createdby::INTEGER
      WHERE bd.tenantid = $tenantid  and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and pd.createdby::INTEGER in (select user_id 
      FROM eg_userrole_v1 where role_code ='SEVA_KENDRA_EMP')
  orderby: ORDER BY pd.receiptdate DESC
  

- reportName: ReceiptRegisterSummary_V2
  decryptionPathId: ReceiptRegisterShort_V2
  summary: Receipt Register Summary
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "A1"
  sourceColumns:
  - name: ulb
    label: reports.pt.ulb
    type: string
    source: pt
    total: false
  - name: adhocpenalty
    label: reports.pt.adhocpenalty
    type: string
    source: pt
    total: true
  - name: adhocrebate
    label: reports.pt.adhocrebate
    type: string
    source: pt
    total: true
  - name: firecess
    label: reports.pt.firecess
    type: string
    source: pt
    total: true
  - name: cancercess
    label: reports.pt.cancercess
    type: string
    source: pt
    total: true
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: true
  - name: rebate
    label: reports.pt.rebate
    type: string
    source: pt
    total: true
  - name: propertytax
    label: reports.pt.propertytax
    type: string
    source: pt
    total: true
  - name: exemption
    label: reports.pt.exemption
    type: string
    source: pt
    total: true
  - name: adjustment
    label: reports.pt.adjustment
    type: string
    source: pt
    total: true
  - name: noofassessments
    label: reports.pt.noofassessments
    type: string
    source: pt
    total: true     
  - name: sumcash
    label: reports.pt.sumcash
    type: string
    source: pt
    total: true 
  - name: sumcheque
    label: reports.pt.sumcheque
    type: string
    source: pt
    total: true
  - name: countcheque
    label: reports.pt.countcheque
    type: string
    source: pt
    total: true     
  - name: sumonline
    label: reports.pt.sumonline
    type: string
    source: pt
    total: true 
  - name: totalamount
    label: reports.pt.totalamount
    type: string
    source: pt
    total: true    
  - name: collectorname
    label: reports.pt.collectorname
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pd.receiptdate <= $toDate
  - name: collectorname
    label: reports.pt.collectorname
    type: singlevaluelist
    pattern: http://egov-hrms:8080/egov-hrms/employees/_search?tenantId=$tenantid&roles=PTCEMP|$.Employees[*].user.id|$.Employees[*].user.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND eg_user.id = $collectorname::INTEGER
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      SELECT
        split_part(bd.tenantid,'.',2) as ulb,
        Count (distinct pd.paymentid) as noofassessments,
        SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_PENALTY' THEN adjustedamount ELSE 0 END) as adhocpenalty,
        SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_REBATE' THEN adjustedamount ELSE 0 END) as adhocrebate,
        SUM(CASE WHEN taxheadcode LIKE 'PT_FIRE_CESS' THEN adjustedamount ELSE 0 END) as firecess,
        SUM(CASE WHEN taxheadcode LIKE 'PT_CANCER_CESS' THEN adjustedamount ELSE 0 END) as cancercess,
        SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST' THEN adjustedamount ELSE 0 END) as interest,
        SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY' THEN adjustedamount ELSE 0 END) as penalty,
        SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_REBATE' THEN adjustedamount ELSE 0 END) as rebate,
        SUM(CASE WHEN taxheadcode LIKE 'PT_TAX' THEN adjustedamount ELSE 0 END) as propertytax,
        (SUM(CASE WHEN taxheadcode LIKE 'PT_UNIT_USAGE_EXEMPTION' THEN adjustedamount ELSE 0 END)
        + SUM(CASE WHEN taxheadcode LIKE 'PT_OWNER_EXEMPTION' THEN adjustedamount ELSE 0 END) )as exemption,
        ( SUM(CASE WHEN taxheadcode LIKE 'PT_ROUNDOFF' THEN adjustedamount ELSE 0 END)
        + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_DEBIT' THEN adjustedamount ELSE 0 END)
        + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_CREDIT' THEN adjustedamount ELSE 0 END)) as adjustment,
        sum(case when payment.paymentmode='CASH' then bad.adjustedamount else 0 end) as sumcash,
        sum(case when payment.paymentmode='CHEQUE' then bad.adjustedamount else 0 end) as sumcheque,
        COUNT(distinct case when payment.paymentmode='CHEQUE' then  concat(payment.paymentmode,payment.instrumentnumber,payment.ifsccode,payment.totalamountpaid)  end) as countcheque,
        sum(case when payment.paymentmode='ONLINE' then bad.adjustedamount else 0 end) as sumonline,
        (CASE WHEN payment.paymentmode!='ONLINE' THEN eg_user.name ELSE '30048|23/xn3x2FAxn8vYAN0IdplsOxaE=' END) as collectorname, --for Online collecion show None as collectorname
        sum(adjustedamount) as totalamount
      FROM egcl_billaccountdetail as bad
      INNER JOIN egcl_billdetial as bd on bd.id = bad.billdetailid
      INNER JOIN egcl_paymentdetail as pd on pd.billid = bd.billid
      INNER JOIN egcl_payment as payment on pd.paymentid=payment.id
      LEFT OUTER JOIN eg_user ON eg_user.id = pd.createdby::INTEGER
      WHERE bd.tenantid = $tenantid  and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT'
  groupby: group by collectorname,bd.tenantid
  
- reportName: StateReceiptRegisterSummary_V2
  summary: Receipt Register Summary
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "A1"
  sourceColumns:
  - name: ulb
    label: reports.pt.ulb
    type: string
    source: pt
    total: false
  - name: adhocpenalty
    label: reports.pt.adhocpenalty
    type: string
    source: pt
    total: true
  - name: adhocrebate
    label: reports.pt.adhocrebate
    type: string
    source: pt
    total: true
  - name: firecess
    label: reports.pt.firecess
    type: string
    source: pt
    total: true
  - name: cancercess
    label: reports.pt.cancercess
    type: string
    source: pt
    total: true
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: true
  - name: rebate
    label: reports.pt.rebate
    type: string
    source: pt
    total: true
  - name: propertytax
    label: reports.pt.propertytax
    type: string
    source: pt
    total: true
  - name: exemption
    label: reports.pt.exemption
    type: string
    source: pt
    total: true
  - name: adjustment
    label: reports.pt.adjustment
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate <= $toDate
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND bd.tenantid = $ulb
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      SELECT
        split_part(bd.tenantid,'.',2) as ulb,
        SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_PENALTY' THEN adjustedamount ELSE 0 END) as adhocpenalty,
        SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_REBATE' THEN adjustedamount ELSE 0 END) as adhocrebate, 
        SUM(CASE WHEN taxheadcode LIKE 'PT_FIRE_CESS' THEN adjustedamount ELSE 0 END) as firecess, 
        SUM(CASE WHEN taxheadcode LIKE 'PT_CANCER_CESS' THEN adjustedamount ELSE 0 END) as cancercess, 
        SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST' THEN adjustedamount ELSE 0 END) as interest, 
        SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY' THEN adjustedamount ELSE 0 END) as penalty, 
        SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_REBATE' THEN adjustedamount ELSE 0 END) as rebate, 
        SUM(CASE WHEN taxheadcode LIKE 'PT_TAX' THEN adjustedamount ELSE 0 END) as propertytax, 
        (SUM(CASE WHEN taxheadcode LIKE 'PT_UNIT_USAGE_EXEMPTION' THEN adjustedamount ELSE 0 END)
        + SUM(CASE WHEN taxheadcode LIKE 'PT_OWNER_EXEMPTION' THEN adjustedamount ELSE 0 END) )as exemption,
        ( SUM(CASE WHEN taxheadcode LIKE 'PT_ROUNDOFF' THEN adjustedamount ELSE 0 END)
        + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_DEBIT' THEN adjustedamount ELSE 0 END)
        + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_CREDIT' THEN adjustedamount ELSE 0 END)) as adjustment
      FROM egcl_billaccountdetail as bad
      INNER JOIN egcl_billdetial as bd on bd.id = bad.billdetailid
      INNER JOIN egcl_paymentdetail as pd on pd.billid = bd.billid
      WHERE bd.tenantid != 'pb.testing' and pd.businessservice='PT'
  groupby: group by bd.tenantid
  orderby: order by bd.tenantid

- reportName: FYCollectionsReport_V2
  summary: FY Collections
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "Legal"
  sourceColumns:
  - name: financialyear
    label: reports.pt.financialyear
    type: string
    source: pt
    total: false
  - name: residential
    label: reports.pt.residential
    type: string
    source: pt
    total: true
  - name: countresidential
    label: reports.pt.countresidential
    type: string
    source: pt
    total: true  
  - name: nonresidential
    label: reports.pt.nonresidential
    type: string
    source: pt
    total: true
  - name: countnonresidential
    label: reports.pt.countnonresidential
    type: string
    source: pt
    total: true
  - name: mixed
    label: reports.pt.mixed
    type: string
    source: pt
    total: true
  - name: countmixed
    label: reports.pt.countmixed
    type: string
    source: pt
    total: true
  - name: totalamount
    label: reports.pt.totalamount
    type: string
    source: pt
    total: true
  - name: totalcount
    label: reports.pt.totalcount
    type: string
    source: pt
    total: true    
  - name: online
    label: reports.pt.online
    type: string
    source: pt
    total: true
  - name: cash
    label: reports.pt.cash
    type: string
    source: pt
    total: true
  - name: cheque
    label: reports.pt.cheque
    type: string
    source: pt
    total: true
  - name: dd
    label: reports.pt.dd
    type: string
    source: pt
    total: true
  - name: card
    label: reports.pt.card
    type: string
    source: pt
    total: true
  - name: neft
    label: reports.pt.neft
    type: string
    source: pt
    total: true
  - name: rtgs
    label: reports.pt.rtgs
    type: string
    source: pt
    total: true
  - name: po
    label: reports.pt.po
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate <= $toDate
  - name: localityArray
    label: reports.pt.zoneList
    type: boundarylist
    source: pt
    isMandatory: false
    searchClause: AND pt_addr.locality IN ($localityArray)
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      SELECT 
        sum(payment.totalamountpaid) as totalamount,
        count(payment.totalamountpaid) as totalcount,
        sum(case when payment.paymentmode='ONLINE' then payment.totalamountpaid else 0 end) as "online",
        sum(case when payment.paymentmode='CASH' then payment.totalamountpaid else 0 end) as "cash",
        sum(case when payment.paymentmode='CHEQUE' then payment.totalamountpaid else 0 end) as "cheque",
        sum(case when payment.paymentmode='DD' then payment.totalamountpaid else 0 end) as "dd",
        sum(case when payment.paymentmode='CARD' then payment.totalamountpaid else 0 end) as "card",
        sum(case when payment.paymentmode='OFFLINE_RTGS' then payment.totalamountpaid else 0 end) as "rtgs",
        sum(case when payment.paymentmode='OFFLINE_NEFT' then payment.totalamountpaid else 0 end) as "neft",
        sum(case when payment.paymentmode='POTAL_ORDER' then payment.totalamountpaid else 0 end) as "po",
        sum(case when split_part(pt.usagecategory, '.', 1)='RESIDENTIAL' then payment.totalamountpaid else 0 end) as "residential",
        sum(case when split_part(pt.usagecategory, '.', 1)='RESIDENTIAL' then 1 else 0 end) as "countresidential",
        sum(case when split_part(pt.usagecategory, '.', 1) = 'NONRESIDENTIAL' then payment.totalamountpaid else 0 end) as "nonresidential",
        sum(case when pt.usagecategory like 'NONRESIDENTIAL%' then 1 else 0 end) as "countnonresidential",
        sum(case when pt.usagecategory='MIXED' then payment.totalamountpaid else 0 end) as "mixed",
        sum(case when pt.usagecategory='MIXED' then 1 else 0 end) as "countmixed",
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, 
      (select * from (select *,(row_number() over(partition by propertyid order by lastmodifiedtime desc)) as rw from eg_pt_property  where tenantid=$tenantid) pts where rw=1) as pt,
      egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode  and pt_addr.propertyid=pt.id --and pt.status!='INACTIVE'
  groupby: GROUP BY financialyear
  orderby: ORDER BY financialyear
  
- reportName: FYCollectionsReport_WithoutLocality_V2
  summary: FY Collections
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "Legal"
  sourceColumns:
  - name: financialyear
    label: reports.pt.financialyear
    type: string
    source: pt
    total: false
  - name: residential
    label: reports.pt.residential
    type: string
    source: pt
    total: true
  - name: countresidential
    label: reports.pt.countresidential
    type: string
    source: pt
    total: true  
  - name: nonresidential
    label: reports.pt.nonresidential
    type: string
    source: pt
    total: true
  - name: countnonresidential
    label: reports.pt.countnonresidential
    type: string
    source: pt
    total: true
  - name: mixed
    label: reports.pt.mixed
    type: string
    source: pt
    total: true
  - name: countmixed
    label: reports.pt.countmixed
    type: string
    source: pt
    total: true
  - name: totalamount
    label: reports.pt.totalamount
    type: string
    source: pt
    total: true
  - name: totalcount
    label: reports.pt.totalcount
    type: string
    source: pt
    total: true    
  - name: online
    label: reports.pt.online
    type: string
    source: pt
    total: true
  - name: cash
    label: reports.pt.cash
    type: string
    source: pt
    total: true
  - name: cheque
    label: reports.pt.cheque
    type: string
    source: pt
    total: true
  - name: dd
    label: reports.pt.dd
    type: string
    source: pt
    total: true
  - name: card
    label: reports.pt.card
    type: string
    source: pt
    total: true
  - name: neft
    label: reports.pt.neft
    type: string
    source: pt
    total: true
  - name: rtgs
    label: reports.pt.rtgs
    type: string
    source: pt
    total: true
  - name: po
    label: reports.pt.po
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate <= $toDate
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      SELECT 
        sum(payment.totalamountpaid) as totalamount,
        count(payment.totalamountpaid) as totalcount,
        sum(case when payment.paymentmode='ONLINE' then payment.totalamountpaid else 0 end) as "online",
        sum(case when payment.paymentmode='CASH' then payment.totalamountpaid else 0 end) as "cash",
        sum(case when payment.paymentmode='CHEQUE' then payment.totalamountpaid else 0 end) as "cheque",
        sum(case when payment.paymentmode='DD' then payment.totalamountpaid else 0 end) as "dd",
        sum(case when payment.paymentmode='CARD' then payment.totalamountpaid else 0 end) as "card",
        sum(case when payment.paymentmode='OFFLINE_RTGS' then payment.totalamountpaid else 0 end) as "rtgs",
        sum(case when payment.paymentmode='OFFLINE_NEFT' then payment.totalamountpaid else 0 end) as "neft",
        sum(case when payment.paymentmode='POTAL_ORDER' then payment.totalamountpaid else 0 end) as "po",
        sum(case when split_part(pt.usagecategory, '.', 1)='RESIDENTIAL' then payment.totalamountpaid else 0 end) as "residential",
        sum(case when split_part(pt.usagecategory, '.', 1)='RESIDENTIAL' then 1 else 0 end) as "countresidential",
        sum(case when split_part(pt.usagecategory, '.', 1) = 'NONRESIDENTIAL' then payment.totalamountpaid else 0 end) as "nonresidential",
        sum(case when pt.usagecategory like 'NONRESIDENTIAL%' then 1 else 0 end) as "countnonresidential",
        sum(case when pt.usagecategory='MIXED' then payment.totalamountpaid else 0 end) as "mixed",
        sum(case when pt.usagecategory='MIXED' then 1 else 0 end) as "countmixed",
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, 
      (select * from (select *,(row_number() over(partition by propertyid order by lastmodifiedtime desc)) as rw from eg_pt_property  where tenantid=$tenantid) pts where rw=1) as pt,
      egcl_bill bill
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode --and pt.status!='INACTIVE'
  groupby: GROUP BY financialyear
  orderby: ORDER BY financialyear

- reportName: ULBDEFAULTERPTREPORT_V2
  decryptionPathId: ULBDEFAULTERPTREPORT_V2
  summary: ULB Defaulter Pt report
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: ulb
    label: reports.pt.ulb
    type: string
    source: pt
    total: false
  - name: propertytaxuniqueid
    label: reports.pt.propertytaxuniqueid
    type: string
    source: pt
    total: false  
  - name: transcationdate
    label: reports.pt.transcationdate
    type: string
    source: pt
    total: false  
  - name: receiptnumber
    label: reports.pt.receiptnumber
    type: string
    source: pt
    total: false  
  - name: existingpropertyid
    label: reports.pt.existingpropertyid
    type: string
    source: pt
    total: false
  - name: financialyear
    label: reports.pt.financialYear
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false  
  - name: guardianname
    label: reports.pt.guardianname
    type: string
    source: pt
    total: false  
  - name: propertytype
    label: reports.pt.propertytype
    type: string
    source: pt
    total: false  
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false   
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false
  - name: payeraddress
    label: reports.pt.payeraddress
    type: string
    source: pt
    total: false 
  searchParams:
  - name: localityArray
    label: reports.pt.zoneList
    type: boundarylist
    source: pt
    isMandatory: false
    searchClause: AND pta.locality IN ($localityArray)
  query: |
   --S.no    Service Name	ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number	Existing Property ID    Type Of Property	Mobile Number   	Address
   with eg_pt_unit_v2_ot as (
     select 
        propertyid, 
        string_agg(distinct pu.occupancytype, ',') as occupancytype, 
        --string_agg(distinct coalesce(usagecategory), ',') as propertytype 
        string_agg(distinct Initcap(case when usagecategory like '%.%' then split_part(usagecategory,'.',2) else usagecategory end),',') as propertytype
      from eg_pt_unit as pu
      where  pu.tenantid = $tenantid
      group by propertyid
      )
     select
       distinct on (payd.receiptnumber)
       initcap(split_part(payd.tenantid, '.', 2)) as "ulb",
       split_part(consumercode, ':', 1) as "propertytaxuniqueid",
       to_char((To_timestamp(payd.receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS  "transcationdate",
       payd.receiptnumber    as "receiptnumber",
       pt.oldpropertyid as "existingpropertyid",
       concat(to_char((To_timestamp(billd.fromperiod/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-',to_char((To_timestamp(billd.toperiod/1000) at time Zone 'Asia/Kolkata'),'YY'))  AS "financialyear",
       eu."name"  as "ownername", 
       eu.guardian  as "guardianname",
       pot.propertytype     as "propertytype",
       eu.mobilenumber as "mobileno",          
       REGEXP_REPLACE(REGEXP_REPLACE(CONCAT(pta.doorno, ',', pta.buildingname, ',',pta.street,',', pta.pincode), ',+', ','), '^,|,$', '') as "address"
     from egcl_paymentdetail as payd
     
     inner join egcl_payment as payment on payment.id = payd.paymentid        
     inner join egcl_bill as bill on bill.id = payd.billid 
     inner join egcl_billdetial as billd on billd.billid=bill.id		 
     inner join eg_pt_property    as pt on pt.propertyid = bill.consumercode
     inner join eg_pt_owner as po on po.propertyid = pt.id  and po.status='ACTIVE'
     inner join eg_user as eu on eu.uuid     = po.userid
     inner join eg_pt_address    as pta on pta.propertyid = pt.id
     left outer join eg_pt_unit_v2_ot as pot on pot.propertyid = pt.id   
     where payd.tenantid = $tenantid 
     and bill.consumercode not in (select consumercode from egcl_bill where tenantid=$tenantid and businessservice='PT' and id in (select billid from egcl_billdetial where tenantid=$tenantid and concat(to_char((To_timestamp(fromperiod/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-',to_char((To_timestamp(toperiod/1000) at time Zone 'Asia/Kolkata'),'YY')) ='2020-21'))
     and pt.status!='INACTIVE'
     
- reportName: ULBDEFAULTERPTREPORT_NEW_V2_OLD
  decryptionPathId: ULBDEFAULTERPTREPORT_V2
  summary: ULB Defaulter Pt report
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: propertytaxuniqueid
    label: reports.pt.propertytaxuniqueid
    type: string
    source: pt
    total: false  
  - name: existingpropertyid
    label: reports.pt.existingpropertyid
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false  
  - name: propertytype
    label: reports.pt.propertytype
    type: string
    source: pt
    total: false  
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false   
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false
  searchParams:
  - name: localityArray
    label: reports.pt.zoneList
    type: boundarylist
    source: pt
    isMandatory: false
    searchClause: AND pta.locality IN ($localityArray)
  query: |
   --S.no    Service Name	ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number	Existing Property ID    Type Of Property	Mobile Number   	Address
    with eg_pt_unit_v2_ot as (
      select 
        propertyid, 
        string_agg(distinct pu.occupancytype, ',') as occupancytype, 
        --string_agg(distinct coalesce(usagecategory), ',') as propertytype 
        string_agg(distinct Initcap(case when usagecategory like '%.%' then split_part(usagecategory,'.',2) else usagecategory end),',') as propertytype
      from eg_pt_unit as pu
      where  pu.tenantid = $tenantid
      group by propertyid
      )
    select
      --distinct on (payd.receiptnumber)
      --initcap(split_part(payd.tenantid, '.', 2)) as "ulb",
      --split_part(consumercode, ':', 1) as "propertytaxuniqueid",
      --to_char((To_timestamp(payd.receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS  "transcationdate",
      --payd.receiptnumber    as "receiptnumber",
      pt.propertyid as "propertytaxuniqueid",
      string_agg(pt.oldpropertyid,',') as "existingpropertyid",
      --concat(to_char((To_timestamp(billd.fromperiod/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-',to_char((To_timestamp(billd.toperiod/1000) at time Zone 'Asia/Kolkata'),'YY'))  AS "financialyear",
      split_part(string_agg(eu."name",','),',',1)  as "ownername", --first owner
      --eu.guardian  as "guardianname",
      string_agg(pot.propertytype,',')  as "propertytype",
      split_part(string_agg(eu.mobilenumber,','),',',1) as "mobileno",     
      --string_agg(distinct REGEXP_REPLACE(REGEXP_REPLACE(CONCAT(pta.doorno, ',', pta.buildingname, ',',pta.street,',', pta.pincode), ',+', ','), '^,|,$', ''),',') as "address",
      string_agg(distinct concat(pta.doorno,',',pta.plotno,',',pta.buildingname,',',pta.street,',',pta.landmark,',',eg_bndry_mohalla.localityname,',',pta.city),',') as "address"
    from eg_pt_property pt
    --inner join egcl_payment as payment on payment.id = payd.paymentid        
    --inner join egcl_bill as bill on bill.id = payd.billid 
    --inner join egcl_billdetial as billd on billd.billid=bill.id		 
    --inner join     as pt on pt.propertyid = bill.consumercode
    inner join eg_pt_owner as po on po.propertyid = pt.id  and po.status='ACTIVE' 
    inner join eg_user as eu on eu.uuid = po.userid
    inner join eg_pt_address    as pta on pta.propertyid = pt.id
    inner join eg_pt_unit_v2_ot as pot on pot.propertyid = pt.id 
    inner join eg_bndry_mohalla on eg_bndry_mohalla.localitycode=pta.locality
    where pt.tenantid = $tenantid
    --and bill.consumercode not in (select consumercode from egcl_bill where tenantid=$tenantid and businessservice='PT' and id in (select billid from egcl_billdetial where tenantid=$tenantid and concat(to_char((To_timestamp(fromperiod/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-',to_char((To_timestamp(toperiod/1000) at time Zone 'Asia/Kolkata'),'YY')) ='2020-21'))
    and pt.status!='INACTIVE'
    and pt.propertyid not in (select consumercode from egcl_bill where tenantid=$tenantid and businessservice='PT' and id in (select billid from egcl_billdetial where tenantid=$tenantid and concat(to_char((To_timestamp(fromperiod/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-',to_char((To_timestamp(toperiod/1000) at time Zone 'Asia/Kolkata'),'YY')) ='2020-21'))
  groupby: group by pt.propertyid

- reportName: ULBDEFAULTERPTREPORT_NEW_V2
  decryptionPathId: ULBDEFAULTERPTREPORT_V2
  summary: ULB Defaulter Pt report
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: propertytaxuniqueid
    label: reports.pt.propertytaxuniqueid
    type: string
    source: pt
    total: false  
  - name: existingpropertyid
    label: reports.pt.existingpropertyid
    type: string
    source: pt
    total: false
  - name: financailyear
    label: reports.pt.financailyear
    type: string
    source: pt
    total: false  
  - name: amountcollected
    label: reports.pt.amountcollected
    type: string
    source: pt
    total: true
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false  
  - name: propertytype
    label: reports.pt.propertytype
    type: string
    source: pt
    total: false  
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false   
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false
  - name: blockcode
    label: reports.pt.blockname
    type: string
    source: pt
    total: false
  query: |
   --S.no    Service Name	ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number	Existing Property ID    Type Of Property	Mobile Number   	Address
    with props as 
     (select 
       pt.propertyid as "propertytaxuniqueid",
       string_agg(distinct collection.finyear, ', ') as "financailyear" ,
       --string_agg(collection.taxpaid::varchar, ', ') as "amountcollected" ,
       max(collection.taxpaid) as "amountcollected" ,
       string_agg(distinct pt.oldpropertyid,',') as "existingpropertyid",
       split_part(string_agg(eu."name",','),',',1) as "ownername",
       string_agg(pot.propertytype,',') as "propertytype",
       split_part(string_agg(eu.mobilenumber,','),',',1) as "mobileno",
       string_agg(distinct REGEXP_REPLACE(REGEXP_REPLACE(CONCAT(pta.doorno, ',', pta.buildingname, ',',pta.street,',',pta.localityname,',', pta.pincode), ',+', ','), '^,|,$', ''),',') as "address",
       string_agg(distinct blockcode,',') as blockcode
     from eg_pt_property pt
     inner join (select a.consumercode, to_char((To_timestamp(a.taxperiodfrom/1000) at time Zone 'Asia/Kolkata'),'YYYY')||'-'||to_char((To_timestamp(a.taxperiodfrom/1000) at time Zone 'Asia/Kolkata'),'YYYY')::int+1 as finyear, a.tax, a.taxpaid from (select d.consumercode, d.taxperiodfrom, sum(dd.taxamount) tax, sum(dd.collectionamount) as taxpaid
                 from egbs_demanddetail_v1 dd, egbs_demand_v1 d
                 where dd.demandid=d.id
                 and d.status!='CANCELLED' and dd.tenantid=$tenantid and d.tenantid=$tenantid  and d.consumercode like 'PT%'
                 group by d.consumercode, d.taxperiodfrom
                 having sum(dd.taxamount - dd.collectionamount)=0) a,
                 (select d.consumercode, max(d.taxperiodfrom) maxperiod
                 from egbs_demanddetail_v1 dd, egbs_demand_v1 d
                 where dd.demandid=d.id
                 and d.status!='CANCELLED'  and dd.tenantid=$tenantid and d.tenantid=$tenantid  and d.consumercode like 'PT%'
                 group by d.consumercode
                 having sum(dd.taxamount - dd.collectionamount)=0) b
                 where a.consumercode=b.consumercode and a.taxperiodfrom=b.maxperiod
                 ) collection ON collection.consumercode = pt.propertyid
    inner join (SELECT DISTINCT ON (propertyid) propertyid ,name as name , mobilenumber
                 FROM eg_pt_owner , eg_user
                 WHERE  uuid = userid  and eg_pt_owner.tenantid=$tenantid
                 AND status = 'ACTIVE'
                 AND active = true ) eu ON pt.id=eu.propertyid 
    inner join (SELECT propertyid , locality,blockcode,doorno,street,buildingname,pincode,localityname, max(createdtime) 
                 from eg_pt_address inner join eg_bndry_mohalla on eg_bndry_mohalla.localitycode=locality where eg_pt_address.tenantid=$tenantid
                 group by propertyid, locality, doorno,street,buildingname,pincode,localityname,blockcode) pta ON pt.id=pta.propertyid 
    inner join  (select propertyid,
                  string_agg(distinct pu.occupancytype, ',') as occupancytype,
                  string_agg(distinct Initcap(case when usagecategory like '%.%' then split_part(usagecategory,'.',2) else usagecategory end),',') as propertytype
                  from eg_pt_unit as pu
                  where pu.tenantid = $tenantid
                  group by propertyid) pot ON pot.propertyid = pt.id
    where pt.tenantid = $tenantid
    and pt.status!='INACTIVE'
    and pt.propertyid not in (
    
                            select consumercode from egcl_bill
                              where tenantid=$tenantid
                              and businessservice='PT'
                              and id in (select billid
                            from egcl_billdetial
                            where tenantid=$tenantid and concat(to_char((To_timestamp(fromperiod/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-',to_char((To_timestamp(toperiod/1000) at time Zone 'Asia/Kolkata'),'YY')) ='2020-21'))
                            group by pt.propertyid
                            ),
        prop2019 as
        (
        select 
           oldpropertyid as oldpropertyid,
           pt.propertyid as propertyid
        from eg_pt_property pt
        inner join eg_pt_assessment as assessment on assessment.propertyid=pt.propertyid and assessment.assessmentyear='2019-20' and assessment.tenantid=$tenantid
        where pt.tenantid=$tenantid
        group by pt.propertyid,oldpropertyid
        )
        select * from props
        where propertytaxuniqueid not in (select propertyid from prop2019 where oldpropertyid in (select concat('RID',previous_returnid) from ikon_2020_21_non_migrated_records where tenantid=$tenantid))

- reportName: ULBDEFAULTERPTREPORT_FY_SEARCH
  decryptionPathId: ULBDEFAULTERPTREPORT_V2
  summary: ULB Defaulter Pt report
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: propertytaxuniqueid
    label: reports.pt.propertytaxuniqueid
    type: string
    source: pt
    total: false  
  - name: existingpropertyid
    label: reports.pt.existingpropertyid
    type: string
    source: pt
    total: false
  - name: financailyear
    label: reports.pt.financailyear
    type: string
    source: pt
    total: false  
  - name: amountcollected
    label: reports.pt.amountcollected
    type: string
    source: pt
    total: true
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false  
  - name: propertytype
    label: reports.pt.propertytype
    type: string
    source: pt
    total: false  
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false   
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false
  - name: blockcode
    label: reports.pt.blockname
    type: string
    source: pt
    total: false
  searchParams:
  - name: finYear
    label: Financial Year
    type: singlevaluelist
    pattern: 'list://2015-16:2015-16,2016-17:2016-17,2017-18:2017-18,2017-18:2017-18,2018-19:2018-19,2019-20:2019-20,2020-21:2020-21,2021-22:2021-22,2022-23:2022-23,2023-24:2023-24'
    source: pt
    isMandatory: true
    searchClause: AND 1=1
  query: |
   --S.no    Service Name	ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number	Existing Property ID    Type Of Property	Mobile Number   	Address
    with props as 
     (select 
       pt.propertyid as "propertytaxuniqueid",
       string_agg(distinct collection.finyear, ', ') as "financailyear" ,
       --string_agg(collection.taxpaid::varchar, ', ') as "amountcollected" ,
       max(collection.taxpaid) as "amountcollected" ,
       string_agg(distinct pt.oldpropertyid,',') as "existingpropertyid",
       split_part(string_agg(eu."name",','),',',1) as "ownername",
       string_agg(pot.propertytype,',') as "propertytype",
       split_part(string_agg(eu.mobilenumber,','),',',1) as "mobileno",
       string_agg(distinct REGEXP_REPLACE(REGEXP_REPLACE(CONCAT(pta.doorno, ',', pta.buildingname, ',',pta.street,',',pta.localityname,',', pta.pincode), ',+', ','), '^,|,$', ''),',') as "address",
       string_agg(distinct blockcode,',') as blockcode
     from eg_pt_property pt
     inner join (select a.consumercode, to_char((To_timestamp(a.taxperiodfrom/1000) at time Zone 'Asia/Kolkata'),'YYYY')||'-'||to_char((To_timestamp(a.taxperiodfrom/1000) at time Zone 'Asia/Kolkata'),'YYYY')::int+1 as finyear, a.tax, a.taxpaid from (select d.consumercode, d.taxperiodfrom, sum(dd.taxamount) tax, sum(dd.collectionamount) as taxpaid
                 from egbs_demanddetail_v1 dd, egbs_demand_v1 d
                 where dd.demandid=d.id
                 and d.status!='CANCELLED' and dd.tenantid=$tenantid and d.tenantid=$tenantid and d.consumercode like 'PT%'
                 group by d.consumercode, d.taxperiodfrom
                 having sum(dd.taxamount - dd.collectionamount)=0) a,
                 (select d.consumercode, max(d.taxperiodfrom) maxperiod
                 from egbs_demanddetail_v1 dd, egbs_demand_v1 d
                 where dd.demandid=d.id
                 and d.status!='CANCELLED'  and dd.tenantid=$tenantid and d.tenantid=$tenantid and d.consumercode like 'PT%'
                 group by d.consumercode
                 having sum(dd.taxamount - dd.collectionamount)=0) b
                 where a.consumercode=b.consumercode and a.taxperiodfrom=b.maxperiod 
                 ) collection ON collection.consumercode = pt.propertyid
    inner join (SELECT DISTINCT ON (propertyid) propertyid ,name as name , mobilenumber
                 FROM eg_pt_owner , eg_user
                 WHERE  uuid = userid and eg_pt_owner.tenantid=$tenantid
                 AND status = 'ACTIVE' 
                 AND active = true ) eu ON pt.id=eu.propertyid 
    inner join (SELECT propertyid , locality,blockcode,doorno,street,buildingname,pincode,localityname, max(createdtime) 
                 from eg_pt_address inner join eg_bndry_mohalla on eg_bndry_mohalla.localitycode=locality where eg_pt_address.tenantid=$tenantid
                 group by propertyid, locality, doorno,street,buildingname,pincode,localityname,blockcode) pta ON pt.id=pta.propertyid 
    inner join  (select propertyid,
                  string_agg(distinct pu.occupancytype, ',') as occupancytype,
                  string_agg(distinct Initcap(case when usagecategory like '%.%' then split_part(usagecategory,'.',2) else usagecategory end),',') as propertytype
                  from eg_pt_unit as pu
                  where pu.tenantid = $tenantid
                  group by propertyid) pot ON pot.propertyid = pt.id
    where pt.tenantid = $tenantid
    and pt.status!='INACTIVE'
    and pt.propertyid not in (
                            select consumercode from egcl_bill
                              where tenantid=$tenantid
                              and businessservice='PT'
                              and id in (select billid
                            from egcl_billdetial
                            where tenantid=$tenantid and concat(to_char((To_timestamp(fromperiod/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-',to_char((To_timestamp(toperiod/1000) at time Zone 'Asia/Kolkata'),'YY')) =$finYear))
                            group by pt.propertyid
                            )
        select * from props where 1=1 
        --where propertytaxuniqueid not in (select propertyid from prop2019 where oldpropertyid in (select concat('RID',previous_returnid) from ikon_2020_21_non_migrated_records where tenantid=$tenantid))

- reportName: ULBDEFAULTERPTREPORT_MINI_STATE_V2_OLD
  decryptionPathId: ULBDEFAULTERPTREPORT_V2
  summary: ULB Defaulter Pt report
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: propertytaxuniqueid
    label: reports.pt.propertytaxuniqueid
    type: string
    source: pt
    total: false  
  - name: existingpropertyid
    label: reports.pt.existingpropertyid
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false  
  - name: propertytype
    label: reports.pt.propertytype
    type: string
    source: pt
    total: false  
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false   
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false
  searchParams:
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND pt.tenantid = $ulb
  query: |
   --S.no    Service Name	ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number	Existing Property ID    Type Of Property	Mobile Number   	Address
    with eg_pt_unit_v2_ot as (
      select 
        propertyid, 
        string_agg(distinct pu.occupancytype, ',') as occupancytype, 
        --string_agg(distinct coalesce(usagecategory), ',') as propertytype 
        string_agg(distinct Initcap(case when usagecategory like '%.%' then split_part(usagecategory,'.',2) else usagecategory end),',') as propertytype
      from eg_pt_unit as pu
      where  pu.tenantid = $ulb
      group by propertyid
      ),
    prop2019 as
        (
        select 
           oldpropertyid as oldpropertyid,
           pt.propertyid as propertyid
        from eg_pt_property pt
        inner join eg_pt_assessment as assessment on assessment.propertyid=pt.propertyid and assessment.assessmentyear='2019-20' and assessment.tenantid=$ulb
        where pt.tenantid=$ulb
        group by pt.propertyid,oldpropertyid
        )
    select
      --distinct on (payd.receiptnumber)
      --initcap(split_part(payd.tenantid, '.', 2)) as "ulb",
      --split_part(consumercode, ':', 1) as "propertytaxuniqueid",
      --to_char((To_timestamp(payd.receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS  "transcationdate",
      --payd.receiptnumber    as "receiptnumber",
      pt.propertyid as "propertytaxuniqueid",
      string_agg(pt.oldpropertyid,',') as "existingpropertyid",
      --concat(to_char((To_timestamp(billd.fromperiod/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-',to_char((To_timestamp(billd.toperiod/1000) at time Zone 'Asia/Kolkata'),'YY'))  AS "financialyear",
      split_part(string_agg(eu."name",','),',',1)  as "ownername", 
      --eu.guardian  as "guardianname",
      string_agg(pot.propertytype,',')  as "propertytype",
      split_part(string_agg(eu.mobilenumber,','),',',1) as "mobileno",     
      string_agg(distinct REGEXP_REPLACE(REGEXP_REPLACE(CONCAT(pta.doorno, ',', pta.buildingname, ',',pta.street,',', pta.pincode), ',+', ','), '^,|,$', ''),',') as "address"
    from eg_pt_property pt
    --inner join egcl_payment as payment on payment.id = payd.paymentid        
    --inner join egcl_bill as bill on bill.id = payd.billid 
    --inner join egcl_billdetial as billd on billd.billid=bill.id		 
    --inner join     as pt on pt.propertyid = bill.consumercode
    inner join eg_pt_owner as po on po.propertyid = pt.id  and po.status='ACTIVE' 
    inner join eg_user as eu on eu.uuid     = po.userid
    inner join eg_pt_address    as pta on pta.propertyid = pt.id
    inner join eg_pt_unit_v2_ot as pot on pot.propertyid = pt.id   
    where pt.tenantid = $ulb
    --and bill.consumercode not in (select consumercode from egcl_bill where tenantid=$ulb and businessservice='PT' and id in (select billid from egcl_billdetial where tenantid=$ulb and concat(to_char((To_timestamp(fromperiod/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-',to_char((To_timestamp(toperiod/1000) at time Zone 'Asia/Kolkata'),'YY')) ='2020-21'))
    and pt.status!='INACTIVE'
    and pt.propertyid not in (select consumercode from egcl_bill where tenantid=$ulb and businessservice='PT' and id in (select billid from egcl_billdetial where tenantid=$ulb and concat(to_char((To_timestamp(fromperiod/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-',to_char((To_timestamp(toperiod/1000) at time Zone 'Asia/Kolkata'),'YY')) ='2020-21'))
    and pt.propertyid not in (select propertyid from prop2019 where oldpropertyid in (select concat('RID',previous_returnid) from ikon_2020_21_non_migrated_records where tenantid=$ulb))
  groupby: group by pt.propertyid
  
- reportName: ULBDEFAULTERPTREPORT_MINI_STATE_V2
  decryptionPathId: ULBDEFAULTERPTREPORT_V2
  summary: ULB Defaulter Pt report
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false  
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false   
  searchParams:
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND 1=1
  query: |
   --S.no    Service Name	ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number	Existing Property ID    Type Of Property	Mobile Number   	Address
    select mobilenumber,name from eg_user 
    where uuid in (select userid from eg_pt_owner where propertyid in
    (select id from eg_pt_property where status='ACTIVE' and tenantid=$ulb 
    and propertyid in (select consumercode from egcl_bill where id in (select billid from egcl_billdetial where fromperiod=1554076800000 and toperiod=1585699199000 and tenantid=$ulb and amountpaid>100000) and businessservice='PT')
    and propertyid not in (select consumercode from egcl_bill where id in (select billid from egcl_billdetial where fromperiod=1585699200000 and toperiod=1617215399000 and tenantid=$ulb ) and businessservice='PT')
    ))
        
- reportName: ZoneFYReport_V2
  summary: Zone FY Collection
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: zonecode
    label: reports.pt.zonename
    type: string
    source: pt
    total: false  
  - name: 2013_14PTR
    label: reports.pt.2013_14_PTR
    type: string
    source: pt
    total: true  
  - name: 2013_14Collection
    label: reports.pt.2013_14Collection
    type: string
    source: pt
    total: true
  - name: 2014_15PTR
    label: reports.pt.2014_15_PTR
    type: string
    source: pt
    total: true  
  - name: 2014_15Collection
    label: reports.pt.2014_15Collection
    type: string
    source: pt
    total: true
  - name: 2015_16PTR
    label: reports.pt.2015_16_PTR
    type: string
    source: pt
    total: true  
  - name: 2015_16Collection
    label: reports.pt.2015_16Collection
    type: string
    source: pt
    total: true
  - name: 2016_17PTR
    label: reports.pt.2016_17_PTR
    type: string
    source: pt
    total: true  
  - name: 2016_17Collection
    label: reports.pt.2016_17Collection
    type: string
    source: pt
    total: true
  - name: 2017_18PTR
    label: reports.pt.2017_18_PTR
    type: string
    source: pt
    total: true  
  - name: 2017_18Collection
    label: reports.pt.2017_18Collection
    type: string
    source: pt
    total: true
  - name: 2018_19PTR
    label: reports.pt.2018_19_PTR
    type: string
    source: pt
    total: true  
  - name: 2018_19Collection
    label: reports.pt.2018_19Collection
    type: string
    source: pt
    total: true
  - name: 2019_20PTR
    label: reports.pt.2019_20_PTR
    type: string
    source: pt
    total: true  
  - name: 2019_20Collection
    label: reports.pt.2019_20Collection
    type: string
    source: pt
    total: true
  - name: 2020_21PTR
    label: reports.pt.2020_21_PTR
    type: string
    source: pt
    total: true  
  - name: 2020_21Collection
    label: reports.pt.2020_21Collection
    type: string
    source: pt
    total: true
  - name: 2021_22PTR
    label: reports.pt.2021_22_PTR
    type: string
    source: pt
    total: true  
  - name: 2021_22Collection
    label: reports.pt.2021_22Collection
    type: string
    source: pt
    total: true
  - name: 2022_23PTR
    label: reports.pt.2022_23_PTR
    type: string
    source: pt
    total: true  
  - name: 2022_23Collection
    label: reports.pt.2022_23Collection
    type: string
    source: pt
    total: true  
  - name: totalptr
    label: reports.pt.totalptr
    type: string
    source: pt
    total: true  
  - name: totalcollection
    label: reports.pt.totalcollection
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND 1=1
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND 1=1
  query: |
   --S.no    Service Name ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number Existing Property ID    Type Of Property Mobile Number    Address
    with fy2013 as
    (
      SELECT 
        zonecode,
        sum(payment.totalamountpaid) as amount,
        count(payment.totalamountpaid) as totalcount,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      INNER JOIN eg_bndry_mohalla on eg_bndry_mohalla.localitycode= pt_addr.locality and eg_bndry_mohalla.tenantid=$tenantid
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id
      and concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY'))='2013-14'
      and pd.receiptdate>=$fromDate and pd.receiptdate<=$toDate
      GROUP BY financialyear,zonecode
  
    ), 
    fy2014 as
    (
      SELECT 
        zonecode,
        sum(payment.totalamountpaid) as amount,
        count(payment.totalamountpaid) as totalcount,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      INNER JOIN eg_bndry_mohalla on eg_bndry_mohalla.localitycode= pt_addr.locality and eg_bndry_mohalla.tenantid=$tenantid
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id
      and concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY'))='2014-15'
      and pd.receiptdate>=$fromDate and pd.receiptdate<=$toDate
      GROUP BY financialyear,zonecode
    ), 
    fy2015 as
    (
      SELECT 
        zonecode,
        sum(payment.totalamountpaid) as amount,
        count(payment.totalamountpaid) as totalcount,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      INNER JOIN eg_bndry_mohalla on eg_bndry_mohalla.localitycode= pt_addr.locality and eg_bndry_mohalla.tenantid=$tenantid
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id
      and concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY'))='2015-16'
      and pd.receiptdate>=$fromDate and pd.receiptdate<=$toDate
      GROUP BY financialyear,zonecode
    ), 
    fy2016 as
    (
      SELECT 
        zonecode,
        sum(payment.totalamountpaid) as amount,
        count(payment.totalamountpaid) as totalcount,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      inner JOIN eg_bndry_mohalla on eg_bndry_mohalla.localitycode= pt_addr.locality
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id
      and concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY'))='2016-17'
      and pd.receiptdate>=$fromDate and pd.receiptdate<=$toDate
      GROUP BY financialyear,zonecode
    ), 
    fy2017 as
    (
      SELECT 
        zonecode,
        sum(payment.totalamountpaid) as amount,
        count(payment.totalamountpaid) as totalcount,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      INNER JOIN eg_bndry_mohalla on eg_bndry_mohalla.localitycode= pt_addr.locality and eg_bndry_mohalla.tenantid=$tenantid
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id
      and concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY'))='2017-18'
      and pd.receiptdate>=$fromDate and pd.receiptdate<=$toDate
      GROUP BY financialyear,zonecode
    ),
    fy2018 as
    (
      SELECT 
        zonecode,
        sum(payment.totalamountpaid) as amount,
        count(payment.totalamountpaid) as totalcount,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      INNER JOIN eg_bndry_mohalla on eg_bndry_mohalla.localitycode= pt_addr.locality and eg_bndry_mohalla.tenantid=$tenantid
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id
      and concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY'))='2018-19'
      and pd.receiptdate>=$fromDate and pd.receiptdate<=$toDate
      GROUP BY financialyear,zonecode
    ),
    fy2019 as
    (
      SELECT 
        zonecode,
        sum(payment.totalamountpaid) as amount,
        count(payment.totalamountpaid) as totalcount,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      INNER JOIN eg_bndry_mohalla on eg_bndry_mohalla.localitycode= pt_addr.locality and eg_bndry_mohalla.tenantid=$tenantid
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id
      and concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY'))='2019-20'
      and pd.receiptdate>=$fromDate and pd.receiptdate<=$toDate
      GROUP BY financialyear,zonecode
    ),
    fy2020 as
    (
      SELECT 
        zonecode,
        sum(payment.totalamountpaid) as amount,
        count(payment.totalamountpaid) as totalcount,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      INNER JOIN eg_bndry_mohalla on eg_bndry_mohalla.localitycode= pt_addr.locality and eg_bndry_mohalla.tenantid=$tenantid
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id
      and concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY'))='2020-21'
      and pd.receiptdate>=$fromDate and pd.receiptdate<=$toDate
      GROUP BY financialyear,zonecode
    ),
    fy2021 as
    (
      SELECT 
        zonecode,
        sum(payment.totalamountpaid) as amount,
        count(payment.totalamountpaid) as totalcount,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      INNER JOIN eg_bndry_mohalla on eg_bndry_mohalla.localitycode= pt_addr.locality and eg_bndry_mohalla.tenantid=$tenantid
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id
      and concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY'))='2021-22'
      and pd.receiptdate>=$fromDate and pd.receiptdate<=$toDate
      GROUP BY financialyear,zonecode
    ),
    fy2022 as
    (
      SELECT 
        zonecode,
        sum(payment.totalamountpaid) as amount,
        count(payment.totalamountpaid) as totalcount,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      INNER JOIN eg_bndry_mohalla on eg_bndry_mohalla.localitycode= pt_addr.locality and eg_bndry_mohalla.tenantid=$tenantid
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id
      and concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY'))='2022-23'
      and pd.receiptdate>=$fromDate and pd.receiptdate<=$toDate
      GROUP BY financialyear,zonecode
    ),
    fy2023 as
    (
      SELECT 
        zonecode,
        sum(payment.totalamountpaid) as amount,
        count(payment.totalamountpaid) as totalcount,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      INNER JOIN eg_bndry_mohalla on eg_bndry_mohalla.localitycode= pt_addr.locality and eg_bndry_mohalla.tenantid=$tenantid
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id
      and concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY'))='2023-24'
      and pd.receiptdate>=$fromDate and pd.receiptdate<=$toDate
      GROUP BY financialyear,zonecode
    ),
    zones as
    (
    select zonecode,string_agg(distinct zonename,',') as zname from eg_bndry_mohalla where tenantid=$tenantid group by zonecode
    )
    SELECT 
      zones.zonecode as zonecode,
      zones.zname as zonename,
      coalesce(fy2013.totalcount,0) as "2013_14PTR",
      coalesce(fy2013.amount,0) as "2013_14Collection",
      coalesce(fy2014.totalcount,0) as "2014_15PTR",
      coalesce(fy2014.amount,0) as "2014_15Collection",
      coalesce(fy2015.totalcount,0) as "2015_16PTR",
      coalesce(fy2015.amount,0) as "2015_16Collection",
      coalesce(fy2016.totalcount,0) as "2016_17PTR",
      coalesce(fy2016.amount,0) as "2016_17Collection",
      coalesce(fy2017.totalcount,0) as "2017_18PTR",
      coalesce(fy2017.amount,0) as "2017_18Collection",
      coalesce(fy2018.totalcount,0) as "2018_19PTR",
      coalesce(fy2018.amount,0) as "2018_19Collection",
      coalesce(fy2019.totalcount,0) as "2019_20PTR",
      coalesce(fy2019.amount,0) as "2019_20Collection",
      coalesce(fy2020.totalcount,0) as "2020_21PTR",
      coalesce(fy2020.amount,0) as "2020_21Collection",
      coalesce(fy2021.totalcount,0) as "2021_22PTR",
      coalesce(fy2021.amount,0) as "2021_22Collection",
      coalesce(fy2022.totalcount,0) as "2022_23PTR",
      coalesce(fy2022.amount,0) as "2022_23Collection",
      coalesce(fy2023.totalcount,0) as "2023_24PTR",
      coalesce(fy2023.amount,0) as "2023_24Collection",      
      coalesce(fy2013.totalcount,0)+coalesce(fy2014.totalcount,0)+coalesce(fy2015.totalcount,0)+coalesce(fy2016.totalcount,0)+coalesce(fy2017.totalcount,0)+coalesce(fy2018.totalcount,0)+coalesce(fy2019.totalcount,0)+coalesce(fy2020.totalcount,0)+coalesce(fy2021.totalcount,0)+coalesce(fy2022.totalcount,0)+coalesce(fy2023.totalcount,0) as "totalptr",
      coalesce(fy2013.amount,0)+coalesce(fy2014.amount,0)+coalesce(fy2015.amount,0)+coalesce(fy2016.amount,0)+coalesce(fy2017.amount,0)+coalesce(fy2018.amount,0)+coalesce(fy2019.amount,0)+coalesce(fy2020.amount,0)+coalesce(fy2021.amount,0)+coalesce(fy2022.amount,0)+coalesce(fy2023.amount,0) as "totalcollection"
    from  zones
    left outer join fy2013 on fy2013.zonecode=zones.zonecode
    left outer join fy2014 on fy2014.zonecode=zones.zonecode
    left outer join fy2015 on fy2015.zonecode=zones.zonecode
    left outer join fy2016 on fy2016.zonecode=zones.zonecode
    left outer join fy2017 on fy2017.zonecode=zones.zonecode
    left outer join fy2018 on fy2018.zonecode=zones.zonecode
    left outer join fy2019 on fy2019.zonecode=zones.zonecode
    left outer join fy2020 on fy2020.zonecode=zones.zonecode
    left outer join fy2021 on fy2021.zonecode=zones.zonecode
    left outer join fy2022 on fy2022.zonecode=zones.zonecode
    left outer join fy2023 on fy2023.zonecode=zones.zonecode
    where 1=1
  orderby: order by zonename
  
  
- reportName: BlockFYReport_V2
  summary: Block FY Collection
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: blockname
    label: reports.pt.blockname
    type: string
    source: pt
    total: false  
  - name: 2013_14PTR
    label: reports.pt.2013_14_PTR
    type: string
    source: pt
    total: true  
  - name: 2013_14Collection
    label: reports.pt.2013_14Collection
    type: string
    source: pt
    total: true
  - name: 2014_15PTR
    label: reports.pt.2014_15_PTR
    type: string
    source: pt
    total: true  
  - name: 2014_15Collection
    label: reports.pt.2014_15Collection
    type: string
    source: pt
    total: true
  - name: 2015_16PTR
    label: reports.pt.2015_16_PTR
    type: string
    source: pt
    total: true  
  - name: 2015_16Collection
    label: reports.pt.2015_16Collection
    type: string
    source: pt
    total: true
  - name: 2016_17PTR
    label: reports.pt.2016_17_PTR
    type: string
    source: pt
    total: true  
  - name: 2016_17Collection
    label: reports.pt.2016_17Collection
    type: string
    source: pt
    total: true
  - name: 2017_18PTR
    label: reports.pt.2017_18_PTR
    type: string
    source: pt
    total: true  
  - name: 2017_18Collection
    label: reports.pt.2017_18Collection
    type: string
    source: pt
    total: true
  - name: 2018_19PTR
    label: reports.pt.2018_19_PTR
    type: string
    source: pt
    total: true  
  - name: 2018_19Collection
    label: reports.pt.2018_19Collection
    type: string
    source: pt
    total: true
  - name: 2019_20PTR
    label: reports.pt.2019_20_PTR
    type: string
    source: pt
    total: true  
  - name: 2019_20Collection
    label: reports.pt.2019_20Collection
    type: string
    source: pt
    total: true
  - name: 2020_21PTR
    label: reports.pt.2020_21_PTR
    type: string
    source: pt
    total: true  
  - name: 2020_21Collection
    label: reports.pt.2020_21Collection
    type: string
    source: pt
    total: true  
  - name: 2021_22PTR
    label: reports.pt.2020_21_PTR
    type: string
    source: pt
    total: true  
  - name: 2021_22Collection
    label: reports.pt.2020_21Collection
    type: string
    source: pt
    total: true
  - name: 2022_23PTR
    label: reports.pt.2022_23_PTR
    type: string
    source: pt
    total: true  
  - name: 2021_22Collection
    label: reports.pt.2022_23Collection
    type: string
    source: pt
    total: true
  - name: totalptr
    label: reports.pt.totalptr
    type: string
    source: pt
    total: true  
  - name: totalcollection
    label: reports.pt.totalcollection
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND 1=1
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND 1=1
  query: |
   --S.no    Service Name ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number Existing Property ID    Type Of Property Mobile Number    Address
    with fy2013 as
    (
    SELECT 
        blockcode,
        sum(payment.totalamountpaid) as amount,
        count(payment.totalamountpaid) as totalcount,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      INNER JOIN eg_bndry_mohalla on eg_bndry_mohalla.localitycode= pt_addr.locality and eg_bndry_mohalla.tenantid=$tenantid
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id
      and concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YY'))='2013-14'
      and pd.receiptdate>=$fromDate and pd.receiptdate<=$toDate
      GROUP BY financialyear,blockcode
  
    ), 
    fy2014 as
    (
    SELECT 
        blockcode,
        sum(payment.totalamountpaid) as amount,
        count(payment.totalamountpaid) as totalcount,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      INNER JOIN eg_bndry_mohalla on eg_bndry_mohalla.localitycode= pt_addr.locality and eg_bndry_mohalla.tenantid=$tenantid
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id
      and concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YY'))='2014-15'
      and pd.receiptdate>=$fromDate and pd.receiptdate<=$toDate
      GROUP BY financialyear,blockcode
    ), 
    fy2015 as
    (
    SELECT 
        blockcode,
        sum(payment.totalamountpaid) as amount,
        count(payment.totalamountpaid) as totalcount,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      INNER JOIN eg_bndry_mohalla on eg_bndry_mohalla.localitycode= pt_addr.locality and eg_bndry_mohalla.tenantid=$tenantid
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id
      and concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YY'))='2015-16'
      and pd.receiptdate>=$fromDate and pd.receiptdate<=$toDate
      GROUP BY financialyear,blockcode
    ), 
    fy2016 as
    (
    SELECT 
        blockcode,
        sum(payment.totalamountpaid) as amount,
        count(payment.totalamountpaid) as totalcount,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      inner JOIN eg_bndry_mohalla on eg_bndry_mohalla.localitycode= pt_addr.locality
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id
      and concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YY'))='2016-17'
      and pd.receiptdate>=$fromDate and pd.receiptdate<=$toDate
      GROUP BY financialyear,blockcode
    ), 
    fy2017 as
    (
    SELECT 
        blockcode,
        sum(payment.totalamountpaid) as amount,
        count(payment.totalamountpaid) as totalcount,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      INNER JOIN eg_bndry_mohalla on eg_bndry_mohalla.localitycode= pt_addr.locality and eg_bndry_mohalla.tenantid=$tenantid
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id
      and concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YY'))='2017-18'
      and pd.receiptdate>=$fromDate and pd.receiptdate<=$toDate
      GROUP BY financialyear,blockcode
    ),
    fy2018 as
    (
    SELECT 
        blockcode,
        sum(payment.totalamountpaid) as amount,
        count(payment.totalamountpaid) as totalcount,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      INNER JOIN eg_bndry_mohalla on eg_bndry_mohalla.localitycode= pt_addr.locality and eg_bndry_mohalla.tenantid=$tenantid
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id
      and concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YY'))='2018-19'
      and pd.receiptdate>=$fromDate and pd.receiptdate<=$toDate
      GROUP BY financialyear,blockcode
    ),
    fy2019 as
    (
    SELECT 
        blockcode,
        sum(payment.totalamountpaid) as amount,
        count(payment.totalamountpaid) as totalcount,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      INNER JOIN eg_bndry_mohalla on eg_bndry_mohalla.localitycode= pt_addr.locality and eg_bndry_mohalla.tenantid=$tenantid
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id
      and concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YY'))='2019-20'
      and pd.receiptdate>=$fromDate and pd.receiptdate<=$toDate
      GROUP BY financialyear,blockcode
    ),
    fy2020 as
    (
    SELECT 
        blockcode,
        sum(payment.totalamountpaid) as amount,
        count(payment.totalamountpaid) as totalcount,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      INNER JOIN eg_bndry_mohalla on eg_bndry_mohalla.localitycode= pt_addr.locality and eg_bndry_mohalla.tenantid=$tenantid
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id
      and concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YY'))='2020-21'
      and pd.receiptdate>=$fromDate and pd.receiptdate<=$toDate
      GROUP BY financialyear,blockcode
    ),
    fy2021 as
    (
    SELECT 
        blockcode,
        sum(payment.totalamountpaid) as amount,
        count(payment.totalamountpaid) as totalcount,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      INNER JOIN eg_bndry_mohalla on eg_bndry_mohalla.localitycode= pt_addr.locality and eg_bndry_mohalla.tenantid=$tenantid
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id
      and concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YY'))='2021-22'
      and pd.receiptdate>=$fromDate and pd.receiptdate<=$toDate
      GROUP BY financialyear,blockcode
    ),
    fy2022 as
    (
    SELECT 
        blockcode,
        sum(payment.totalamountpaid) as amount,
        count(payment.totalamountpaid) as totalcount,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      INNER JOIN eg_bndry_mohalla on eg_bndry_mohalla.localitycode= pt_addr.locality and eg_bndry_mohalla.tenantid=$tenantid
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id
      and concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YY'))='2022-23'
      and pd.receiptdate>=$fromDate and pd.receiptdate<=$toDate
      GROUP BY financialyear,blockcode
    ),
    fy2023 as
    (
    SELECT 
        blockcode,
        sum(payment.totalamountpaid) as amount,
        count(payment.totalamountpaid) as totalcount,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YY')) as financialyear
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, egcl_bill bill,
      (select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      INNER JOIN eg_bndry_mohalla on eg_bndry_mohalla.localitycode= pt_addr.locality and eg_bndry_mohalla.tenantid=$tenantid
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid
      and pt.propertyid = bill.consumercode and pt.status!='INACTIVE' and pt_addr.propertyid=pt.id
      and concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time zone 'Asia/Kolkata'),'YY'))='2023-24'
      and pd.receiptdate>=$fromDate and pd.receiptdate<=$toDate
      GROUP BY financialyear,blockcode
    ),
    blocks as
    (
    select blockcode,string_agg(distinct blockname,',') as zname from eg_bndry_mohalla where tenantid=$tenantid group by blockcode
    )
    SELECT 
      blocks.blockcode as blockcode,
      blocks.zname as blockname,
      coalesce(fy2013.totalcount,0) as "2013_14PTR",
      coalesce(fy2013.amount,0) as "2013_14Collection",
      coalesce(fy2014.totalcount,0) as "2014_15PTR",
      coalesce(fy2014.amount,0) as "2014_15Collection",
      coalesce(fy2015.totalcount,0) as "2015_16PTR",
      coalesce(fy2015.amount,0) as "2015_16Collection",
      coalesce(fy2016.totalcount,0) as "2016_17PTR",
      coalesce(fy2016.amount,0) as "2016_17Collection",
      coalesce(fy2017.totalcount,0) as "2017_18PTR",
      coalesce(fy2017.amount,0) as "2017_18Collection",
      coalesce(fy2018.totalcount,0) as "2018_19PTR",
      coalesce(fy2018.amount,0) as "2018_19Collection",
      coalesce(fy2019.totalcount,0) as "2019_20PTR",
      coalesce(fy2019.amount,0) as "2019_20Collection",
      coalesce(fy2020.totalcount,0) as "2020_21PTR",
      coalesce(fy2021.amount,0) as "2021_22Collection",
      coalesce(fy2021.totalcount,0) as "2021_22PTR",
      coalesce(fy2020.amount,0) as "2020_21Collection",
      coalesce(fy2022.totalcount,0) as "2022_23PTR",
      coalesce(fy2022.amount,0) as "2022_23Collection",
      coalesce(fy2013.totalcount,0)+coalesce(fy2014.totalcount,0)+coalesce(fy2015.totalcount,0)+coalesce(fy2016.totalcount,0)+coalesce(fy2017.totalcount,0)+coalesce(fy2018.totalcount,0)+coalesce(fy2019.totalcount,0)+coalesce(fy2020.totalcount,0)+coalesce(fy2021.totalcount,0)+coalesce(fy2022.totalcount,0)+coalesce(fy2023.totalcount,0) as "totalptr",
      coalesce(fy2013.amount,0)+coalesce(fy2014.amount,0)+coalesce(fy2015.amount,0)+coalesce(fy2016.amount,0)+coalesce(fy2017.amount,0)+coalesce(fy2018.amount,0)+coalesce(fy2019.amount,0)+coalesce(fy2020.amount,0)+coalesce(fy2021.amount,0)+coalesce(fy2022.amount,0)+coalesce(fy2023.amount,0) as "totalcollection"
    from  blocks
    left outer join fy2013 on fy2013.blockcode=blocks.blockcode
    left outer join fy2014 on fy2014.blockcode=blocks.blockcode
    left outer join fy2015 on fy2015.blockcode=blocks.blockcode
    left outer join fy2016 on fy2016.blockcode=blocks.blockcode
    left outer join fy2017 on fy2017.blockcode=blocks.blockcode
    left outer join fy2018 on fy2018.blockcode=blocks.blockcode
    left outer join fy2019 on fy2019.blockcode=blocks.blockcode
    left outer join fy2020 on fy2020.blockcode=blocks.blockcode
    left outer join fy2021 on fy2021.blockcode=blocks.blockcode
    left outer join fy2022 on fy2022.blockcode=blocks.blockcode
    left outer join fy2023 on fy2023.blockcode=blocks.blockcode
    where 1=1
  orderby: order by blockname

- reportName: TopPayersReport_V2
  decryptionPathId: ULBDEFAULTERPTREPORT_V2
  summary: ULB Defaulter Pt report
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: consumercode
    label: reports.pt.consumercode
    type: string
    source: pt
    total: false  
  - name: receiptnumber
    label: reports.pt.receiptnumber
    type: string
    source: pt
    total: false
  - name: totalamountpaid
    label: reports.pt.totalamountpaid
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false  
  - name: usagecategory
    label: reports.pt.usagecategory
    type: string
    source: pt
    total: false        
  - name: mobileno
    label: reports.pt.mobilenumber
    type: string
    source: pt
    total: false   
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false
  searchParams:
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND egcl_billdetial.tenantid=$ulb
  query: |
   --S.no    Service Name	ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number	Existing Property ID    Type Of Property	Mobile Number   	Address
    select distinct bill.consumercode,pt.usagecategory,pd.receiptnumber ,p.totalamountpaid,
      concat(pa.doorno,' ',pa.buildingname,pa.street,' ',pa.city,' ,',pa.pincode) as address, u.name as ownername, u.mobilenumber as mobileno
      from egcl_payment p inner join
      egcl_paymentdetail pd on pd.paymentid=p.id and p.paymentstatus !='CANCELLED' and p.tenantid=$tenantid
      and pd.businessservice='PT'  inner join  egcl_bill bill on bill.id=pd.billid inner join eg_pt_property pt
      on bill.consumercode=pt.propertyid  and pt.status='ACTIVE' and
      pt.usagecategory like '%NONRESIDENTIAL.INDUSTRIAL%' inner join eg_pt_address pa on pa.propertyid=pt.id inner join eg_pt_owner po on 
      po.propertyid=pt.id inner join eg_user u on u.uuid=po.userid and u.active=true
      
  orderby: order by p.totalamountpaid desc limit 150
 
- reportName: PendingPTApplicationsReport_V2
  summary: ULB-wise PT Collection
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: tenantid
    label: reports.pt.tenantid
    type: string
    source: pt
    total: false
  - name: propertyid
    label: reports.pt.propertyid
    type: string
    source: pt
    total: false
  - name: applicationnumber
    label: reports.pt.applicationnumber
    type: string
    source: pt
    total: false
  - name: oldpropertyid
    label: reports.pt.oldpropertyid
    type: string
    source: pt
    total: false
  - name: status
    label: reports.pt.status
    type: string
    source: pt
    total: false
  - name: propertytype
    label: reports.pt.propertytype
    type: string
    source: pt
    total: false
  - name: usagecategory
    label: reports.pt.usagecategory
    type: string
    source: pt
    total: false
  - name: channel
    label: reports.pt.channel
    type: string
    source: pt
    total: false
  - name: createdon
    label: reports.pt.createdon
    type: string
    source: pt
    total: false
  query: |
    select
      tenantid,
      propertyid,
      acknowldgementnumber as applicationnumber,
      oldpropertyid,
      status,
      propertytype,
      usagecategory,
      channel,
      to_char((To_timestamp(createdtime/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') as createdon
    from eg_pt_property where status='INWORKFLOW' and tenantid=$tenantid
    
- reportName: StatusReport_V2
  decryptionPathId: StatusReport_V2
  summary: Status Report
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "A1"
  sourceColumns:
  - name: propertyid
    label: reports.pt.propertyid
    type: string
    source: pt
    total: false
  - name: applicationnumber
    label: reports.pt.applicationnumber
    type: string
    source: pt
    total: false
  - name: usagecategory
    label: reports.pt.usagecategory
    type: string
    source: pt
    total: false
  - name: financialyear
    label: reports.pt.financialyear
    type: string
    source: pt
    total: false
  - name: createdtime
    label: reports.pt.createdtime
    type: string
    source: pt
    total: false
  - name: createdby
    label: reports.pt.createdby
    type: string
    source: pt
    total: false
  - name: zone
    label: reports.pt.zone
    type: string
    source: pt
    total: false
  - name: block
    label: reports.pt.block
    type: string
    source: pt
    total: false
  - name: localityname
    label: reports.pt.localityname
    type: string
    source: pt
    total: false
  - name: approvedby
    label: reports.pt.approvedby
    type: string
    source: pt
    total: false
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false    
  - name: status
    label: reports.pt.status
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND propety.createdtime >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND propety.createdtime <= $toDate
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      SELECT 
        propety.propertyid, propety.acknowldgementnumber as applicationnumber, propety.usagecategory,
        to_char((To_timestamp(propety.createdtime/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') AS createdtime,
        (case when eu.name is null then '30048|21Fj+c3k2ldB0X3AzIh7atXB' else eu.name end) AS createdby,
        localnames.zonecode AS zone, localnames.blockcode AS block, localnames.localityname AS localityname,
        REGEXP_REPLACE(REGEXP_REPLACE(CONCAT(pta.doorno, ',', pta.buildingname, ',',pta.street,',', pta.pincode), ',+', ','), '^,|,$', '') as "address", pt_detail.financialyear, propety.status, 
        (case when propety.status = 'INWORKFLOW' then '30048|21Fj+c3k2ldB0X3AzIh7atXB' else euser.name end) as approvedby
      FROM eg_pt_property as propety
        Left outer join eg_user as eu on eu.uuid = propety.createdby
        Left outer join eg_user as euser on euser.uuid = propety.lastmodifiedby
        Left outer join eg_pt_address as pta on pta.propertyid = propety.id
        INNER join eg_pt_propertydetail_v2 pt_detail ON pt_detail.property  = propety.propertyid
        Left outer join egcl_bill as bill on bill.consumercode = propety.propertyid
        Left outer join eg_bndry_mohalla as localnames on pta.locality=localnames.localitycode
        WHERE propety.tenantid=$tenantid AND propety.acknowldgementnumber NOTNULL AND propety.status='ACTIVE'
  orderby: ORDER BY propety.createdtime DESC
  
- reportName: ULBPTData
  decryptionPathId: ULBPTDataDumpReport_V2
  summary: ULB-wise PT Data
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: propertyid
    label: reports.pt.propertyId
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false
  - name: guardianname
    label: reports.pt.guardianname
    type: string
    source: pt
    total: false
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false
  - name: useruuid
    label: reports.pt.useruuid
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pt.createdtime >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pt.createdtime <= $toDate
  query: |
    select pt.propertyid as propertyid, u.name as ownername, u.guardian as guardianname, u.mobilenumber as mobileno, u.uuid as useruuid from eg_pt_property pt, eg_pt_owner po, eg_user u where pt.id=po.propertyid and po.userid=u.uuid and pt.status='ACTIVE' and po.status='ACTIVE' and pt.tenantid=$tenantid
  orderby: ORDER BY pt.propertyid DESC NULLS LAST
  
- reportName: PTReportforGISMapping
  decryptionPathId: ULBPTDataDumpReport_V2
  summary: PT Report for GIS Mapping
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: propertyid
    label: reports.pt.propertyid
    type: string
    source: pt
    total: false
  - name: applicationnumber
    label: reports.pt.applicationnumber
    type: string
    source: pt
    total: false
  - name: oldpropertyid
    label: reports.pt.oldpropertyid
    type: string
    source: pt
    total: false
  - name: nooffloors
    label: reports.pt.nooffloors
    type: string
    source: pt
    total: false
  - name: landarea
    label: reports.pt.landarea
    type: string
    source: pt
    total: false
  - name: usagecategory
    label: reports.pt.usagecategory
    type: string
    source: pt
    total: false
  - name: surveyid
    label: reports.pt.surveyid
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false
  - name: guardianname
    label: reports.pt.guardianname
    type: string
    source: pt
    total: false
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false
  - name: locality
    label: reports.pt.locality
    type: string
    source: pt
    total: false
  - name: localityname
    label: reports.pt.localityname
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND p.createdtime >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND p.createdtime <= $toDate
  query: |
    select distinct p.propertyid,p.nooffloors,p.landarea,p.usagecategory,p.surveyid,p.oldpropertyid,u.name as ownername,
     u.guardian as guardianname,u.mobilenumber as mobileno, a.locality,localnames.localityname as localityname
     from eg_pt_property as p inner join eg_pt_owner as o on p.id=o.propertyid and o.tenantid=$tenantid inner join eg_user as u 
      on o.userid=u.uuid and o.status='ACTIVE' inner join eg_pt_address as a on p.id=a.propertyid 
      left outer join eg_bndry_mohalla as localnames on a.locality=localnames.localitycode
      where p.tenantid=$tenantid and p.status='ACTIVE' 
      and 
      o.propertyid in (select id  from eg_pt_property where tenantid=$tenantid and status='ACTIVE')
  orderby: ORDER BY p.propertyid
  

- reportName: PT_DEFAULTER_REPORT_V2
  decryptionPathId: ULBDEFAULTERPTREPORT_V2
  summary: ULB_PT_DEFAULTER
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: propertyid
    label: reports.pt.propertyId
    type: string
    source: pt
    total: false
  - name: oldpropertyid
    label: reports.pt.oldpropertyId
    type: string
    source: pt
    total: false
  - name: businessname
    label: reports.pt.busnessname
    type: string
    source: pt
    total: false
  - name: financialyear
    label: reports.pt.financialyear
    type: string
    source: pt
    total: false
  - name: latestfy
    label: reports.pt.latestfy
    type: string
    source: pt
    total: false
  - name: max_pt_tax
    label: reports.pt.max_pt_tax
    type: string
    source: pt
    total: true
  - name: max_paid
    label: reports.pt.max_paid
    type: string
    source: pt
    total: true
  - name: propertytype
    label: reports.pt.propertytype
    type: string
    source: pt
    total: false
  - name: propertyusagetype
    label: reports.pt.propertyusagetype
    type: string
    source: pt
    total: false
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false
  - name: block
    label: reports.pt.block
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false
  searchParams:  
  - name: finYear
    label: Financial Year
    type: singlevaluelist
    pattern: 'list://2015-16:2015-16,2016-17:2016-17,2017-18:2017-18,2017-18:2017-18,2018-19:2018-19,2019-20:2019-20,2020-21:2020-21,2021-22:2021-22,2022-23:2022-23,2023-24:2023-24'
    source: pt
    isMandatory: false
    searchClause: AND 1=1
  - name: usageType
    label: Usage Type
    type: singlevaluelist
    pattern: 'list://RESIDENTIAL:Residential,NONRESIDENTIAL:NonResidential,MIXED:Mixed'
    source: pt
    isMandatory: false
    searchClause: AND split_part(props.propertyusagetype,'.',1) = $usageType
  - name: localityArray
    label: reports.pt.zoneList
    type: boundarylist
    source: pt
    isMandatory: false
    searchClause: AND props.localitycode IN ($localityArray)
  query: |
    with assessments as
    (
        select 
            propertyid,
            string_agg(concat(assessmentyears,' (Rs.',totalamount,')'),', ') as fy,
            max(assessmentyears) as latest_fy,
            max(totalamount) as maxtotal,
            max(propertytax) as max_pt_tax
        from report_assessments 
        where tenantid=$tenantid and propertyid not in (select propertyid from report_assessments where tenantid=$tenantid and assessmentyears =$finYear)
            group by propertyid
    ),
    owners as 
    (
        select 
        split_part(string_agg(ownername,','),',',1) as ownername,
        split_part(string_agg(mobileNumber,','),',',1) as mobileNumber,
        propertyid
        from report_owners where tenantid=$tenantid and status='ACTIVE'
        group by propertyid
    )
    select 
        assessments.propertyid as propertyid,
        props.oldpropertyid as oldpropertyid,
        props.firmbusinessname as businessname,
        assessments.fy as financialyear,
        assessments.latest_fy as latestfy,
        assessments.max_pt_tax as max_pt_tax,
        assessments.maxtotal as max_paid,
        props.propertytype as propertytype,
        propertyusagetype as propertyusagetype,
        concat(address,' ',localityname) as address,
        blockcode as block,
        owners.ownername as ownername,
        owners.mobileNumber as mobileno
    from report_properties props
    inner join assessments on assessments.propertyid=props.propertyid
    inner join owners on owners.propertyid=props.propertyid 
    where tenantid=$tenantid 

- reportName: PT_RECEIPTREGISTER_REPORT_V2
  decryptionPathId: ReceiptRegister_V2
  summary: Receipt Register
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "A1"
  sourceColumns:
  - name: receiptnumber
    label: reports.pt.receiptNo
    type: string
    source: pt
    total: false
  - name: receiptdate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: transactiondate
    label: reports.pt.transactiondate
    type: string
    source: pt
    total: false	
  - name: g8issuedate
    label: reports.pt.g8issuedate
    type: string
    source: pt
    total: false
  - name: g8receiptno
    label: reports.pt.g8receiptno
    type: string
    source: pt
    total: false
  - name: amount
    label: reports.pt.amount
    type: string
    source: pt
    total: true
  - name: propertytax
    label: reports.pt.propertyTax
    type: string
    source: pt
    total: true
  - name: paidpropertytax
    label: reports.pt.paidpropertyTax
    type: string
    source: pt
    total: true
  - name: firecess
    label: reports.pt.fireCess
    type: string
    source: pt
    total: true
  - name: cancercess
    label: reports.pt.cancerCess
    type: string
    source: pt
    total: true
  - name: rebate
    label: reports.pt.rebate
    type: string
    source: pt
    total: true
  - name: adhocrebate
    label: reports.pt.adhocrebate
    type: string
    source: pt
    total: true
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: true
  - name: adhocpenalty
    label: reports.pt.adhocpenalty
    type: string
    source: pt
    total: true
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true
  - name: exemption
    label: reports.pt.exemption
    type: string
    source: pt
    total: true
  - name: adjustment
    label: reports.pt.roundoff
    type: string
    source: pt
    total: true
  - name: consumercode
    label: reports.pt.propertyId
    type: string
    source: pt
    total: false
  - name: instrumenttype
    label: reports.pt.paymentMode
    type: string
    source: pt
    total: false
  - name: collectorname
    label: reports.pt.collectorname
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND rp.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND rp.receiptdate <= $toDate
  - name: paymentMode
    label: Payment Mode
    type: singlevaluelist
    pattern: 'list://CARD:Card,CASH:Cash,CHEQUE:Cheque,DD:DD,OFFLINE_NEFT:NEFT,OFFLINE_RTGS:RTGS,ONLINE:Online,POSTAL_ORDER:PostalOrder'
    source: pt
    isMandatory: false
    searchClause: AND rp.paymentmode = replace($paymentMode,',','_')
  query: |
      with assessments as
      (
        select
          billid,
          sum(ra.propertytax) as propertytax,
          sum(ra.paidpropertytax) as paidpropertytax,
          sum(ra.firecess) as firecess,
          sum(ra.cancercess) as cancercess,
          sum(ra.adhocrebate) as adhocrebate,
          sum(ra.rebate) as rebate,
          sum(ra.penalty) as penalty,
          sum(ra.adhocpenalty) as adhocpenalty,
          sum(ra.interest) as interest,
          sum(ra.exemption) as exemption,
          sum(ra.adjustment) as roundoff
        from report_assessments ra
        where tenantid=$tenantid
        group by billid
      )
      select 
        rp.receiptnumber,
        rp.propertyid as consumercode,
        to_char((To_timestamp(rp.receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') as "receiptdate",
        to_char((To_timestamp(rp.transactiondate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  as  "transactiondate",
        rp.paymentmode,
        rp.g8_issuedate as g8issuedate,
        rp.g8_receiptnumber as g8receiptno,
        rp.amoutpaid as amount,
        rp.paymentmode as instrumenttype,
        asmt.propertytax as propertytax,
        asmt.paidpropertytax as paidpropertytax,
        asmt.firecess as firecess,
        asmt.cancercess as cancercess,
        asmt.adhocrebate as adhocrebate,
        asmt.rebate as rebate,
        asmt.penalty as penalty,
        asmt.adhocpenalty as adhocpenalty,
        asmt.interest as interest,
        asmt.exemption as exemption,
        asmt.roundoff as adjustment,
        (case when rp.collectedby is null then '30048|21Fj+c3k2ldB0X3AzIh7atXB' else rp.collectedby end) as collectorname
      from report_payments as rp
      inner join assessments as asmt on  asmt.billid = rp.billid -- asmt.billid like concat('%',rp.billid,'%')
      where rp.paymentstatus!='CANCELLED' and rp.tenantid=$tenantid
  orderby: order by receiptnumber
  
  
  
  
- reportName: PT_DATA_DUMP_REPORT_V2
  decryptionPathId: ULBPTDataDumpReport_V2
  summary: ULB level report
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: ulb
    label: reports.pt.ulb
    type: string
    source: pt
    total: false
  - name: propertytaxuniqueid
    label: reports.pt.propertytaxuniqueid
    type: string
    source: pt
    total: false
  - name: existingpropertyid
    label: reports.pt.existingpropertyid
    type: string
    source: pt
    total: false 
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false
  - name: surveyid
    label: reports.pt.surveyid
    type: string
    source: pt
    total: false    
  - name: guardianname
    label: reports.pt.guardianname
    type: string
    source: pt
    total: false
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false
  - name: businessname
    label: reports.pt.businessname
    type: string
    source: pt
    total: false
  - name: usagetype
    label: reports.pt.propertyusagetype
    type: string
    source: pt
    total: false      
  - name: localityname
    label: reports.pt.localityname
    type: string
    source: pt
    total: false
  - name: totalarea
    label: reports.pt.totalarea
    type: string
    source: pt
    total: false     
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND rp.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND rp.receiptdate <= $toDate 
  - name: localityArray
    label: reports.pt.zoneList
    type: boundarylist
    source: pt
    isMandatory: false
    searchClause: AND pt.localitycode IN ($localityArray)
  query: |
    --S.no    Service Name	ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number	Existing Property ID    Owner Name    Guardian Name    Total Area (SQ.YARD)    Covered  Area/Built Area (SQ.FEET)    Floors    Occupancy (Rented,Self /Unoccupied)    Type Of Property	Mobile Number    Transcation Mode of Payment    Payment Amount    Payment Date    Email Id	Address
    with owners as 
      (
      select 
          split_part(string_agg(ownername,','),',',1) as ownername,
          split_part(string_agg(mobilenumber,','),',',1) as mobilenumber,
          split_part(string_agg(guardianname,','),',',1) as guardianname,
        --split_part(string_agg(emailid,','),',',1) as emailid,
          propertyid
          from report_owners where status='ACTIVE' and tenantid=$tenantid
          group by propertyid
      ),
      units as
      (
      select 
        propertyid
        --sum(builtuparea) as builtuparea,
        --string_agg(occupancytype,',') as occupancytype
      from report_units 
      where active='true' and tenantid=$tenantid
      group by propertyid
      )
       --payments as
        --(
       --select propertyid, sum(amoutpaid) as amountpaid from report_payments where tenantid=$tenantid and paymentstatus!='CANCELLED'
        --group by propertyid   
  
      --)
      select
        --rp.billid,
        --ra.billid,
        pt.tenantid as ulb,
        pt.propertyid as propertytaxuniqueid,
        --to_char((To_timestamp(rp.transactiondate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  as  "transactiondate",
        --rp.receiptnumber as receiptnumber,
        --to_char((To_timestamp(rp.receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS  "paymentdate",
        --rp.paymentmode as paymentmode,
        pt.oldpropertyid as existingpropertyid,
        --ra.assessmentyears as financialyear,
        --getfinancialyear(rp.billid) as financialyear,
        owners.ownername as ownername,
        owners.guardianname as guardianname,
        owners.mobilenumber as mobileno,
        pt.plotsize as totalarea,
        --ru.builtuparea as builtarea,
        --pt.nooffloors as floors,
        --ru.occupancytype as occupancy,
        --pt.propertytype as propertytype,
        --rp.payermobilenumber as mobilenumber,
        --ra.totalamount as paymentamount,
        --rp.amoutpaid as paymentamount,
        --rp.transactiondate as transcationdate,
        --owners.emailid as emailid,
        pt.address as address,
        pt.surveyid,
        --pt.additionaldetails->>'remarks' as remarks,
       --pt.additionaldetails->>'businessName' as firmbusinessname,
        pt.firmbusinessname as businessname,
        --pt.localitycode as localitycode,
        pt.localityname as localityname,
        --pt.zonename as zonename,
        --pt.blockname as blockname,
        pt.propertyusagetype as usagetype
      from report_properties pt
      inner join units as ru on ru.propertyid=pt.propertyid 
      inner join report_payments as rp on  rp.propertyid=pt.propertyid and rp.paymentstatus!='CANCELLED'
      --inner join report_assessments ra on split_part(ra.billid,',',1)=rp.billid and  ra.propertyid=rp.propertyid
      inner join owners on owners.propertyid=pt.propertyid and propertystatus='ACTIVE'
      where pt.tenantid=$tenantid
      
      
- reportName: PT_ZoneFYReport_V2
  summary: Zone FY Collection
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: zonename
    label: reports.pt.zonename
    type: string
    source: pt
    total: false  
  - name: 2013_14PTR
    label: reports.pt.2013_14_PTR
    type: string
    source: pt
    total: true  
  - name: 2013_14Collection
    label: reports.pt.2013_14Collection
    type: string
    source: pt
    total: true
  - name: 2014_15PTR
    label: reports.pt.2014_15_PTR
    type: string
    source: pt
    total: true  
  - name: 2014_15Collection
    label: reports.pt.2014_15Collection
    type: string
    source: pt
    total: true
  - name: 2015_16PTR
    label: reports.pt.2015_16_PTR
    type: string
    source: pt
    total: true  
  - name: 2015_16Collection
    label: reports.pt.2015_16Collection
    type: string
    source: pt
    total: true
  - name: 2016_17PTR
    label: reports.pt.2016_17_PTR
    type: string
    source: pt
    total: true  
  - name: 2016_17Collection
    label: reports.pt.2016_17Collection
    type: string
    source: pt
    total: true
  - name: 2017_18PTR
    label: reports.pt.2017_18_PTR
    type: string
    source: pt
    total: true  
  - name: 2017_18Collection
    label: reports.pt.2017_18Collection
    type: string
    source: pt
    total: true
  - name: 2018_19PTR
    label: reports.pt.2018_19_PTR
    type: string
    source: pt
    total: true  
  - name: 2018_19Collection
    label: reports.pt.2018_19Collection
    type: string
    source: pt
    total: true
  - name: 2019_20PTR
    label: reports.pt.2019_20_PTR
    type: string
    source: pt
    total: true  
  - name: 2019_20Collection
    label: reports.pt.2019_20Collection
    type: string
    source: pt
    total: true
  - name: 2020_21PTR
    label: reports.pt.2020_21_PTR
    type: string
    source: pt
    total: true  
  - name: 2020_21Collection
    label: reports.pt.2020_21Collection
    type: string
    source: pt
    total: true
  - name: 2021_22PTR
    label: reports.pt.2021_22_PTR
    type: string
    source: pt
    total: true  
  - name: 2021_22Collection
    label: reports.pt.2021_22Collection
    type: string
    source: pt
    total: true 
  - name: 2022_23PTR
    label: reports.pt.2022_23_PTR
    type: string
    source: pt
    total: true  
  - name: 2022_23Collection
    label: reports.pt.2022_23Collection
    type: string
    source: pt
    total: true
  - name: 2023_24PTR
    label: reports.pt.2023_24_PTR
    type: string
    source: pt
    total: true  
  - name: 2023_24Collection
    label: reports.pt.2023_24Collection
    type: string
    source: pt
    total: true
  - name: totalptr
    label: reports.pt.totalptr
    type: string
    source: pt
    total: true  
  - name: totalcollection
    label: reports.pt.totalcollection
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND 1=1
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND 1=1
  query: |
   --S.no    Service Name ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number Existing Property ID    Type Of Property Mobile Number    Address
    with summary as
    (
        select 
          assessmentyears,
          zonename,
          sum(totalamount) as amount,
          count(distinct receiptnumber) as totalcount
        from report_assessments as asmt
        inner join report_properties as pt on pt.propertyid=asmt.propertyid
        inner join report_payments as payment on payment.billid=asmt.billid and (asmt.totalamount>0 or payment.amoutpaid=0)
        where payment.paymentstatus!='CANCELLED' and pt.tenantid=$tenantid
        and asmt.createdtime>=$fromDate
        and asmt.createdtime<=$toDate
        group by assessmentyears,zonename
      )
    select
      zonename,
      sum(case when assessmentyears='2013-14' then amount else 0 end) as "2013_14Collection",
      sum(case when assessmentyears='2013-14' then totalcount else 0 end) as "2013_14PTR",
      sum(case when assessmentyears='2014-15' then amount else 0 end) as "2014_15Collection",
      sum(case when assessmentyears='2014-15' then totalcount else 0 end) as "2014_15PTR",
      sum(case when assessmentyears='2015-16' then amount else 0 end) as "2015_16Collection",
      sum(case when assessmentyears='2015-16' then totalcount else 0 end) as "2015_16PTR",
      sum(case when assessmentyears='2016-17' then amount else 0 end) as "2016_17Collection",
      sum(case when assessmentyears='2016-17' then totalcount else 0 end) as "2016_17PTR",
      sum(case when assessmentyears='2017-18' then amount else 0 end) as "2017_18Collection",
      sum(case when assessmentyears='2017-18' then totalcount else 0 end) as "2017_18PTR",
      sum(case when assessmentyears='2018-19' then amount else 0 end) as "2018_19Collection",
      sum(case when assessmentyears='2018-19' then totalcount else 0 end) as "2018_19PTR",
      sum(case when assessmentyears='2019-20' then amount else 0 end) as "2019_20Collection",
      sum(case when assessmentyears='2019-20' then totalcount else 0 end) as "2019_20PTR",
      sum(case when assessmentyears='2020-21' then amount else 0 end) as "2020_21Collection",
      sum(case when assessmentyears='2020-21' then totalcount else 0 end) as "2020_21PTR",
      sum(case when assessmentyears='2021-22' then amount else 0 end) as "2021_22Collection",
      sum(case when assessmentyears='2021-22' then totalcount else 0 end) as "2021_22PTR",
      sum(case when assessmentyears='2022-23' then amount else 0 end) as "2022_23Collection",
      sum(case when assessmentyears='2022-23' then totalcount else 0 end) as "2022_23PTR",
      sum(case when assessmentyears='2023-24' then amount else 0 end) as "2023_24Collection",
      sum(case when assessmentyears='2023-24' then totalcount else 0 end) as "2023_24PTR",
      sum(amount) as totalcollection,
      sum(totalcount) as totalptr
    from summary
    where 1=1
  groupby: group by zonename
    

- reportName: PT_BlockFYReport_V2
  summary: Block FY Collection
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: blockname
    label: reports.pt.blockname
    type: string
    source: pt
    total: false  
  - name: 2013_14PTR
    label: reports.pt.2013_14_PTR
    type: string
    source: pt
    total: true  
  - name: 2013_14Collection
    label: reports.pt.2013_14Collection
    type: string
    source: pt
    total: true
  - name: 2014_15PTR
    label: reports.pt.2014_15_PTR
    type: string
    source: pt
    total: true  
  - name: 2014_15Collection
    label: reports.pt.2014_15Collection
    type: string
    source: pt
    total: true
  - name: 2015_16PTR
    label: reports.pt.2015_16_PTR
    type: string
    source: pt
    total: true  
  - name: 2015_16Collection
    label: reports.pt.2015_16Collection
    type: string
    source: pt
    total: true
  - name: 2016_17PTR
    label: reports.pt.2016_17_PTR
    type: string
    source: pt
    total: true  
  - name: 2016_17Collection
    label: reports.pt.2016_17Collection
    type: string
    source: pt
    total: true
  - name: 2017_18PTR
    label: reports.pt.2017_18_PTR
    type: string
    source: pt
    total: true  
  - name: 2017_18Collection
    label: reports.pt.2017_18Collection
    type: string
    source: pt
    total: true
  - name: 2018_19PTR
    label: reports.pt.2018_19_PTR
    type: string
    source: pt
    total: true  
  - name: 2018_19Collection
    label: reports.pt.2018_19Collection
    type: string
    source: pt
    total: true
  - name: 2019_20PTR
    label: reports.pt.2019_20_PTR
    type: string
    source: pt
    total: true  
  - name: 2019_20Collection
    label: reports.pt.2019_20Collection
    type: string
    source: pt
    total: true
  - name: 2020_21PTR
    label: reports.pt.2020_21_PTR
    type: string
    source: pt
    total: true  
  - name: 2020_21Collection
    label: reports.pt.2020_21Collection
    type: string
    source: pt
    total: true  
  - name: 2021_22PTR
    label: reports.pt.2020_21_PTR
    type: string
    source: pt
    total: true  
  - name: 2021_22Collection
    label: reports.pt.2020_21Collection
    type: string
    source: pt
    total: true
  - name: 2022_23PTR
    label: reports.pt.2022_23_PTR
    type: string
    source: pt
    total: true  
  - name: 2022_23Collection
    label: reports.pt.2022_23Collection
    type: string
    source: pt
    total: true
  - name: 2023_24PTR
    label: reports.pt.2023_24_PTR
    type: string
    source: pt
    total: true  
  - name: 2023_24Collection
    label: reports.pt.2023_24Collection
    type: string
    source: pt
    total: true
  - name: totalptr
    label: reports.pt.totalptr
    type: string
    source: pt
    total: true  
  - name: totalcollection
    label: reports.pt.totalcollection
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND 1=1
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND 1=1
  query: |
   --S.no    Service Name ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number Existing Property ID    Type Of Property Mobile Number    Address
    with summary as
    (
        select 
          assessmentyears,
          blockname,
          sum(totalamount) as amount,
          count(distinct receiptnumber) as totalcount
        from report_assessments as asmt
        inner join report_properties as pt on pt.propertyid=asmt.propertyid
        inner join report_payments as payment on payment.billid=asmt.billid and (asmt.totalamount>0 or payment.amoutpaid=0)
        where payment.paymentstatus!='CANCELLED' and pt.tenantid=$tenantid
        and asmt.createdtime>=$fromDate
        and asmt.createdtime<=$toDate
        group by assessmentyears,blockname
      )
    select
      blockname,
      sum(case when assessmentyears='2013-14' then amount else 0 end) as "2013_14Collection",
      sum(case when assessmentyears='2013-14' then totalcount else 0 end) as "2013_14PTR",
      sum(case when assessmentyears='2014-15' then amount else 0 end) as "2014_15Collection",
      sum(case when assessmentyears='2014-15' then totalcount else 0 end) as "2014_15PTR",
      sum(case when assessmentyears='2015-16' then amount else 0 end) as "2015_16Collection",
      sum(case when assessmentyears='2015-16' then totalcount else 0 end) as "2015_16PTR",
      sum(case when assessmentyears='2016-17' then amount else 0 end) as "2016_17Collection",
      sum(case when assessmentyears='2016-17' then totalcount else 0 end) as "2016_17PTR",
      sum(case when assessmentyears='2017-18' then amount else 0 end) as "2017_18Collection",
      sum(case when assessmentyears='2017-18' then totalcount else 0 end) as "2017_18PTR",
      sum(case when assessmentyears='2018-19' then amount else 0 end) as "2018_19Collection",
      sum(case when assessmentyears='2018-19' then totalcount else 0 end) as "2018_19PTR",
      sum(case when assessmentyears='2019-20' then amount else 0 end) as "2019_20Collection",
      sum(case when assessmentyears='2019-20' then totalcount else 0 end) as "2019_20PTR",
      sum(case when assessmentyears='2020-21' then amount else 0 end) as "2020_21Collection",
      sum(case when assessmentyears='2020-21' then totalcount else 0 end) as "2020_21PTR",
      sum(case when assessmentyears='2021-22' then amount else 0 end) as "2021_22Collection",
      sum(case when assessmentyears='2021-22' then totalcount else 0 end) as "2021_22PTR",
      sum(case when assessmentyears='2022-23' then amount else 0 end) as "2022_23Collection",
      sum(case when assessmentyears='2022-23' then totalcount else 0 end) as "2022_23PTR", 
      sum(case when assessmentyears='2023-24' then amount else 0 end) as "2023_24Collection",
      sum(case when assessmentyears='2023-24' then totalcount else 0 end) as "2023_24PTR",  
      sum(amount) as totalcollection,
      sum(totalcount) as totalptr
    from summary 
    where 1=1
  groupby: group by blockname
  
- reportName: PT_NO_PAYMENT_DEFAULTERS_REPORT
  summary: PT NO PAYMENT DEFAULTERS_REPORT
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: tenantid
    label: reports.pt.tenantid
    type: string
    source: pt
    total: false
  - name: propertyid
    label: reports.pt.propertyid
    type: string
    source: pt
    total: false  
  - name: surveyid
    label: reports.pt.surveyid
    type: string
    source: pt
    total: false  
  - name: oldpropertyid
    label: reports.pt.oldpropertyid
    type: string
    source: pt
    total: false  
  - name: firmbusinessname
    label: reports.pt.firmbusinessname
    type: string
    source: pt
    total: false
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false  
  - name: blockname
    label: reports.pt.blockname
    type: string
    source: pt
    total: false
  - name: zonename
    label: reports.pt.zonename
    type: string
    source: pt
    total: false  
  - name: propertyusagetype
    label: reports.pt.propertyusagetype
    type: string
    source: pt
    total: false
  - name: propertytype
    label: reports.pt.propertytype
    type: string
    source: pt
    total: false  
  - name: superbuilduparea
    label: reports.pt.superbuilduparea
    type: string
    source: pt
    total: false
  - name: nooffloors
    label: reports.pt.nooffloors
    type: string
    source: pt
    total: false  
  - name: ownershipcategory
    label: reports.pt.ownershipcategory
    type: string
    source: pt
    total: false  
  - name: source
    label: reports.pt.source
    type: string
    source: pt
    total: false 
  - name: channel
    label: reports.pt.channel
    type: string
    source: pt
    total: false 
  - name: plotsize
    label: reports.pt.plotsize
    type: string
    source: pt
    total: false 
  - name: propertystatus
    label: reports.pt.propertystatus
    type: string
    source: pt
    total: false
  searchParams:
  - name: usageType
    label: Usage Type
    type: singlevaluelist
    pattern: 'list://RESIDENTIAL:Residential,NONRESIDENTIAL:NonResidential,MIXED:Mixed,'
    source: pt
    isMandatory: false
    searchClause: AND split_part(propertyusagetype,'.',1) = $usageType
  - name: localityArray
    label: reports.pt.zoneList
    type: boundarylist
    source: pt
    isMandatory: false
    searchClause: AND localitycode IN ($localityArray)
  - name: fromPlotsize
    label: reports.pt.fromPlotsize
    type: string
    source: pt
    isMandatory: false
    searchClause: AND plotsize >= ($fromPlotsize)::int
  - name: toPlotsize
    label: reports.pt.toPlotsize
    type: string
    source: pt
    isMandatory: false
    searchClause: AND plotsize <= ($toPlotsize)::int
  query: |
    select 
    tenantid,
    propertyid,
    surveyid,
    oldpropertyid,
    firmbusinessname,
    concat(address,' ',localityname) as address,
    blockname,
    zonename,
    plotsize,
    propertyusagetype,
    propertytype,
    superbuilduparea,
    nooffloors,
    ownershipcategory,
    source,
    channel,
    propertystatus
    from report_properties_withoutdemand 
    where tenantid=$tenantid
 
- reportName: PTReceiptRegister_7to10Sept2020
  decryptionPathId: ReceiptRegister_V2
  summary: PTReceiptRegister_7to10Sept2020
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "A1"
  sourceColumns:
  - name: receiptnumber
    label: reports.pt.receiptNo
    type: string
    source: pt
    total: false
  - name: receiptdate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: consumercode
    label: reports.pt.consumercode
    type: string
    source: pt
    total: false
  - name: tenantid
    label: reports.pt.tenantid
    type: string
    source: pt
    total: false
  - name: g8issuedate
    label: reports.pt.g8issuedate
    type: string
    source: pt
    total: false
  - name: g8receiptno
    label: reports.pt.g8receiptno
    type: string
    source: pt
    total: false
  - name: amount
    label: reports.pt.amount
    type: string
    source: pt
    total: true
  - name: propertytax
    label: reports.pt.propertyTax
    type: string
    source: pt
    total: true
  - name: firecess
    label: reports.pt.fireCess
    type: string
    source: pt
    total: true
  - name: cancercess
    label: reports.pt.cancerCess
    type: string
    source: pt
    total: true
  - name: rebate
    label: reports.pt.rebate
    type: string
    source: pt
    total: true
  - name: adhocrebate
    label: reports.pt.adhocrebate
    type: string
    source: pt
    total: true
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: true
  - name: adhocpenalty
    label: reports.pt.adhocpenalty
    type: string
    source: pt
    total: true
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true
  - name: exemption
    label: reports.pt.exemption
    type: string
    source: pt
    total: true
  - name: adjustment
    label: reports.pt.roundoff
    type: string
    source: pt
    total: true
  - name: pendingamount
    label: reports.pt.pendingamount
    type: string
    source: pt
    total: true
  - name: paidpropertytax
    label: reports.pt.paidpropertytax
    type: string
    source: pt
    total: true
  - name: usagetype
    label: reports.pt.usagetype
    type: string
    source: pt
    total: false
  - name: instrumenttype
    label: reports.pt.paymentMode
    type: string
    source: pt
    total: false
  - name: transactionnumber
    label: reports.pt.ddChequeTransactionNo
    type: string
    source: pt
    total: false
  - name: surveyid
    label: reports.pt.surveyid
    type: string
    source: pt
    total: false
  - name: transactiondate
    label: reports.pt.transactiondate
    type: string
    source: pt
    total: false
  - name: collectorname
    label: reports.pt.collectorname
    type: string
    source: pt
    total: false
  - name: financialyear
    label: reports.pt.financialyear
    type: string
    source: pt
    total: false
  
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      SELECT
         tenantid, consumercode, surveyid, receiptdate, receiptnumber, amount, instrumenttype, transactionnumber,
         financialyear, transactiondate, pendingamount, usagetype, collectorname, pdid, adhocpenalty, adhocrebate, firecess, cancercess, interest,
         penalty, rebate, propertytax, paidpropertytax, exemption, adjustment, g8issuedate, g8receiptno from pt_7to10sept2020_receipts
         where tenantid=$tenantid 
  orderby: ORDER BY receiptdate DESC;
  
  
- reportName: TempReport
  decryptionPathId: ULBDEFAULTERPTREPORT_V2
  summary: ULB Temporar report
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: propertyuid
    label: reports.pt.propertytaxuniqueid
    type: string
    source: pt
    total: false  
  - name: propertyid
    label: reports.pt.propertyid
    type: string
    source: pt
    total: false  
  - name: oldpropertyid
    label: reports.pt.oldpropertyid
    type: string
    source: pt
    total: false
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false    
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false
  - name: mobileno
    label: reports.pt.mobilenumber
    type: string
    source: pt
    total: false
  searchParams:
  - name: finYear
    label: Financial Year
    type: singlevaluelist
    pattern: 'list://1554057000000:2019-20,1585679400000:2020-21,1617215400000:2021-22,1648751400000:2022-23,1648771200000:2023-24'
    source: pt
    isMandatory: true
    searchClause: AND 1=1
  query: |
    select eg_pt_owner.propertyid as propertyuid,
      pt.propertyid as propertyid,
      oldpropertyid,
      concat(case when pta.doorno is null then '' else 'door no ' end,pta.doorno,' location ',pta.plotno,pta.buildingname,pta.street) as address,
      name as ownername,
      mobilenumber as mobileno
    from eg_pt_owner 
    inner join eg_user on eg_pt_owner.userid=eg_user.uuid
    inner join eg_pt_property pt on pt.id=eg_pt_owner.propertyid
    inner join eg_pt_address pta on pta.propertyid=pt.id
    where eg_pt_owner.propertyid in
      (select id 
      from eg_pt_property
      where tenantid=$tenantid and status='ACTIVE' and propertyid not in (select consumercode from egbs_demand_v1 where tenantid=$tenantid and businessservice='PT' and taxperiodfrom=$finYear::bigint ) -- and taxperiodfrom=1617215400000) -- 2021-22
      )


- reportName: DailyCollectionReport
  summary: Collection Register
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "A4"
  sourceColumns:
  - name: instrumenttype
    label: reports.pt.paymentMode
    type: string
    source: pt
    total: false
  - name: count_receipts
    label: reports.pt.count
    type: string
    source: pt
    total: true
  - name: paid_without_cess
    label: reports.pt.withoutCess
    type: string
    source: pt
    total: true
  - name: firecess
    label: reports.pt.fireCess
    type: string
    source: pt
    total: true
  - name: cancercess
    label: reports.pt.cancerCess
    type: string
    source: pt
    total: true
  - name: totalpaid
    label: reports.pt.total
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pd.receiptdate <= $toDate
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      WITH receipt_breakup AS (
                  SELECT
                    pd.id as pdid,
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_PENALTY' THEN adjustedamount ELSE 0 END) as adhocpenalty, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_REBATE' THEN adjustedamount ELSE 0 END) as adhocrebate, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_FIRE_CESS' THEN adjustedamount ELSE 0 END) as firecess, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_CANCER_CESS' THEN adjustedamount ELSE 0 END) as cancercess, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST' THEN adjustedamount ELSE 0 END) as interest, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY' THEN adjustedamount ELSE 0 END) as penalty, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_REBATE' THEN adjustedamount ELSE 0 END) as rebate,
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TAX' THEN bad.amount ELSE 0 END) as propertytax,
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TAX' THEN adjustedamount ELSE 0 END) as paidpropertytax, 
                    (SUM(CASE WHEN taxheadcode LIKE 'PT_UNIT_USAGE_EXEMPTION' THEN bad.amount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_OWNER_EXEMPTION' THEN bad.amount ELSE 0 END) ) as exemption,
                    (SUM(CASE WHEN taxheadcode LIKE 'PT_ROUNDOFF' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_DEBIT' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_CREDIT' THEN adjustedamount ELSE 0 END)) as adjustment
                  FROM egcl_billaccountdetail as bad
                  INNER JOIN egcl_billdetial as bd on bd.id = bad.billdetailid
                  INNER JOIN egcl_paymentdetail as pd on pd.billid = bd.billid
                  INNER JOIN egcl_payment as payment on pd.paymentid=payment.id
                  WHERE payment.tenantid = $tenantid and payment.paymentstatus != 'CANCELLED' and  pd.businessservice='PT'
                  AND pd.receiptdate >= $fromDate AND pd.receiptdate <= $toDate
                  GROUP BY pdid
               )
      SELECT 
        concat(payment.paymentmode,substring(instrumentnumber,0,position ('/' in instrumentnumber))) as instrumenttype, 
        count(*) as count_receipts,
        sum(payment.totalamountpaid)-sum(receipt_breakup.firecess+receipt_breakup.cancercess) as paid_without_cess,
        sum(receipt_breakup.firecess) as firecess,
        sum(receipt_breakup.cancercess) as cancercess,
        sum(payment.totalamountpaid) as totalpaid
      FROM egcl_paymentdetail pd, egcl_payment payment ,  receipt_breakup
      where pd.paymentid=payment.id and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid 
      and receipt_breakup.pdid=pd.id  and paymentmode not in ('CHEQUE','OFFLINE_NEFT','OFFLINE_RTGS')
  groupby: group by instrumenttype,substring(instrumentnumber,0,position ('/' in instrumentnumber))


- reportName: DailyChequeDetail
  summary: Cheque RTGS NEFT Collection Register
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "A3"
  sourceColumns:
  - name: instrumenttype
    label: reports.pt.paymentMode
    type: string
    source: pt
    total: false
  - name: receiptnumber
    label: reports.pt.receiptno
    type: string
    source: pt
    total: false
  - name: receiptdate
    label: reports.pt.receiptdate
    type: string
    source: pt
    total: false
  - name: transactionnumber
    label: reports.pt.transactionno
    type: string
    source: pt
    total: false
  - name: transactiondate
    label: reports.pt.transactiondate
    type: string
    source: pt
    total: false
  - name: ifsc
    label: reports.pt.ifsccode
    type: string
    source: pt
    total: false
  - name: bankname
    label: reports.pt.bankname
    type: string
    source: pt
    total: false
  - name: amount_without_cess
    label: reports.pt.withoutCess
    type: string
    source: pt
    total: true
  - name: firecess
    label: reports.pt.fireCess
    type: string
    source: pt
    total: true
  - name: cancercess
    label: reports.pt.cancerCess
    type: string
    source: pt
    total: true
  - name: amount
    label: reports.pt.total
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pd.receiptdate <= $toDate
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      WITH receipt_breakup AS (
                  SELECT
                    pd.id as pdid,
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_PENALTY' THEN adjustedamount ELSE 0 END) as adhocpenalty, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_ADHOC_REBATE' THEN adjustedamount ELSE 0 END) as adhocrebate, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_FIRE_CESS' THEN adjustedamount ELSE 0 END) as firecess, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_CANCER_CESS' THEN adjustedamount ELSE 0 END) as cancercess, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST' THEN adjustedamount ELSE 0 END) as interest, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY' THEN adjustedamount ELSE 0 END) as penalty, 
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_REBATE' THEN adjustedamount ELSE 0 END) as rebate,
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TAX' THEN bad.amount ELSE 0 END) as propertytax,
                    SUM(CASE WHEN taxheadcode LIKE 'PT_TAX' THEN adjustedamount ELSE 0 END) as paidpropertytax, 
                    (SUM(CASE WHEN taxheadcode LIKE 'PT_UNIT_USAGE_EXEMPTION' THEN bad.amount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_OWNER_EXEMPTION' THEN bad.amount ELSE 0 END) ) as exemption,
                    (SUM(CASE WHEN taxheadcode LIKE 'PT_ROUNDOFF' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_DEBIT' THEN adjustedamount ELSE 0 END)
                    + SUM(CASE WHEN taxheadcode LIKE 'PT_DECIMAL_CEILING_CREDIT' THEN adjustedamount ELSE 0 END)) as adjustment
                  FROM egcl_billaccountdetail as bad
                  INNER JOIN egcl_billdetial as bd on bd.id = bad.billdetailid
                  INNER JOIN egcl_paymentdetail as pd on pd.billid = bd.billid
                  INNER JOIN egcl_payment as payment on pd.paymentid=payment.id
                  WHERE payment.tenantid = $tenantid and payment.paymentstatus != 'CANCELLED' and  pd.businessservice='PT'
                  and paymentmode in ('CHEQUE','OFFLINE_NEFT','OFFLINE_RTGS')
                  AND pd.receiptdate >= $fromDate AND pd.receiptdate <= $toDate
                  GROUP BY pdid
      )
      SELECT 
        payment.paymentmode as instrumenttype, 
        receiptnumber,
        to_char((To_timestamp(receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') AS receiptdate,
        payment.transactionnumber,
        to_char((To_timestamp(payment.instrumentdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') AS transactiondate, 
        payment.ifsccode AS ifsc,
        concat(bank_branches.bank_name,' ',bank_branches.branch) as bankname, 
        payment.totalamountpaid-firecess-cancercess as amount_without_cess,
        receipt_breakup.firecess as firecess,
        receipt_breakup.cancercess as cancercess,
        payment.totalamountpaid as amount
      FROM egcl_paymentdetail pd, egcl_payment payment left outer join bank_branches on bank_branches.ifsc=payment.ifsccode,  receipt_breakup
      where pd.paymentid=payment.id and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid 
      and receipt_breakup.pdid=pd.id and payment.paymentmode in ('CHEQUE','CARD','DD')
  orderby: ORDER BY pd.receiptdate DESC;
  
  
- reportName: cybertech_additional_transactions
  summary: CyberTech Additional Transactions
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: client_data_property_id
    label: reports.pt.client_data_property_id
    type: string
    source: pt
    total: false
  - name: returnid
    label: reports.pt.returnid
    type: string
    source: pt
    total: false  
  - name: previousyearid
    label: reports.pt.previousyearid
    type: string
    source: pt
    total: false  
  - name: acknowledgementno
    label: reports.pt.acknowledgementno
    type: string
    source: pt
    total: false  
  - name: entrydate
    label: reports.pt.entrydate
    type: string
    source: pt
    total: false
  - name: zone
    label: reports.pt.zone
    type: string
    source: pt
    total: false
  - name: sector
    label: reports.pt.sector
    type: string
    source: pt
    total: false  
  - name: colony
    label: reports.pt.colony
    type: string
    source: pt
    total: false  
  - name: house_no
    label: reports.pt.house_no
    type: string
    source: pt
    total: false  
  - name: owner_detail
    label: reports.pt.owner_detail
    type: string
    source: pt
    total: false   
  - name: lease_detail
    label: reports.pt.lease_detail
    type: string
    source: pt
    total: false
  - name: property_address
    label: reports.pt.property_address
    type: string
    source: pt
    total: false
  - name: covered_measure_detail
    label: reports.pt.covered_measure_detail
    type: string
    source: pt
    total: false  
  - name: uncovered_measure_detail
    label: reports.pt.uncovered_measure_detail
    type: string
    source: pt
    total: false
  - name: land_usage_type
    label: reports.pt.land_usage_type
    type: string
    source: pt
    total: false
  - name: usage
    label: reports.pt.usage
    type: string
    source: pt
    total: false  
  - name: covered_area
    label: reports.pt.covered_area
    type: string
    source: pt
    total: false  
  - name: applicable_tax
    label: reports.pt.applicable_tax
    type: string
    source: pt
    total: true  
  - name: fire_charges
    label: reports.pt.fire_charges
    type: string
    source: pt
    total: true   
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: true 
  - name: rebate
    label: reports.pt.rebate
    type: string
    source: pt
    total: true
  - name: exemption_amount
    label: reports.pt.exemption_amount
    type: string
    source: pt
    total: true
  - name: total_payable_tax
    label: reports.pt.total_payable_tax
    type: string
    source: pt
    total: true  
  - name: payment_mode
    label: reports.pt.payment_mode
    type: string
    source: pt
    total: false  
  - name: transaction_id
    label: reports.pt.transaction_id
    type: string
    source: pt
    total: false  
  - name: g8_book_no
    label: reports.pt.g8_book_no
    type: string
    source: pt
    total: false   
  - name: g8receiptno
    label: reports.pt.g8receiptno
    type: string
    source: pt
    total: false
  - name: paymentdate
    label: reports.pt.paymentdate
    type: string
    source: pt
    total: false
  - name: property_type
    label: reports.pt.property_type
    type: string
    source: pt
    total: false
  - name: session
    label: reports.pt.session
    type: string
    source: pt
    total: false
  - name: buildingcategory
    label: reports.pt.buildingcategory
    type: string
    source: pt
    total: false
  query: |
        select * from patiala_cybertech_additional_transactions
  orderby: ORDER BY paymentdate

- reportName: WithoutUpinTransactions
  summary: WithoutUpinTransactions
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: client_data_property_id
    label: reports.pt.client_data_property_id
    type: string
    source: pt
    total: false
  - name: level_detail_name
    label: reports.pt.returnid
    type: string
    source: pt
    total: false  
  - name: previousyearid
    label: reports.pt.previousyearid
    type: string
    source: pt
    total: false  
  - name: acknowledgementno
    label: reports.pt.acknowledgementno
    type: string
    source: pt
    total: false
  - name: upin
    label: reports.pt.acknowledgementno
    type: string
    source: pt
    total: false  
  - name: entrydate
    label: reports.pt.entrydate
    type: string
    source: pt
    total: false
  - name: zone
    label: reports.pt.zone
    type: string
    source: pt
    total: false
  - name: sector
    label: reports.pt.sector
    type: string
    source: pt
    total: false  
  - name: colony
    label: reports.pt.colony
    type: string
    source: pt
    total: false  
  - name: house_no
    label: reports.pt.house_no
    type: string
    source: pt
    total: false  
  - name: owner_detail
    label: reports.pt.owner_detail
    type: string
    source: pt
    total: false   
  - name: lease_detail
    label: reports.pt.lease_detail
    type: string
    source: pt
    total: false
  - name: property_address
    label: reports.pt.property_address
    type: string
    source: pt
    total: false
  - name: covered_measure_detail
    label: reports.pt.covered_measure_detail
    type: string
    source: pt
    total: false  
  - name: uncovered_measure_detail
    label: reports.pt.uncovered_measure_detail
    type: string
    source: pt
    total: false
  - name: land_usage_type
    label: reports.pt.land_usage_type
    type: string
    source: pt
    total: false
  - name: usage
    label: reports.pt.usage
    type: string
    source: pt
    total: false
  - name: plot_area
    label: reports.pt.plot_area
    type: string
    source: pt
    total: false  
  - name: covered_area
    label: reports.pt.covered_area
    type: string
    source: pt
    total: false  
  - name: applicable_tax
    label: reports.pt.applicable_tax
    type: string
    source: pt
    total: true  
  - name: fire_charges
    label: reports.pt.fire_charges
    type: string
    source: pt
    total: true   
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: true 
  - name: rebate
    label: reports.pt.rebate
    type: string
    source: pt
    total: true
  - name: exemption_amount
    label: reports.pt.exemption_amount
    type: string
    source: pt
    total: true
  - name: total_payable_tax
    label: reports.pt.total_payable_tax
    type: string
    source: pt
    total: true  
  - name: payment_mode
    label: reports.pt.payment_mode
    type: string
    source: pt
    total: false
  - name: cheque_no
    label: reports.pt.cheque_no
    type: string
    source: pt
    total: false
  - name: cheque_realisation_date
    label: reports.pt.cheque_realisation_date
    type: string
    source: pt
    total: false 
  - name: cheque_status
    label: reports.pt.cheque_status
    type: string
    source: pt
    total: false
  - name: remark
    label: reports.pt.remark
    type: string
    source: pt
    total: false
  - name: post_tid
    label: reports.pt.pos_id
    type: string
    source: pt
    total: false  
  - name: pos_invoice_num
    label: reports.pt.pos_invoice_num
    type: string
    source: pt
    total: false
  - name: transaction_id
    label: reports.pt.transaction_id
    type: string
    source: pt
    total: false  
  - name: g8_book_no
    label: reports.pt.g8_book_no
    type: string
    source: pt
    total: false   
  - name: g8receiptno
    label: reports.pt.g8receiptno
    type: string
    source: pt
    total: false
  - name: paymentdate
    label: reports.pt.paymentdate
    type: string
    source: pt
    total: false
  - name: property_type
    label: reports.pt.property_type
    type: string
    source: pt
    total: false
  - name: session
    label: reports.pt.session
    type: string
    source: pt
    total: false
  - name: buildingcategory
    label: reports.pt.buildingcategory
    type: string
    source: pt
    total: false
  query: |
        select * from patiala_without_upin_transactions
  orderby: ORDER BY paymentdate
  
- reportName: OCCUPANCY_TYPE_REPORT
  decryptionPathId: ULBDEFAULTERPTREPORT_V2
  summary: Occupancy Type Report
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "A3"
  sourceColumns:
  - name: propertyid
    label: reports.pt.propertyid
    type: string
    source: pt
    total: false
  - name: oldpropertyid
    label: reports.pt.oldpropertyid
    type: string
    source: pt
    total: false
  - name: propertystatus
    label: reports.pt.status
    type: string
    source: pt
    total: false
  - name: firmbusinessname
    label: reports.pt.businessname
    type: string
    source: pt
    total: false
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false
  - name: localityname
    label: reports.pt.locality
    type: string
    source: pt
    total: false
  - name: blockname
    label: reports.pt.blockname
    type: string
    source: pt
    total: false
  - name: propertyusagetype
    label: reports.pt.propertyusage
    type: string
    source: pt
    total: false
  - name: propertytype
    label: reports.pt.propertytype
    type: string
    source: pt
    total: false
  - name: plotsize
    label: reports.pt.plotsize
    type: string
    source: pt
    total: false
  - name: unit
    label: reports.pt.units
    type: string
    source: pt
    total: false
  - name: fy
    label: reports.pt.financialyear
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false
  searchParams:
  - name: occupancy
    label: Occupancy Type
    type: singlevaluelist
    pattern: 'list://RENTED:Rented,SELFOCCUPIED:SelfOccupied,UNOCCUPIED:UnOccupied,PG:Paying Guest'
    source: pt
    isMandatory: false
    searchClause: and units.unit like concat('%',$occupancy,'%')
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      with units as
      (
      select propertyid,string_agg(concat(floorno,'/', occupancytype,'/',usagecategory,'/',builtuparea,'/',avr),' # ') as unit
      from report_units
      where tenantid=$tenantid
      group by propertyid
      ),
      assessments as
      (
      select 
        propertyid,
        string_agg(distinct concat(financialyear),', ') as fy
        --max(assessmentyears) as latest_fy,
        --max(totalamount) as maxtotal,
        --max(propertytax) as max_pt_tax
      from eg_pt_asmt_assessment
      where tenantid=$tenantid
      group by propertyid
      ),
      owners as 
      (
        select 
          split_part(string_agg(ownername,','),',',1) as ownername,
          split_part(string_agg(mobileNumber,','),',',1) as mobilenumber,
          propertyid
        from report_owners
        where tenantid=$tenantid
        group by propertyid
      )
      select
        props.propertyid,
        oldpropertyid,
        propertystatus,
        firmbusinessname,
        address,
        localityname,
        blockname,
        propertyusagetype,
        propertytype,
        plotsize,
        units.unit as unit,
        assessments.fy as fy,
        owners.ownername as ownername,
        owners.mobilenumber as mobileno
      from report_properties props
      inner join  units on units.propertyid=props.propertyid
      left outer join assessments on assessments.propertyid=props.propertyid
      inner join owners on owners.propertyid=props.propertyid 
      where props.tenantid=$tenantid and propertystatus!='INACTIVE'
      --and assessments.fy not like '%2021-22%'
      
- reportName: DEFAULTER_REPORT_WITH_LOCALITY
  decryptionPathId: ULBDEFAULTERPTREPORT_V2
  summary: Occupancy Type Report
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "A3"
  sourceColumns:
  - name: propertyid
    label: reports.pt.propertyid
    type: string
    source: pt
    total: false
  - name: oldpropertyid
    label: reports.pt.oldpropertyid
    type: string
    source: pt
    total: false
  - name: propertystatus
    label: reports.pt.status
    type: string
    source: pt
    total: false
  - name: firmbusinessname
    label: reports.pt.businessname
    type: string
    source: pt
    total: false
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false
  - name: localityname
    label: reports.pt.locality
    type: string
    source: pt
    total: false
  - name: blockname
    label: reports.pt.blockname
    type: string
    source: pt
    total: false
  - name: propertyusagetype
    label: reports.pt.propertyusage
    type: string
    source: pt
    total: false
  - name: propertytype
    label: reports.pt.propertytype
    type: string
    source: pt
    total: false
  - name: plotsize
    label: reports.pt.plotsize
    type: string
    source: pt
    total: false
  - name: fy
    label: reports.pt.financialyear
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false
  searchParams:
  - name: fy
    label: Financial Year
    type: singlevaluelist
    pattern: 'list://1427846400000:2015-16,1459468800000:2016-17,1491004800000:2017-18,1522521000000:2018-19,1522540800000:2019-20,1554076800000:2020-21,1617215400000:2021-22,1648751400000:2022-23,1648771200000:2023-24'
    source: pt
    isMandatory: true
    searchClause: and assessments.fy not like concat('%',$fy,'%')
  - name: blockname
    label: reports.pt.blockname
    type: string
    source: pt
    isMandatory: false
    searchClause: AND upper(blockname) LIKE CONCAT('%',upper($blockname),'%')
  - name: localityname
    label: reports.pt.localityname
    type: string
    source: pt
    isMandatory: false
    searchClause: AND upper(localityname) LIKE CONCAT('%',upper($localityname),'%')
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      with assessments as
      (
        select 
            propertyid,
            string_agg(distinct concat(financialyear),', ') as fy
            --max(assessmentyears) as latest_fy,
            --max(totalamount) as maxtotal,
            --max(propertytax) as max_pt_tax
        from eg_pt_asmt_assessment
        where tenantid=$tenantid
        group by propertyid
        ),
        owners as 
        (
        select 
          split_part(string_agg(ownername,','),',',1) as ownername,
          split_part(string_agg(mobileNumber,','),',',1) as mobilenumber,
          propertyid
        from report_owners
        where tenantid=$tenantid
        group by propertyid
        )
        select 
          props.propertyid,
          oldpropertyid,
          propertystatus,
          firmbusinessname,
          address,
          localityname,
          blockname,
          propertyusagetype,
          propertytype,
          plotsize,
          assessments.fy as fy,
          owners.ownername as ownername,
          owners.mobilenumber as mobileno
        from report_properties props
        left outer join assessments on assessments.propertyid=props.propertyid
        left outer join owners on owners.propertyid=props.propertyid
        where props.tenantid=$tenantid and propertystatus!='INACTIVE'

- reportName: DEFAULTER_REPORT_WITH_LOCALITY_UNPAID_DEMAND
  decryptionPathId: ULBDEFAULTERPTREPORT_V2
  summary: Occupancy Type Report
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "A3"
  sourceColumns:
  - name: propertyid
    label: reports.pt.propertyid
    type: string
    source: pt
    total: false
  - name: oldpropertyid
    label: reports.pt.oldpropertyid
    type: string
    source: pt
    total: false
  - name: propertystatus
    label: reports.pt.status
    type: string
    source: pt
    total: false
  - name: firmbusinessname
    label: reports.pt.businessname
    type: string
    source: pt
    total: false
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false
  - name: localityname
    label: reports.pt.locality
    type: string
    source: pt
    total: false
  - name: blockname
    label: reports.pt.blockname
    type: string
    source: pt
    total: false
  - name: propertyusagetype
    label: reports.pt.propertyusage
    type: string
    source: pt
    total: false
  - name: propertytype
    label: reports.pt.propertytype
    type: string
    source: pt
    total: false
  - name: plotsize
    label: reports.pt.plotsize
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false
  - name: tentativedemand
    label: reports.pt.tentativedemand
    type: string
    source: pt
    total: false
  - name: financialyears
    label: reports.pt.financialyears
    type: string
    source: pt
    total: false   
  searchParams:
  - name: fy
    label: Financial Year
    type: singlevaluelist
    pattern: 'list://1427846400000:2015-16,1459468800000:2016-17,1491004800000:2017-18,1522540800000:2018-19,1554076800000:2019-20,1585699200000:2020-21,1617215400000:2021-22,1648751400000:2022-23,1648771200000:2023-24'
    source: pt
    isMandatory: true
    searchClause: and 1=1
  - name: usageCat
    label: Usage Category
    type: singlevaluelist
    pattern: 'list://NONRESIDENTIAL:NONRESIDENTIAL,MIXED:MIXED,RESIDENTIAL:RESIDENTIAL'
    source: pt
    isMandatory: true
    searchClause: and 1=1
  - name: blockname
    label: reports.pt.blockname
    type: string
    source: pt
    isMandatory: false
    searchClause: AND upper(blockname) LIKE CONCAT('%',upper($blockname),'%')
  - name: localityname
    label: reports.pt.localityname
    type: string
    source: pt
    isMandatory: false
    searchClause: AND upper(localityname) LIKE CONCAT('%',upper($localityname),'%')
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      with properties as
      (
      select distinct consumercode as propertyid from egbs_demand_v1 where taxperiodfrom::varchar=$fy and businessservice='PT' and status!='CANCELLED' 
        and ispaymentcompleted=false and tenantid=$tenantid
      ),
      props as
      (
      select * from report_properties where  tenantid=$tenantid and propertystatus='ACTIVE' and propertyusagetype like concat($usageCat,'%')
      ),
      demands as
      (
      select  consumercode as propertyid,sum(taxamount) as demand,string_agg(distinct to_char((To_timestamp(d.taxperiodfrom/1000) at time Zone 'Asia/Kolkata'),'YYYY'),',') as financialyears
        from egbs_demand_v1 d
      inner join egbs_demanddetail_v1 dd on dd.demandid=d.id
      inner join properties p on p.propertyid=consumercode
      where  businessservice='PT' and status!='CANCELLED' 
        and ispaymentcompleted=false and d.tenantid=$tenantid 
        and taxamount!=collectionamount
        group by consumercode
      ),
      owners as 
      (
      select 
        split_part(string_agg(ownername,','),',',1) as ownername,
        split_part(string_agg(mobileNumber,','),',',1) as mobilenumber,
        propertyid
      from report_owners
      where tenantid=$tenantid
      group by propertyid
      )
      select 
        props.propertyid,
        props.oldpropertyid,
        props.propertystatus,
        demands.demand as tentativedemand,
        demands.financialyears as financialyears,
        firmbusinessname,
        address,
        localityname,
        blockname,
        propertyusagetype,
        propertytype,
        plotsize,
        to_char((To_timestamp($fy::bigint/1000) at time Zone 'Asia/Kolkata'),'YYYY') || '-' || ((to_char((To_timestamp($fy::bigint/1000) at time Zone 'Asia/Kolkata'),'YY'))::int+1)::text as fy, --assessments.fy as fy,
        owners.ownername as ownername,
        owners.mobilenumber as mobileno
      from properties 
      inner join props on props.propertyid=properties.propertyid
      inner join demands on demands.propertyid=properties.propertyid
      inner join owners on owners.propertyid=properties.propertyid
      where 1=1 

- reportName: Count_UsageCategory_V2
  decryptionPathId: ReceiptRegisterShort_V2
  summary: Count Usagecategory
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "Legal"
  sourceColumns:
  - name: category
    label: reports.pt.category
    type: string
    source: pt
    total: false
  - name: property_type
    label: reports.pt.property_type
    type: string
    source: pt
    total: false   
  - name: count
    label: reports.pt.count
    type: string
    source: pt
    total: true
  query: |
      -- Use CTE to force query plan, compute & use CTE later
        SELECT
        (case when position('.' in usagecategory)=0 then usagecategory else split_part(usagecategory,'.',2) end) as category,(case when position('.' in propertytype)=0 then propertytype else split_part(propertytype,'.',1) end) as property_type ,count (propertyid) as count  from eg_pt_property
         where tenantid=$tenantid and  status='ACTIVE'
  groupby: GROUP BY category,property_type
  orderby: ORDER BY category 
  
- reportName: TopPayersReportCOM_V2
  decryptionPathId: ULBDEFAULTERPTREPORT_V2
  summary: ULB Defaulter Pt report
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: consumercode
    label: reports.pt.consumercode
    type: string
    source: pt
    total: false  
  - name: receiptnumber
    label: reports.pt.receiptnumber
    type: string
    source: pt
    total: false
  - name: totalamountpaid
    label: reports.pt.totalamountpaid
    type: string
    source: pt
    total: false
  - name: fy
    label: reports.pt.fy
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false  
  - name: usagecategory
    label: reports.pt.usagecategory
    type: string
    source: pt
    total: false        
  - name: mobileno
    label: reports.pt.mobilenumber
    type: string
    source: pt
    total: false   
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false
  searchParams:
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND 1=1
  - name: finYear
    label: Financial Year
    type: singlevaluelist
    pattern: 'list://2015-16:2015-16,2016-17:2016-17,2017-18:2017-18,2017-18:2017-18,2018-19:2018-19,2019-20:2019-20,2020-21:2020-21,2021-22:2021-22,2022-23:2022-23,2023-24:2023-24'
    source: pt
    isMandatory: true
    searchClause: AND to_char((To_timestamp(bd.fromperiod/1000) at time Zone 'Asia/Kolkata'),'YYYY') || '-' || to_char((To_timestamp(bd.toperiod/1000) at time Zone 'Asia/Kolkata'),'YY')=$finYear
  - name: usageCat
    label: Usage Category
    type: singlevaluelist
    pattern: 'list://NONRESIDENTIAL.COMMERCIAL:Commercial,MIXED:Mixed,NONRESIDENTIAL.INDUSTRIAL:Industrial,NONRESIDENTIAL.INSTITUTIONAL:Institutional'
    source: pt
    isMandatory: false
    searchClause: and 1=1
  query: |
   --S.no    Service Name	ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number	Existing Property ID    Type Of Property	Mobile Number   	Address
    select distinct bd.consumercode,pt.usagecategory,pd.receiptnumber ,p.totalamountpaid,
      to_char((To_timestamp(bd.fromperiod/1000) at time Zone 'Asia/Kolkata'),'YYYY') || '-' || to_char((To_timestamp(bd.toperiod/1000) at time Zone 'Asia/Kolkata'),'YY') as fy,
      concat(pa.doorno,' ',pa.buildingname,pa.street,' ',pa.city,' ,',pa.pincode) as address, u.name as ownername, u.mobilenumber as mobileno
    from egcl_payment p 
    inner join egcl_paymentdetail pd on pd.paymentid=p.id and p.paymentstatus !='CANCELLED' and p.tenantid=$ulb and pd.businessservice='PT'
    inner join  egbs_bill_v1 bill on bill.id=pd.billid
    inner join egbs_billdetail_v1 bd on bill.id=bd.billid
    inner join eg_pt_property pt on bd.consumercode=pt.propertyid and pt.status='ACTIVE' and  pt.usagecategory like '%NONRESIDENTIAL%'
    inner join eg_pt_address pa on pa.propertyid=pt.id
    inner join eg_pt_owner po on po.propertyid=pt.id inner join eg_user u on u.uuid=po.userid and u.active=true
    where p.totalamountpaid>=10000
  orderby: order by p.totalamountpaid desc limit 300
 
- reportName: TopPayersReportRESD_V2
  decryptionPathId: ULBDEFAULTERPTREPORT_V2
  summary: ULB Defaulter Pt report
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: consumercode
    label: reports.pt.consumercode
    type: string
    source: pt
    total: false  
  - name: receiptnumber
    label: reports.pt.receiptnumber
    type: string
    source: pt
    total: false
  - name: totalamountpaid
    label: reports.pt.totalamountpaid
    type: string
    source: pt
    total: false
  - name: fy
    label: reports.pt.fy
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false  
  - name: usagecategory
    label: reports.pt.usagecategory
    type: string
    source: pt
    total: false        
  - name: mobileno
    label: reports.pt.mobilenumber
    type: string
    source: pt
    total: false   
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false
  searchParams:
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND 1=1
  - name: finYear
    label: Financial Year
    type: singlevaluelist
    pattern: 'list://2015-16:2015-16,2016-17:2016-17,2017-18:2017-18,2017-18:2017-18,2018-19:2018-19,2019-20:2019-20,2020-21:2020-21,2021-22:2021-22,2022-23:2022-23,2023-24:2023-24'
    source: pt
    isMandatory: true
    searchClause: AND to_char((To_timestamp(bd.fromperiod/1000) at time Zone 'Asia/Kolkata'),'YYYY') || '-' || to_char((To_timestamp(bd.toperiod/1000) at time Zone 'Asia/Kolkata'),'YY')=$finYear
  query: |
   --S.no    Service Name	ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number	Existing Property ID    Type Of Property	Mobile Number   	Address
    select distinct bd.consumercode,pt.usagecategory,pd.receiptnumber ,p.totalamountpaid,
      to_char((To_timestamp(bd.fromperiod/1000) at time Zone 'Asia/Kolkata'),'YYYY') || '-' || to_char((To_timestamp(bd.toperiod/1000) at time Zone 'Asia/Kolkata'),'YY') as fy,
      concat(pa.doorno,' ',pa.buildingname,pa.street,' ',pa.city,' ,',pa.pincode) as address, u.name as ownername, u.mobilenumber as mobileno
    from egcl_payment p 
    inner join egcl_paymentdetail pd on pd.paymentid=p.id and p.paymentstatus !='CANCELLED' and p.tenantid=$ulb and pd.businessservice='PT'
    inner join  egbs_bill_v1 bill on bill.id=pd.billid
    inner join egbs_billdetail_v1 bd on bill.id=bd.billid
    inner join eg_pt_property pt on bd.consumercode=pt.propertyid and pt.status='ACTIVE' and pt.usagecategory='RESIDENTIAL'
    inner join eg_pt_address pa on pa.propertyid=pt.id
    inner join eg_pt_owner po on po.propertyid=pt.id inner join eg_user u on u.uuid=po.userid and u.active=true
    where p.totalamountpaid>=1000
  orderby: order by p.totalamountpaid desc limit 300
  
- reportName: ReceiptRegisterGatewayTxnId_V2
  decryptionPathId: ReceiptRegisterShort_V2
  summary: Receipt Register GatewayTxnId
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "Legal"
  sourceColumns:
  - name: receiptnumber
    label: reports.pt.receiptNo
    type: string
    source: pt
    total: false
  - name: transactiondate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: propertyid
    label: reports.pt.ptrId
    type: string
    source: pt
    total: false
  - name: financialyear
    label: reports.pt.financialYear
    type: string
    source: pt
    total: false
  - name: instrumenttype
    label: reports.pt.paymentMode
    type: string
    source: pt
    total: false
  - name: amount
    label: reports.pt.taxamount
    type: string
    source: pt
    total: true
  - name: transactionnumber
    label: reports.pt.ddChequeNo
    type: string
    source: pt
    total: false
  - name: gateway_txn_id
    label: reports.pt.gateway_txn_id
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pd.receiptdate <= $toDate
  - name: paymentMode
    label: Payment Mode
    type: singlevaluelist
    pattern: 'list://CARD:Card,CASH:Cash,CHEQUE:Cheque,DD:DD,OFFLINE_NEFT:NEFT,OFFLINE_RTGS:RTGS,ONLINE:Online,POSTAL_ORDER:PostalOrder'
    source: pt
    isMandatory: false
    searchClause: AND payment.paymentmode = replace($paymentMode,',','_')
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) = $financialyear
  - name: collectorname
    label: reports.pt.collectorname
    type: singlevaluelist
    pattern: http://egov-hrms:8080/egov-hrms/employees/_search?tenantId=$tenantid&roles=PTCEMP|$.Employees[*].user.id|$.Employees[*].user.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND eg_user.id = $collectorname::INTEGER
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      SELECT 	
        pt.propertyid as propertyid,
        to_char((To_timestamp(pd.receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') as transactiondate,        
        receiptnumber,
        payment.totalamountpaid as amount,
        payment.paymentmode as instrumenttype,
        payment.transactionnumber as transactionnumber,
        pg.gateway_txn_id,
        --concat(to_char((To_timestamp(bd.fromperiod/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(bd.toperiod/1000) at time Zone 'Asia/Kolkata'),'YYYY')) AS financialyear,
        --concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'YY')) as financialyear,
        getfinancialyear(pd.billid) as financialyear,
        (case when eg_user.name is null then '30048|23/xn3x2FAxn8vYAN0IdplsOxaE=' else eg_user.name end)  as collectorname
        --receipt_breakup.*,        
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, 
      (select * from (select *,(row_number() over(partition by propertyid order by lastmodifiedtime desc)) as rw from eg_pt_property  where tenantid=$tenantid) pts where rw=1) as pt, 
      (select bill.id as billid, bill.consumercode as consumercodei, min(bd.fromperiod) fromperiod, max(bd.toperiod) toperiod from egcl_billdetial bd, egcl_bill bill 
      where bill.id=bd.billid and bill.tenantid = $tenantid group by bill.id) bd
      LEFT JOIN eg_pg_transactions as pg on  ( txn_status='SUCCESS' and pg.bill_id=bd.billid )
      where pd.paymentid=payment.id and bd.billid=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice='PT' and payment.tenantid=$tenantid 
      and pt.propertyid = bd.consumercodei --and pt.status!='INACTIVE'
  orderby: ORDER BY pd.receiptdate DESC;  
  
- reportName: PropertyDumpReport
  decryptionPathId: ULBPTDataDumpReport_V2
  summary: Receipt Register GatewayTxnId
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "Legal"
  sourceColumns:
  - name: propertyid
    label: reports.pt.ptrId
    type: string
    source: pt
    total: false
  - name: oldpropertyid
    label: reports.pt.oldpropertyid
    type: string
    source: pt
    total: false
  - name: propertytype
    label: reports.pt.propertytype
    type: string
    source: pt
    total: false
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false
  - name: localityname
    label: reports.pt.locality
    type: string
    source: pt
    total: false
  - name: propertyusagetype
    label: reports.pt.propertyusagetype
    type: string
    source: pt
    total: true
  - name: ownershipcategory
    label: reports.pt.ownershipcategory
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pt.createdtime>=$fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND pt.createdtime<=$toDate
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      with owners as 
      (
      select 
          split_part(string_agg(ownername,','),',',1) as ownername,
          split_part(string_agg(mobilenumber,','),',',1) as mobilenumber,       
          propertyid
      from report_owners where status='ACTIVE' and tenantid=$tenantid
      group by propertyid
      )
      --select pt.propertyid,oldpropertyid,status,propertytype,usagecategory,concat (doorno,',',buildingname,',',street,',',locality) as address,owners.ownername,owners.mobilenumber
      --from eg_pt_property pt
      select pt.propertyid,oldpropertyid,propertystatus,propertytype,address,localitycode,localityname,propertyusagetype,ownershipcategory,owners.ownername as ownername,owners.mobilenumber as mobileno
      from report_properties pt
      inner join owners on owners.propertyid=pt.propertyid
      where pt.tenantid=$tenantid and propertystatus='ACTIVE'
      
- reportName: STATEDUMPDEPARTMENT_REPORT_V2
  decryptionPathId: ULBPTDataDumpReport_V2
  summary: ULB level report
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: ulb
    label: reports.pt.ulb
    type: string
    source: pt
    total: false
  - name: propertytaxuniqueid
    label: reports.pt.propertytaxuniqueid
    type: string
    source: pt
    total: false
  - name: surveyid
    label: reports.pt.surveyid
    type: string
    source: pt
    total: false
  - name: oldpropertyid
    label: reports.pt.oldpropertyid
    type: string
    source: pt
    total: false
  - name: nooffloors
    label: reports.pt.nooffloors
    type: string
    source: pt
    total: false
  - name: totalarea
    label: reports.pt.totalarea
    type: string
    source: pt
    total: false 
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false
  - name: emailid
    label: reports.pt.emailid
    type: string
    source: pt
    total: false    
  - name: guardianname
    label: reports.pt.guardianname
    type: string
    source: pt
    total: false
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false
  - name: businessname
    label: reports.pt.businessname
    type: string
    source: pt
    total: false
  - name: usagetype
    label: reports.pt.propertyusagetype
    type: string
    source: pt
    total: false
  - name: localityname
    label: reports.pt.localityname
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pt.createdtime >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pt.createdtime <= $toDate
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND pt.tenantid = $ulb    
  query: |
    --S.no    Service Name	ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number	Existing Property ID    Owner Name    Guardian Name    Total Area (SQ.YARD)    Covered  Area/Built Area (SQ.FEET)    Floors    Occupancy (Rented,Self /Unoccupied)    Type Of Property	Mobile Number    Transcation Mode of Payment    Payment Amount    Payment Date    Email Id	Address
    with owners as 
      (
      select 
          split_part(string_agg(ownername,','),',',1) as ownername,
          split_part(string_agg(mobilenumber,','),',',1) as mobilenumber,
          split_part(string_agg(guardianname,','),',',1) as guardianname,
          split_part(string_agg(emailid,','),',',1) as emailid,			  
          propertyid
          from report_owners where status='ACTIVE' and tenantid =$ulb                
          group by propertyid
      ),
    properties as
    (
      select 
        propertyid,
        tenantid as tenantid,
        address as address,
        localityname as localityname,
        plotsize as plotsize,
        propertyusagetype as usagetype,
        surveyid,
        oldpropertyid,
        nooffloors,
        createdtime as createdtime
      from report_properties
      where propertystatus='ACTIVE' and tenantid =$ulb
      --group by propertyid
      )
      select
        pt.tenantid as ulb,
        pt.propertyid as propertytaxuniqueid,
        owners.ownername as ownername,
        owners.guardianname as guardianname,
        owners.mobilenumber as mobileno,
        pt.plotsize as totalarea,
        owners.emailid as emailid,
        pt.address as address,
        pt.usagetype as usagetype,
        pt.surveyid as surveyid,
        pt.oldpropertyid as oldpropertyid,
        pt.nooffloors as nooffloors,
        pt.localityname as localityname
      from properties pt
        inner join owners on owners.propertyid=pt.propertyid
      where 1=1 
      
      
- reportName: PROPERTY_CATEGORY_REPORT_V2
  decryptionPathId: ULBPTDataDumpReport_V2
  summary: ULB level report
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: propertyid
    label: reports.pt.propertyid
    type: string
    source: pt
    total: false
  - name: oldpropertyid
    label: reports.pt.oldpropertyid
    type: string
    source: pt
    total: false
  - name: surveyid
    label: reports.pt.surveyid
    type: string
    source: pt
    total: false 
  - name: propertytype
    label: reports.pt.propertytype
    type: string
    source: pt
    total: false
  - name: ownership
    label: reports.pt.ownership
    type: string
    source: pt
    total: false    
  - name: propertycategory
    label: reports.pt.propertycategory
    type: string
    source: pt
    total: false
  - name: plotsize
    label: reports.pt.plotsize
    type: string
    source: pt
    total: false
  - name: buildingname
    label: reports.pt.buildingname
    type: string
    source: pt
    total: false
  - name: doorno
    label: reports.pt.doorno
    type: string
    source: pt
    total: false
  - name: street
    label: reports.pt.street
    type: string
    source: pt
    total: false
  - name: locality
    label: reports.pt.locality
    type: string
    source: pt
    total: false
  - name: blockname
    label: reports.pt.blockname
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false
  - name: unitcategory
    label: reports.pt.unitcategory
    type: string
    source: pt
    total: false
  - name: addr_survey
    label: reports.pt.survey_address
    type: string
    source: pt
    total: false
  - name: businessname
    label: reports.pt.businessname
    type: string
    source: pt
    total: false
  searchParams:
  - name: category
    label: reports.pt.usagecategory
    type: string
    source: pt
    isMandatory: true
    searchClause: AND 1=1
  - name: nameofbusiness
    label: reports.pt.nameofbusinness
    type: string
    source: pt
    isMandatory: false
    searchClause: AND upper(pt.additionalDetails->>'businessName') LIKE CONCAT('%',upper($nameofbusiness),'%')
  query: |
    --S.no    Service Name	ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number	Existing Property ID    Owner Name    Guardian Name    Total Area (SQ.YARD)    Covered  Area/Built Area (SQ.FEET)    Floors    Occupancy (Rented,Self /Unoccupied)    Type Of Property	Mobile Number    Transcation Mode of Payment    Payment Amount    Payment Date    Email Id	Address
    with properties as
    (
      select distinct propertyid as propertyid from eg_pt_unit where tenantid=$tenantid and usagecategory LIKE CONCAT('%',upper($category),'%') --like '%EDUCATION%'  
    ),
    owners as
    ( 
    select
      split_part(string_agg(userid,','),',',1) as owner_userid,
      propertyid
    from eg_pt_owner
    where tenantid=$tenantid and propertyid in (select propertyid from properties) and status='ACTIVE'
    group by propertyid
    )
    select
      pt.propertyid as propertyid,
      pt.oldpropertyid as oldpropertyid,
      pt.surveyid as surveyid,
      pt.propertytype as propertytype,
      pt.ownershipcategory as ownership,
      pt.usagecategory as propertycategory,
      pt.landarea as plotsize,
      adr.buildingname as buildingname,
      adr.doorno as doorno,
      adr.street as street,
      bndry.localityname as locality,
      bndry.blockname as blockname,
      eg_user.name as ownername,
      eg_user.mobilenumber as mobileno,
      $category as unitcategory,
      (pt.additionalDetails->'legacyInfo')->>'address' as addr_survey,
      pt.additionalDetails->>'businessName' as businessname
    from eg_pt_property pt
    inner join eg_pt_address adr on adr.propertyid =pt.id
    inner join properties props on props.propertyid=pt.id
    inner join owners on owners.propertyid=pt.id
    inner join eg_user on eg_user.uuid=owners.owner_userid
    inner join eg_bndry_mohalla bndry on bndry.localitycode=adr.locality
    where pt.status!='INACTIVE'


- reportName: PAID_PROPERTY_CATEGORY_REPORT_V2
  decryptionPathId: ULBPTDataDumpReport_V2
  summary: ULB level report
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: propertyid
    label: reports.pt.propertyid
    type: string
    source: pt
    total: false
  - name: oldpropertyid
    label: reports.pt.oldpropertyid
    type: string
    source: pt
    total: false
  - name: surveyid
    label: reports.pt.surveyid
    type: string
    source: pt
    total: false 
  - name: propertytype
    label: reports.pt.propertytype
    type: string
    source: pt
    total: false
  - name: ownership
    label: reports.pt.ownership
    type: string
    source: pt
    total: false    
  - name: propertycategory
    label: reports.pt.propertycategory
    type: string
    source: pt
    total: false
  - name: plotsize
    label: reports.pt.plotsize
    type: string
    source: pt
    total: false
  - name: buildingname
    label: reports.pt.buildingname
    type: string
    source: pt
    total: false
  - name: doorno
    label: reports.pt.doorno
    type: string
    source: pt
    total: false
  - name: street
    label: reports.pt.street
    type: string
    source: pt
    total: false
  - name: locality
    label: reports.pt.locality
    type: string
    source: pt
    total: false
  - name: blockname
    label: reports.pt.blockname
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false
  - name: unitcategory
    label: reports.pt.unitcategory
    type: string
    source: pt
    total: false
  - name: addr_survey
    label: reports.pt.survey_address
    type: string
    source: pt
    total: false
  - name: businessname
    label: reports.pt.businessname
    type: string
    source: pt
    total: false
  - name: assessmentyear
    label: reports.pt.assessmentyear
    type: string
    source: pt
    total: false
  searchParams:
  - name: category
    label: reports.pt.usageownercategory
    type: string
    source: pt
    isMandatory: true
    searchClause: AND 1=1
  - name: nameofbusiness
    label: reports.pt.nameofbusinness
    type: string
    source: pt
    isMandatory: false
    searchClause: AND upper(pt.additionalDetails->>'businessName') LIKE CONCAT('%',upper($nameofbusiness),'%') 
  - name: finYear
    label: Financial Year
    type: singlevaluelist
    pattern: 'list://2015-16:2015-16,2016-17:2016-17,2017-18:2017-18,2017-18:2017-18,2018-19:2018-19,2019-20:2019-20,2020-21:2020-21,2021-22:2021-22,2022-23:2022-23,2023-24:2023-24'
    source: pt
    isMandatory: true
    searchClause: AND 1=1
  query: |
    --S.no    Service Name	ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number	Existing Property ID    Owner Name    Guardian Name    Total Area (SQ.YARD)    Covered  Area/Built Area (SQ.FEET)    Floors    Occupancy (Rented,Self /Unoccupied)    Type Of Property	Mobile Number    Transcation Mode of Payment    Payment Amount    Payment Date    Email Id	Address
    with properties as
    (
      select distinct propertyid as propertyid from eg_pt_unit where tenantid=$tenantid and (usagecategory LIKE CONCAT('%',upper($category),'%') or ownershipcategory LIKE CONCAT('%',upper($category),'%')) --like '%EDUCATION%'
    ),
    owners as
    ( 
    select
      split_part(string_agg(userid,','),',',1) as owner_userid,
      propertyid
    from eg_pt_owner
    where tenantid=$tenantid and propertyid in (select propertyid from properties) and status='ACTIVE'
    group by propertyid
    ),
    assessments as
    ( 
    select
      distinct propertyid 
    from report_assessments 
    where tenantid=$tenantid AND assessmentyears=$finYear
    )
    select
      pt.propertyid as propertyid,
      pt.oldpropertyid as oldpropertyid,
      pt.surveyid as surveyid,
      pt.propertytype as propertytype,
      pt.ownershipcategory as ownership,
      pt.usagecategory as propertycategory,
      pt.landarea as plotsize,
      adr.buildingname as buildingname,
      adr.doorno as doorno,
      adr.street as street,
      bndry.localityname as locality,
      bndry.blockname as blockname,
      eg_user.name as ownername,
      eg_user.mobilenumber as mobileno,
      $category as unitcategory,
      (pt.additionalDetails->'legacyInfo')->>'address' as addr_survey,
      pt.additionalDetails->>'businessName' as businessname,
      $finYear as assessmentyear
    from eg_pt_property pt
    inner join eg_pt_address adr on adr.propertyid =pt.id
    inner join properties props on props.propertyid=pt.id
    inner join owners on owners.propertyid=pt.id
    inner join eg_user on eg_user.uuid=owners.owner_userid
    inner join eg_bndry_mohalla bndry on bndry.localitycode=adr.locality
    inner join assessments on assessments.propertyid=pt.propertyid
    where pt.status!='INACTIVE'
    
    
- reportName: DEFAULTER_REPORT_WITH_LOCALITY_UNPAID_DEMAND_NEW
  decryptionPathId: ULBPTDataDumpReport_V2
  summary: ULB level report
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: propertyid
    label: reports.pt.propertyid
    type: string
    source: pt
    total: false
  - name: oldpropertyid
    label: reports.pt.oldpropertyid
    type: string
    source: pt
    total: false
  - name: surveyid
    label: reports.pt.surveyid
    type: string
    source: pt
    total: false 
  - name: tentativedemand
    label: reports.pt.tentativedemand
    type: string
    source: pt
    total: true
  - name: assessmentyear
    label: reports.pt.assessmentyear
    type: string
    source: pt
    total: false
  - name: propertytype
    label: reports.pt.propertytype
    type: string
    source: pt
    total: false
  - name: ownership
    label: reports.pt.ownership
    type: string
    source: pt
    total: false    
  - name: propertycategory
    label: reports.pt.propertycategory
    type: string
    source: pt
    total: false
  - name: businessname
    label: reports.pt.businessname
    type: string
    source: pt
    total: false
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false
  - name: plotsize
    label: reports.pt.plotsize
    type: string
    source: pt
    total: false
  - name: localityname
    label: reports.pt.locality
    type: string
    source: pt
    total: false
  - name: blockname
    label: reports.pt.blockname
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false
  searchParams:
  - name: nameofbusiness
    label: reports.pt.nameofbusinness
    type: string
    source: pt
    isMandatory: false
    searchClause: AND upper(pt.firmbusinessname) LIKE CONCAT('%',upper($nameofbusiness),'%')
  - name: fy
    label: Financial Year
    type: singlevaluelist
    pattern: 'list://2015:2015-16,2016:2016-17,2017:2017-18,2018:2018-19,2019:2019-20,2020:2020-21,2021:2021-22,2022:2022-23,2023:2023-24'
    source: pt
    isMandatory: false
    searchClause: and d.fy like concat('%',$fy,'%')
  - name: usageCat
    label: Usage Category
    type: singlevaluelist
    pattern: 'list://NONRESIDENTIAL:NONRESIDENTIAL,MIXED:MIXED,RESIDENTIAL:RESIDENTIAL'
    source: pt
    isMandatory: false
    searchClause: and pt.propertyusagetype like concat($usageCat,'%') 
  - name: usageSubCat
    label: Usage Sub Category
    type: string
    source: pt
    isMandatory: false
    searchClause: u.unitusage like concat('%',upper($usageSubCat),'%') 
  - name: blockname
    label: reports.pt.blockname
    type: string
    source: pt
    isMandatory: false
    searchClause: AND upper(blockname) LIKE CONCAT('%',upper($blockname),'%')
  - name: localityname
    label: reports.pt.localityname
    type: string
    source: pt
    isMandatory: false
    searchClause: AND upper(localityname) LIKE CONCAT('%',upper($localityname),'%')
  query: |
    --S.no    Service Name	ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number	Existing Property ID    Owner Name    Guardian Name    Total Area (SQ.YARD)    Covered  Area/Built Area (SQ.FEET)    Floors    Occupancy (Rented,Self /Unoccupied)    Type Of Property	Mobile Number    Transcation Mode of Payment    Payment Amount    Payment Date    Email Id	Address
    with owners as
    ( 
    select
      split_part(string_agg(ownername,','),',',1) as ownername,
      split_part(string_agg(mobilenumber,','),',',1) as mobilenumber,
      propertyid
    from report_owners
    where tenantid=$tenantid  and status='ACTIVE' and propertyid in (select propertyid from report_unpaid_demand where tenantid=$tenantid)
    group by propertyid
    ),
    units as
    (
      select distinct propertyid as propertyid,string_agg(usagecategory,',') as unitusage from report_units where propertyid in (select propertyid from report_unpaid_demand where tenantid=$tenantid)  and active=true group by propertyid
    )
    select 
      d.propertyid as propertyid, 
      pt.oldpropertyid as oldpropertyid,
      pt.surveyid as surveyid,
      d.demand as tentativedemand, 
      d.fy as assessmentyear, 
      pt.address as address, 
      pt.blockname as blockname,
      pt.propertyusagetype as propertycategory,
      pt.propertytype as propertytype,
      pt.ownershipcategory as ownership,
      pt.plotsize as plotsize,
      pt.firmbusinessname as businessname,
      pt.localityname as localityname,
      owners.ownername as ownername,
      owners.mobilenumber as mobileno
    from report_unpaid_demand d  
    left join report_properties pt on pt.propertyid=d.propertyid and pt.propertystatus!='INACTIVE'
    inner join units u on u.propertyid=pt.propertyid 
    inner join owners on owners.propertyid=pt.propertyid
    where d.tenantid=$tenantid and d.demand>0
    
    
- reportName: STATEDEFAULTER_REPORT_WITH_LOCALITY_UNPAID_DEMAND_NEW
  decryptionPathId: ULBPTDataDumpReport_V2
  summary: ULB level report
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: propertyid
    label: reports.pt.propertyid
    type: string
    source: pt
    total: false
  - name: oldpropertyid
    label: reports.pt.oldpropertyid
    type: string
    source: pt
    total: false
  - name: surveyid
    label: reports.pt.surveyid
    type: string
    source: pt
    total: false 
  - name: tentativedemand
    label: reports.pt.tentativedemand
    type: string
    source: pt
    total: true
  - name: assessmentyear
    label: reports.pt.assessmentyear
    type: string
    source: pt
    total: false
  - name: propertytype
    label: reports.pt.propertytype
    type: string
    source: pt
    total: false
  - name: ownership
    label: reports.pt.ownership
    type: string
    source: pt
    total: false    
  - name: propertycategory
    label: reports.pt.propertycategory
    type: string
    source: pt
    total: false
  - name: businessname
    label: reports.pt.businessname
    type: string
    source: pt
    total: false
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false
  - name: plotsize
    label: reports.pt.plotsize
    type: string
    source: pt
    total: false
  - name: localityname
    label: reports.pt.locality
    type: string
    source: pt
    total: false
  - name: blockname
    label: reports.pt.blockname
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false
  searchParams:
  - name: nameofbusiness
    label: reports.pt.nameofbusinness
    type: string
    source: pt
    isMandatory: false
    searchClause: AND upper(pt.firmbusinessname) LIKE CONCAT('%',upper($nameofbusiness),'%')
  - name: fy
    label: Financial Year
    type: singlevaluelist
    pattern: 'list://2015:2015-16,2016:2016-17,2017:2017-18,2018:2018-19,2019:2019-20,2020:2020-21,2021:2021-22,2022:2022-23,2023:2023-24'
    source: pt
    isMandatory: false
    searchClause: and d.fy like concat('%',$fy,'%')
  - name: usageCat
    label: Usage Category
    type: singlevaluelist
    pattern: 'list://NONRESIDENTIAL:NONRESIDENTIAL,MIXED:MIXED,RESIDENTIAL:RESIDENTIAL'
    source: pt
    isMandatory: false
    searchClause: and pt.propertyusagetype like concat($usageCat,'%') 
  - name: usageSubCat
    label: Usage Sub Category
    type: string
    source: pt
    isMandatory: false
    searchClause: u.unitusage like concat('%',upper($usageSubCat),'%') 
  - name: blockname
    label: reports.pt.blockname
    type: string
    source: pt
    isMandatory: false
    searchClause: AND upper(blockname) LIKE CONCAT('%',upper($blockname),'%')
  - name: localityname
    label: reports.pt.localityname
    type: string
    source: pt
    isMandatory: false
    searchClause: AND upper(localityname) LIKE CONCAT('%',upper($localityname),'%')
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND pt.tenantid = $ulb    
  query: |
    --S.no    Service Name	ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number	Existing Property ID    Owner Name    Guardian Name    Total Area (SQ.YARD)    Covered  Area/Built Area (SQ.FEET)    Floors    Occupancy (Rented,Self /Unoccupied)    Type Of Property	Mobile Number    Transcation Mode of Payment    Payment Amount    Payment Date    Email Id	Address
    with owners as
    ( 
    select
      split_part(string_agg(ownername,','),',',1) as ownername,
      split_part(string_agg(mobilenumber,','),',',1) as mobilenumber,
      propertyid
    from report_owners
    where tenantid!='pb.testing'  and status='ACTIVE' and propertyid in (select propertyid from report_unpaid_demand where tenantid!='pb.testing')
    group by propertyid
    ),
    units as
    (
      select distinct propertyid as propertyid,string_agg(usagecategory,',') as unitusage from report_units where propertyid in (select propertyid from report_unpaid_demand where tenantid!='pb.testing')  and active=true group by propertyid
    )
    select 
      d.propertyid as propertyid, 
      pt.oldpropertyid as oldpropertyid,
      pt.surveyid as surveyid,
      d.demand as tentativedemand, 
      d.fy as assessmentyear, 
      pt.address as address, 
      pt.blockname as blockname,
      pt.propertyusagetype as propertycategory,
      pt.propertytype as propertytype,
      pt.ownershipcategory as ownership,
      pt.plotsize as plotsize,
      pt.firmbusinessname as businessname,
      pt.localityname as localityname,
      owners.ownername as ownername,
      owners.mobilenumber as mobileno
    from report_unpaid_demand d  
    left join report_properties pt on pt.propertyid=d.propertyid and pt.propertystatus!='INACTIVE'
    inner join units u on u.propertyid=pt.propertyid 
    inner join owners on owners.propertyid=pt.propertyid
    where d.tenantid!='pb.testing' and d.demand>0
 
- reportName: USERNAME_PT
  decryptionPathId: ULBPTDataDumpReport_V2
  summary: USERNAME_PT
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "Legal"
  sourceColumns:
  - name: tenantid
    label: reports.pt.tenantid
    type: string
    source: pt
    total: false
  - name: propertyid
    label: reports.pt.propertyid
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false
  - name: guardianname
    label: reports.pt.guardianname
    type: string
    source: pt
    total: false
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false 
  searchParams:
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND report_owners.tenantid = $ulb    
  query: |
      -- Use CTE to force query plan, compute & use CTE later
            SELECT 
          tenantid,
          propertyid,
          ownername as ownername,
          guardianname as guardianname,       
          mobilenumber as  mobileno 
      from  report_owners
      where 1=1

- reportName: PropertyListReport
  decryptionPathId: ULBPTDataDumpReport_V2
  summary: PT Report for GIS Mapping
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: propertyid
    label: reports.pt.propertyid
    type: string
    source: pt
    total: false
  - name: surveyid
    label: reports.pt.surveyid
    type: string
    source: pt
    total: false
  - name: oldpropertyid
    label: reports.pt.oldpropertyid
    type: string
    source: pt
    total: false
  - name: firmbusinessname
    label: reports.pt.oldpropertyid
    type: string
    source: pt
    total: false
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false
  - name: landarea
    label: reports.pt.landarea
    type: string
    source: pt
    total: false
  - name: usagecategory
    label: reports.pt.usagecategory
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false
  - name: guardianname
    label: reports.pt.guardianname
    type: string
    source: pt
    total: false
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false
  - name: localityname
    label: reports.pt.localityname
    type: string
    source: pt
    total: false
  - name: propertytype
    label: reports.pt.propertytype
    type: string
    source: pt
    total: false
  - name: ownertype
    label: reports.pt.ownertype
    type: string
    source: pt
    total: false
  searchParams:
  query: |
    select *,plotsize as landarea,propertyusagetype as usagecategory,mobilenumber as mobileno 
      from report_properties p
      inner join report_owners o on o.propertyid=p.propertyid
      where p.tenantid=$tenantid and propertystatus='ACTIVE'
  orderby: ORDER BY p.propertyid
     

